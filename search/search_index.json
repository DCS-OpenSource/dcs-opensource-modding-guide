{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DCS Modding Docs # Welcome to the DCS OpenSource communities combined knowledge, this document is not meant to be a complete guide for making a mod. Instead, it serves as a lookup and reference for the many available functions DCS provides. This document will be evolving as new things get added, or discovered. Warning Not all functions have been tested, if you find any errors, please let the team know.","title":"Home"},{"location":"#dcs-modding-docs","text":"Welcome to the DCS OpenSource communities combined knowledge, this document is not meant to be a complete guide for making a mod. Instead, it serves as a lookup and reference for the many available functions DCS provides. This document will be evolving as new things get added, or discovered. Warning Not all functions have been tested, if you find any errors, please let the team know.","title":"DCS Modding Docs"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/","text":"Prop Blur # Model Setup # To configure Prop Blur, animate your model as required with these args: Arg Description Values Animation 407 Prop Rotation -1 to 1 720\u00b0 anticlockwise 413 Prop Pitch Varies Reference TF-51 or F4-U 475 Prop Blade Visibility 0 to 1 Blades only visible at 0 Next, Copy your prop mesh to another blender file (or max) and align the center of the prop with the origin of the model. Then remove most of the mesh, leaving only one blade of the prop. This can vary depending on the type of prop, see two examples below. Ensure the prop has only one material, and the material name matches that of the props material in your main EDM, this will give your prop blur the same texture as your blades. Export this file as an .FBX file, and place the file in your shapes folder (or any mounted shape folder in your project), then move to the next step. Texturing advice # Note The below is from Mag3's 3D artist, who very kindly spilled the beans on how to make the blur look so good :-) Many factors involved really. The F4U has variable pitch blades, with a diameter of roughly 13 feet. Kind of gives that thickness look at all angles. Secondly, ensuring the same material applied in the EDM is identical to the FBX. PBR color values should correct too. For black, check in ModelViewer to see blue (push F8 function key) Except for weathering effects that may cause it to look blue, it needs to be closer to black or a deep dark blue for flat/dull coated objects. Using the HSB values, set it to 0*, 0%, 17% and go from there. If pink or orange, they need adjusted too. Pure colors should look grey (F8) in ModelViewer. Try to keep saturation away from 100%, and any 100% RGB values are not great for the shader. HSB, Orange: I recommend, 13 , 80%, 65% - 75%. It will look dark on texture, but that is ok. HSB, White: 0 , 0%, 65% - 74% Lastly, the collision model's Arg # for rotation should be 370 | 0...1 | 360*, while the main model is 407. Lua Setup # In your plane.lua , you need to define propellorShapeType and propellorShapeName as below O1_BirdDog = { Name = 'O-1E', DisplayName = _('O-1E Bird Dog'), Shape = \"O-1E\", propellorShapeType = \"3ARG_PROC_BLUR\", propellorShapeName = \"o1_blade.fbx\", Also be sure to define these fields in your SFM_Data/engine table: prop_direction = 1, -- pos rotates cw looking fwd neg is ccw prop_pitch_min = 26.0, -- prop pitch min, degrees prop_pitch_max = 82.0, -- prop pitch max, degrees prop_pitch_feather = 90.0, -- prop pitch feather position, degrees if feather < prop_pitch_max no feathering available prop_blades_count = 2, prop_locations = { {2.257, 0.03558, 0}, -- roll, yaw, pitch angle in tangent value }, 3ARG_PROC_BLUR # Note I haven't tested this with pitch, only a fixed pitch prop. The below references a blur sheet, I have not been able to get this in modelviewer, but you can test in game. 3ARG_PROC_BLUR expects three draw args in the model: Arg Function Description A RPM / Phase Drives rotation/blur amount B Blur Visibility / Blend Swaps blade \u2192 blur as RPM rises C Aux / Alpha Extra control for the blur sheet If those args don\u2019t exist or are stuck high in the EDM, you\u2019ll see a permanent disc. Quick checklist in ModelViewer (EDM): Confirm the prop uses 3 separate draw arguments. Spin RPM in the animation panel and check all three change. Ensure there is a static blade mesh and a blur sheet; the visibility of each is bound to those args (blade visible at low RPM, blur visible only above threshold). 2ARG_BLUR # If you only have a blur sheet (no static blades), it will always look like a disc at zero RPM. If you don\u2019t need the 3-arg system, switch to a simpler mode in Lua, e.g.: propellorShapeType = \"2ARG_BLUR\" \u2026and wire just two draw args in the EDM (static/blur). But the real fix is correcting the EDM arg bindings so 3ARG works. For AI-only aircraft where the prop is just for looks, the easiest is: propellorShapeType = \"static\" propellorShapeName = \"tbm_avenger_blade.FBX\" That way, DCS just draws the prop mesh as-is with no argument-driven blur. It\u2019ll look like a stationary prop at all times \u2014 no fake spin \u2014 but it avoids the \u201cperma-disc\u201d issue entirely. Use 1ARG_BLUR and bind it to any available dummy arg in shape_table_data (doesn\u2019t even need to move). Or keep it static and make a blurred texture for the mesh so it always looks like a \u201cmotion smear\u201d. If you want it to actually switch from blades \u2192 blur when spinning, you\u2019ll need to add two prop arguments in the EDM in ModelViewer / 3ds Max: One arg hides the static blades at speed. One arg shows the blur mesh at speed. That\u2019s the 2ARG_BLUR setup, and it\u2019s the simplest dynamic one DCS supports. EFM Setup # You will need to add the below code to your main cpp file with all your other ED_FM functions. Specifically inside ed_fm_get_param . Setting thse properly will get the prop blurring nicely switch (index) { case ED_FM_ENGINE_1_THRUST: // Thrust of engine in newtons, [N] return Prop.getThrust(); // case ED_FM_ENGINE_1_RELATED_THRUST: /// Related thrust in relation to \"max\" or also called \"dry thrust\" thrust of that engine // return ??? for now, idk what max thrust is right now; case ED_FM_ENGINE_1_RPM: // Engine Fan RPM (fan RPM for turbofan, propeller RPM for turboprop, etc.) case ED_FM_PROPELLER_1_RPM: // Propeller RPM, for helicopters this is main rotor RPM case ED_FM_ENGINE_1_CORE_RPM: // 0..RPMmax Engine and prop sound return Engine.getRPM(); case ED_FM_ENGINE_1_RELATED_RPM: // [0-1] return Engine.getRPMFraction(); case ED_FM_ENGINE_1_CORE_RELATED_RPM: // [0-1] displayed as RPM% in 2D F2 view return Engine.getRPMFraction(); case ED_FM_ENGINE_1_FAN_PHASE: // [0 - 2pi] Required to get the arg 407 to trigger the spin at low RPM return Prop.getFanPhase(); } Note See FM/wHumanCustomPhysicsAPI.h in the EFM API for more detailed descriptions of these. Some engines have different engine RPMs and Prop RPMs, so the values you set to the params above may need to vary Prop.getThrust(); these functions in the above code are custom, pulling data from my simulation, and are not built in. The Result # If you've done the above correctly, you should see something similar to this.","title":"Prop Blur"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#prop-blur","text":"","title":"Prop Blur"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#model-setup","text":"To configure Prop Blur, animate your model as required with these args: Arg Description Values Animation 407 Prop Rotation -1 to 1 720\u00b0 anticlockwise 413 Prop Pitch Varies Reference TF-51 or F4-U 475 Prop Blade Visibility 0 to 1 Blades only visible at 0 Next, Copy your prop mesh to another blender file (or max) and align the center of the prop with the origin of the model. Then remove most of the mesh, leaving only one blade of the prop. This can vary depending on the type of prop, see two examples below. Ensure the prop has only one material, and the material name matches that of the props material in your main EDM, this will give your prop blur the same texture as your blades. Export this file as an .FBX file, and place the file in your shapes folder (or any mounted shape folder in your project), then move to the next step.","title":"Model Setup"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#texturing-advice","text":"Note The below is from Mag3's 3D artist, who very kindly spilled the beans on how to make the blur look so good :-) Many factors involved really. The F4U has variable pitch blades, with a diameter of roughly 13 feet. Kind of gives that thickness look at all angles. Secondly, ensuring the same material applied in the EDM is identical to the FBX. PBR color values should correct too. For black, check in ModelViewer to see blue (push F8 function key) Except for weathering effects that may cause it to look blue, it needs to be closer to black or a deep dark blue for flat/dull coated objects. Using the HSB values, set it to 0*, 0%, 17% and go from there. If pink or orange, they need adjusted too. Pure colors should look grey (F8) in ModelViewer. Try to keep saturation away from 100%, and any 100% RGB values are not great for the shader. HSB, Orange: I recommend, 13 , 80%, 65% - 75%. It will look dark on texture, but that is ok. HSB, White: 0 , 0%, 65% - 74% Lastly, the collision model's Arg # for rotation should be 370 | 0...1 | 360*, while the main model is 407.","title":"Texturing advice"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#lua-setup","text":"In your plane.lua , you need to define propellorShapeType and propellorShapeName as below O1_BirdDog = { Name = 'O-1E', DisplayName = _('O-1E Bird Dog'), Shape = \"O-1E\", propellorShapeType = \"3ARG_PROC_BLUR\", propellorShapeName = \"o1_blade.fbx\", Also be sure to define these fields in your SFM_Data/engine table: prop_direction = 1, -- pos rotates cw looking fwd neg is ccw prop_pitch_min = 26.0, -- prop pitch min, degrees prop_pitch_max = 82.0, -- prop pitch max, degrees prop_pitch_feather = 90.0, -- prop pitch feather position, degrees if feather < prop_pitch_max no feathering available prop_blades_count = 2, prop_locations = { {2.257, 0.03558, 0}, -- roll, yaw, pitch angle in tangent value },","title":"Lua Setup"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#3arg_proc_blur","text":"Note I haven't tested this with pitch, only a fixed pitch prop. The below references a blur sheet, I have not been able to get this in modelviewer, but you can test in game. 3ARG_PROC_BLUR expects three draw args in the model: Arg Function Description A RPM / Phase Drives rotation/blur amount B Blur Visibility / Blend Swaps blade \u2192 blur as RPM rises C Aux / Alpha Extra control for the blur sheet If those args don\u2019t exist or are stuck high in the EDM, you\u2019ll see a permanent disc. Quick checklist in ModelViewer (EDM): Confirm the prop uses 3 separate draw arguments. Spin RPM in the animation panel and check all three change. Ensure there is a static blade mesh and a blur sheet; the visibility of each is bound to those args (blade visible at low RPM, blur visible only above threshold).","title":"3ARG_PROC_BLUR"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#2arg_blur","text":"If you only have a blur sheet (no static blades), it will always look like a disc at zero RPM. If you don\u2019t need the 3-arg system, switch to a simpler mode in Lua, e.g.: propellorShapeType = \"2ARG_BLUR\" \u2026and wire just two draw args in the EDM (static/blur). But the real fix is correcting the EDM arg bindings so 3ARG works. For AI-only aircraft where the prop is just for looks, the easiest is: propellorShapeType = \"static\" propellorShapeName = \"tbm_avenger_blade.FBX\" That way, DCS just draws the prop mesh as-is with no argument-driven blur. It\u2019ll look like a stationary prop at all times \u2014 no fake spin \u2014 but it avoids the \u201cperma-disc\u201d issue entirely. Use 1ARG_BLUR and bind it to any available dummy arg in shape_table_data (doesn\u2019t even need to move). Or keep it static and make a blurred texture for the mesh so it always looks like a \u201cmotion smear\u201d. If you want it to actually switch from blades \u2192 blur when spinning, you\u2019ll need to add two prop arguments in the EDM in ModelViewer / 3ds Max: One arg hides the static blades at speed. One arg shows the blur mesh at speed. That\u2019s the 2ARG_BLUR setup, and it\u2019s the simplest dynamic one DCS supports.","title":"2ARG_BLUR"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#efm-setup","text":"You will need to add the below code to your main cpp file with all your other ED_FM functions. Specifically inside ed_fm_get_param . Setting thse properly will get the prop blurring nicely switch (index) { case ED_FM_ENGINE_1_THRUST: // Thrust of engine in newtons, [N] return Prop.getThrust(); // case ED_FM_ENGINE_1_RELATED_THRUST: /// Related thrust in relation to \"max\" or also called \"dry thrust\" thrust of that engine // return ??? for now, idk what max thrust is right now; case ED_FM_ENGINE_1_RPM: // Engine Fan RPM (fan RPM for turbofan, propeller RPM for turboprop, etc.) case ED_FM_PROPELLER_1_RPM: // Propeller RPM, for helicopters this is main rotor RPM case ED_FM_ENGINE_1_CORE_RPM: // 0..RPMmax Engine and prop sound return Engine.getRPM(); case ED_FM_ENGINE_1_RELATED_RPM: // [0-1] return Engine.getRPMFraction(); case ED_FM_ENGINE_1_CORE_RELATED_RPM: // [0-1] displayed as RPM% in 2D F2 view return Engine.getRPMFraction(); case ED_FM_ENGINE_1_FAN_PHASE: // [0 - 2pi] Required to get the arg 407 to trigger the spin at low RPM return Prop.getFanPhase(); } Note See FM/wHumanCustomPhysicsAPI.h in the EFM API for more detailed descriptions of these. Some engines have different engine RPMs and Prop RPMs, so the values you set to the params above may need to vary Prop.getThrust(); these functions in the above code are custom, pulling data from my simulation, and are not built in.","title":"EFM Setup"},{"location":"Aircraft/EFM/Useful_bits/prop_blur/#the-result","text":"If you've done the above correctly, you should see something similar to this.","title":"The Result"},{"location":"Aircraft/Lua/Devices/avLuaDevice/","text":"avLuaDevice # post_initialize() # Called once when you load into your plane, very useful for setting hot/cold start variables. Note Any hot/cold start setup should be put in here. See LockOn_Options.init_conditions for more details. Usage # function post_initalize() print_message_to_user(\"Welcome to your plane\") end update() # Usage # The update function runs once every update_time_step seconds. local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local timer = 0 function update() print_message_to_user(\"Timer: \" .. timer .. \" seconds\") timer = timer + update_time_step end SetCommand() # TODO CockpitEvent() # Usage # The CockpitEvent function can be used to detect certain events happening in game, such as rearming and refueling, wheel chocks and more. Example usage can be seen below local dev = GetSelf() dev:listen_event(\"WheelChocksOn\") function CockpitEvent(event, val) if event == \"WheelChocksOn\" then print_message_to_user(\"Wheel Chocks Equipped\") end end Warning You must use dev:listen_event(eventName) to listen for your event Event List # -- Sourced from a mixture of modding hub and the A-29B -- Rearm/Refuel events dev:listen_event(\"WeaponRearmComplete\") dev:listen_event(\"WeaponRearmFirstStep\") dev:listen_event(\"WeaponRearmSingleStepComplete\") dev:listen_event(\"ReloadDone\") dev:listen_event(\"RefuelDone\") dev:listen_event(\"Repair\") dev:listen_event(\"refuel\") dev:listen_event(\"refuelcomplete\") dev:listen_event(\"refueldone\") dev:listen_event(\"UnlimitedWeaponStationRestore\") dev:listen_event(\"initChaffFlarePayload\") -- Ground Power dev:listen_event(\"GroundPowerOn\") dev:listen_event(\"GroundPowerOff\") -- Ground Air dev:listen_event(\"GroundAirOff\") dev:listen_event(\"GroundAirOn\") dev:listen_event(\"GroundAirFailure\") dev:listen_event(\"GroundAirApplyOn\") dev:listen_event(\"GroundAirApplyOff\") dev:listen_event(\"GroundAirApplyFailure\") -- Wheel Chocks dev:listen_event(\"WheelChocksOn\") dev:listen_event(\"WheelChocksOff\") -- Misc Ground Crew dev:listen_event(\"CanopyOpen\") dev:listen_event(\"CanopyClose\") dev:listen_event(\"setup_HMS\") dev:listen_event(\"setup_NVG\") -- Works the same as release() function as shown in the example device dev:listen_event(\"cockpit_release\") -- Unknown dev:listen_event(\"DisableTurboGear\") dev:listen_event(\"EnableTurboGear\") dev:listen_event(\"switch_datalink\") dev:listen_event(\"LinkNOPtoNet\") dev:listen_event(\"UnlinkNOPfromNet\") dev:listen_event(\"EGI_TurnOff\") dev:listen_event(\"EGI_TurnOn\") dev:listen_event(\"RestoreEGIoperation\") dev:listen_event(\"TISLmodeChange\") dev:listen_event(\"OnNewNetPlane\") release() # The release() function is useful if you need to clean something up that isnt reset by reloading. It is called by DCS when you: Die Reload Return to Menu Change slots Note There isn't really a use for this other than some niche cases, but its available if needed. 99% of the time simply reseting/reloading will be more than enough Usage # function release() print_message_to_user(\"Cleanup\") end Example Device # The below example is a bare bones lua device. This will serve as your primary method of creating systems in lua local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local dev = GetSelf() -- Get the current device object function post_initialize() -- Called once by DCS when you load into the cockpit print_message_to_user(\"Hello from basic device\") end function release() -- Called once by DCS when you die, unload or close the mission end function update() -- Called by DCS one every update_time_step seconds end function SetCommand(command, value) -- Listens for commands from Keybinds or clickables end function CockpitEvent(event,val) -- function called by DCS when event happens end need_to_be_closed = false -- close lua state after initialization Warning You are not able to parse data between different devices as they are seperate global contexts","title":"avLuaDevice"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#avluadevice","text":"","title":"avLuaDevice"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#post_initialize","text":"Called once when you load into your plane, very useful for setting hot/cold start variables. Note Any hot/cold start setup should be put in here. See LockOn_Options.init_conditions for more details.","title":"post_initialize()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage","text":"function post_initalize() print_message_to_user(\"Welcome to your plane\") end","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#update","text":"","title":"update()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage_1","text":"The update function runs once every update_time_step seconds. local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local timer = 0 function update() print_message_to_user(\"Timer: \" .. timer .. \" seconds\") timer = timer + update_time_step end","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#setcommand","text":"TODO","title":"SetCommand()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#cockpitevent","text":"","title":"CockpitEvent()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage_2","text":"The CockpitEvent function can be used to detect certain events happening in game, such as rearming and refueling, wheel chocks and more. Example usage can be seen below local dev = GetSelf() dev:listen_event(\"WheelChocksOn\") function CockpitEvent(event, val) if event == \"WheelChocksOn\" then print_message_to_user(\"Wheel Chocks Equipped\") end end Warning You must use dev:listen_event(eventName) to listen for your event","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#event-list","text":"-- Sourced from a mixture of modding hub and the A-29B -- Rearm/Refuel events dev:listen_event(\"WeaponRearmComplete\") dev:listen_event(\"WeaponRearmFirstStep\") dev:listen_event(\"WeaponRearmSingleStepComplete\") dev:listen_event(\"ReloadDone\") dev:listen_event(\"RefuelDone\") dev:listen_event(\"Repair\") dev:listen_event(\"refuel\") dev:listen_event(\"refuelcomplete\") dev:listen_event(\"refueldone\") dev:listen_event(\"UnlimitedWeaponStationRestore\") dev:listen_event(\"initChaffFlarePayload\") -- Ground Power dev:listen_event(\"GroundPowerOn\") dev:listen_event(\"GroundPowerOff\") -- Ground Air dev:listen_event(\"GroundAirOff\") dev:listen_event(\"GroundAirOn\") dev:listen_event(\"GroundAirFailure\") dev:listen_event(\"GroundAirApplyOn\") dev:listen_event(\"GroundAirApplyOff\") dev:listen_event(\"GroundAirApplyFailure\") -- Wheel Chocks dev:listen_event(\"WheelChocksOn\") dev:listen_event(\"WheelChocksOff\") -- Misc Ground Crew dev:listen_event(\"CanopyOpen\") dev:listen_event(\"CanopyClose\") dev:listen_event(\"setup_HMS\") dev:listen_event(\"setup_NVG\") -- Works the same as release() function as shown in the example device dev:listen_event(\"cockpit_release\") -- Unknown dev:listen_event(\"DisableTurboGear\") dev:listen_event(\"EnableTurboGear\") dev:listen_event(\"switch_datalink\") dev:listen_event(\"LinkNOPtoNet\") dev:listen_event(\"UnlinkNOPfromNet\") dev:listen_event(\"EGI_TurnOff\") dev:listen_event(\"EGI_TurnOn\") dev:listen_event(\"RestoreEGIoperation\") dev:listen_event(\"TISLmodeChange\") dev:listen_event(\"OnNewNetPlane\")","title":"Event List"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#release","text":"The release() function is useful if you need to clean something up that isnt reset by reloading. It is called by DCS when you: Die Reload Return to Menu Change slots Note There isn't really a use for this other than some niche cases, but its available if needed. 99% of the time simply reseting/reloading will be more than enough","title":"release()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage_3","text":"function release() print_message_to_user(\"Cleanup\") end","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#example-device","text":"The below example is a bare bones lua device. This will serve as your primary method of creating systems in lua local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local dev = GetSelf() -- Get the current device object function post_initialize() -- Called once by DCS when you load into the cockpit print_message_to_user(\"Hello from basic device\") end function release() -- Called once by DCS when you die, unload or close the mission end function update() -- Called by DCS one every update_time_step seconds end function SetCommand(command, value) -- Listens for commands from Keybinds or clickables end function CockpitEvent(event,val) -- function called by DCS when event happens end need_to_be_closed = false -- close lua state after initialization Warning You are not able to parse data between different devices as they are seperate global contexts","title":"Example Device"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/","text":"avSimpleWeaponSystem # avSimpleWeaponSystem serves as the modders method of interacting with weapons, rearming etc. Note All of the standard functions from avLuaDevice are available in avSimpleWeapon System such as update() or SetCommand() Loading the Device # The device should be configured in device_init.lua as normal, but with \"avSimpleWeaponSystem\" instead of \"avLuaDevice\" creators[devices.WEAPON_SYSTEM] = {\"avSimpleWeaponSystem\" ,LockOn_Options.script_path..\"Systems/weapon_system.lua\"} Warning To use any of the functions listed below, you must add local dev = GetSelf() to the top of your file, this allows you to access the weapon functions from avSimpleWeaponSystem All functions are Zero Indexed, so interacting with Pylon 1 would be done with dev:get_station_info(0) Useful bits # wsTypes # Loading the wsTypes.lua file from the core allows you to reference weapons by type dofile(LockOn_Options.common_script_path..\"../../../Database/wsTypes.lua\") This is useful for determining weapon category in get_station_info() API Reference # Below are the available functions for avSimpleWeaponSystem : Functions marked with [UNVERIFIED] are untested, feel free to contribute fixes. SetDamage() # [UNVERIFIED] drop_chaff() # Dispenses a specified number of chaff cartridges from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED] Parameters # count (number): Number of chaff cartridges to release. dispenser (number): Index of the chaff dispenser to use. drop_flare() # Dispenses a specified number of flares from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED] Parameters # count (number): Number of flares to release. dispenser (number): Index of the flare dispenser to use. get_chaff_count() # Returns the current number of chaff cartridges available. [UNVERIFIED] get_flare_count() # Returns the current number of flares available. [UNVERIFIED] emergency_jettison() # Jettison either all stores, or specific stores if parsed a pylon number Parameters # index (number, optional ): Zero-indexed pylon number to jettison stores from. If omitted, all stores will be jettisoned. emergency_jettison_rack() # Jettisons the entire weapon rack in an emergency. [UNVERIFIED] get_station_info() # Returns a table of information about the indexed pylon See wsTypes above Parameters # index (number): Zero indexed pylon number Returns # -- Rocket pod example -- resulting table station_info = { wsType = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 32, -- wsType_Container level4 = 358, -- ??? }, adapter = { level1 = 0, level2 = 0, level3 = 0, level4 = 0, }, weapon = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 33, -- wsType_Rocket level4 = 276, -- ??? }, CLSID = \"{LAU68_FFAR_MK5HEAT}\" count = 7 -- how many weapons are in the container container = true } Usage # local dev = GetSelf() local pylon = dev:get_station_info(0) -- returns pylon1 info launch_station() # Launches the weapon from the specified station. Parameters # station (number): Zero Indexed station number to launch from. Usage # local dev = GetSelf() local pylon = dev:launch_station(0) -- launch pylon1 select_station() # Selects the specified weapon station, needed to activate seeker heads like AIM-9s etc. [[UNVERIFIED]] Parameters # station (number): The station number to select. set_ECM_status() # Sets the status of the ECM system. [[UNVERIFIED]] get_ECM_status() # Returns the current status of the Electronic Countermeasure (ECM) system. [UNVERIFIED] set_target_range() # Sets the target range for the weapon system. [[UNVERIFIED]] set_target_span() # Sets the target span for the weapon system. [[UNVERIFIED]] get_target_range() # Returns the current target range set in the weapon system. [UNVERIFIED] get_target_span() # Returns the current target span set in the weapon system. [UNVERIFIED]","title":"avSimpleWeaponSystem"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#avsimpleweaponsystem","text":"avSimpleWeaponSystem serves as the modders method of interacting with weapons, rearming etc. Note All of the standard functions from avLuaDevice are available in avSimpleWeapon System such as update() or SetCommand()","title":"avSimpleWeaponSystem"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#loading-the-device","text":"The device should be configured in device_init.lua as normal, but with \"avSimpleWeaponSystem\" instead of \"avLuaDevice\" creators[devices.WEAPON_SYSTEM] = {\"avSimpleWeaponSystem\" ,LockOn_Options.script_path..\"Systems/weapon_system.lua\"} Warning To use any of the functions listed below, you must add local dev = GetSelf() to the top of your file, this allows you to access the weapon functions from avSimpleWeaponSystem All functions are Zero Indexed, so interacting with Pylon 1 would be done with dev:get_station_info(0)","title":"Loading the Device"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#useful-bits","text":"","title":"Useful bits"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#wstypes","text":"Loading the wsTypes.lua file from the core allows you to reference weapons by type dofile(LockOn_Options.common_script_path..\"../../../Database/wsTypes.lua\") This is useful for determining weapon category in get_station_info()","title":"wsTypes"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#api-reference","text":"Below are the available functions for avSimpleWeaponSystem : Functions marked with [UNVERIFIED] are untested, feel free to contribute fixes.","title":"API Reference"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#setdamage","text":"[UNVERIFIED]","title":"SetDamage()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#drop_chaff","text":"Dispenses a specified number of chaff cartridges from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED]","title":"drop_chaff()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters","text":"count (number): Number of chaff cartridges to release. dispenser (number): Index of the chaff dispenser to use.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#drop_flare","text":"Dispenses a specified number of flares from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED]","title":"drop_flare()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_1","text":"count (number): Number of flares to release. dispenser (number): Index of the flare dispenser to use.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_chaff_count","text":"Returns the current number of chaff cartridges available. [UNVERIFIED]","title":"get_chaff_count()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_flare_count","text":"Returns the current number of flares available. [UNVERIFIED]","title":"get_flare_count()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#emergency_jettison","text":"Jettison either all stores, or specific stores if parsed a pylon number","title":"emergency_jettison()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_2","text":"index (number, optional ): Zero-indexed pylon number to jettison stores from. If omitted, all stores will be jettisoned.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#emergency_jettison_rack","text":"Jettisons the entire weapon rack in an emergency. [UNVERIFIED]","title":"emergency_jettison_rack()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_station_info","text":"Returns a table of information about the indexed pylon See wsTypes above","title":"get_station_info()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_3","text":"index (number): Zero indexed pylon number","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#returns","text":"-- Rocket pod example -- resulting table station_info = { wsType = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 32, -- wsType_Container level4 = 358, -- ??? }, adapter = { level1 = 0, level2 = 0, level3 = 0, level4 = 0, }, weapon = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 33, -- wsType_Rocket level4 = 276, -- ??? }, CLSID = \"{LAU68_FFAR_MK5HEAT}\" count = 7 -- how many weapons are in the container container = true }","title":"Returns"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#usage","text":"local dev = GetSelf() local pylon = dev:get_station_info(0) -- returns pylon1 info","title":"Usage"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#launch_station","text":"Launches the weapon from the specified station.","title":"launch_station()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_4","text":"station (number): Zero Indexed station number to launch from.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#usage_1","text":"local dev = GetSelf() local pylon = dev:launch_station(0) -- launch pylon1","title":"Usage"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#select_station","text":"Selects the specified weapon station, needed to activate seeker heads like AIM-9s etc. [[UNVERIFIED]]","title":"select_station()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_5","text":"station (number): The station number to select.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#set_ecm_status","text":"Sets the status of the ECM system. [[UNVERIFIED]]","title":"set_ECM_status()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_ecm_status","text":"Returns the current status of the Electronic Countermeasure (ECM) system. [UNVERIFIED]","title":"get_ECM_status()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#set_target_range","text":"Sets the target range for the weapon system. [[UNVERIFIED]]","title":"set_target_range()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#set_target_span","text":"Sets the target span for the weapon system. [[UNVERIFIED]]","title":"set_target_span()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_target_range","text":"Returns the current target range set in the weapon system. [UNVERIFIED]","title":"get_target_range()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_target_span","text":"Returns the current target span set in the weapon system. [UNVERIFIED]","title":"get_target_span()"},{"location":"Aircraft/Lua/Indicators/controllers/","text":"change texture state does work, see here https://discord.com/channels/319866702840201217/319866817797423104/986595546884087818","title":"Controllers"},{"location":"Aircraft/Lua/Modules/Terrain/","text":"Terrain Module # Loading the module # local Terrain = require(\"terrain\") Warning Non functional or untested functions will be tagged with [UNVERIFIED] TODO: Test functions and verify descriptions Method Params Description Create \u2014 Instantiate or reset the terrain subsystem. FindNearestPoint x, y, range Find the nearest valid point (e.g. on a road) to (x, y) within range . FindOptimalPath x1, y1, x2, y2 Compute the optimal path (e.g. along roads) from (x1, y1) to (x2, y2) . GetHeight x, y Return terrain elevation at (x, y) . GetMGRScoordinates x, y Return the MGRS grid coordinate for (x, y) . GetSeasons \u2014 Return a table of season identifiers or data. GetSurfaceHeightWithSeabed x, y Return both surface elevation and depth of sea bed at (x, y) . GetSurfaceType x, y Return the type of surface (e.g. \u201cwater\u201d, \u201casphalt\u201d) at (x, y) . GetTerrainConfig type Obtain configuration data for terrain subtypes (e.g. \u201cAirdromes\u201d). Init terrain_config, reason, date Initialize terrain data with a config table, reason code, and date. InitLight terrain_config, reason, date Initialize only the lighting component of the terrain system. Release \u2014 Clean up or unload terrain resources. convertLatLonToMeters lat, lon Convert geographic coordinates (latitude, longitude) into simulation meters. convertMGRStoMeters mgrs Convert an MGRS string into simulation meters. convertMetersToLatLon x, y Convert simulation\u2010space meters back to geographic coordinates. findPathOnRoads type, x1, y1, x2, y2 Find a path along \u201croads\u201d or \u201crailroads\u201d between two points. getBeacons \u2014 Retrieve a list of all beacon objects in the terrain. getClosestPointOnRoads type, x, y Find the nearest point on the specified network (\u201croads\u201d or \u201crailroads\u201d) to (x, y) . getClosestValidPoint type, x, y Find the nearest valid point of specified type (e.g. \u201cland\u201d) to (x, y) . getCrossParam \u2014 Retrieve cross\u2010parameter data (undocumented use case). getObjectPosition o Return the map position of a given scene object. getObjectsAtMapPoint mapX, mapY List all objects whose footprint overlaps the map point. getRadio roadnet Get radio frequencies for an airport identified by its road-network string. getRunwayHeading roadnet Return the magnetic heading of the primary runway for the given airport. getRunwayList roadnet Return runway metadata: course, edge names and coordinates. getStandList roadnet Return a list of aircraft stands with locations. getTechSkinByDate day, month Retrieve terrain \u201ctech skin\u201d (appearance) valid on the specified date. getTempratureRangeByDate day, month Return expected temperature range for the given day/month. getTerrainShpare \u2014 (Undocumented\u2014likely returns shape data for terrain meshes.) isVisible x1, alt1, y1, x2, alt2, y2 Raycast LOS check between two points at specified altitudes; returns true if unobstructed. Create # Signature: Terrain.Create() Description: [UNVERIFIED] Instantiate or reset the terrain subsystem. Call this if you need to clear any existing terrain data before re-initializing or running a new mission. Example: -- Start with a fresh terrain state Terrain.Create() FindNearestPoint # Signature: px, py = Terrain.FindNearestPoint(x, y, range) Parameters: - x, y (number): world coordinates from which to search. - range (number): maximum search radius in meters. Returns: - px, py (number): coordinates of the nearest valid point (e.g. on a road). Description: [UNVERIFIED] Searches outward up to range meters and returns the closest point on the specified network. Useful for snapping units to roads or paths. Example: local playerX, playerY = 50000, 75000 local roadX, roadY = Terrain.FindNearestPoint(playerX, playerY, 2000) print(\"Snap to road at:\", roadX, roadY) FindOptimalPath # Signature: pathTable = Terrain.FindOptimalPath(x1, y1, x2, y2) Parameters: - x1, y1 (number): start coordinates. - x2, y2 (number): end coordinates. Returns: - pathTable (table): an array of { x = ..., y = ... } waypoints along the optimal route (e.g. following roads). Description: [UNVERIFIED] Runs a graph search (A or Dijkstra) over the terrain network to produce a drivable path. Example: * local route = Terrain.FindOptimalPath(10000, 20000, 30000, 40000) for i, pt in ipairs(route) do print(i, pt.x, pt.y) end GetHeight # Signature: h = Terrain.GetHeight(x, y) Parameters: - x, y (number): query coordinates. Returns: - h (number): terrain elevation (meters above sea level). Description: Quickly sample the terrain elevation. Example: local elev = Terrain.GetHeight(45000, 82000) print(\"Elevation is\", elev, \"m\") GetMGRScoordinates # Signature: mgrs = Terrain.GetMGRScoordinates(x, y) Parameters: - x, y (number): world coordinates. Returns: - mgrs (string): MGRS grid reference (e.g. \"34TDF1234567890\"). Description: Convert from simulation-space meters to a human-readable MGRS coordinate. Example: local gridRef = Terrain.GetMGRScoordinates(345000, 789000) print(\"Grid:\", gridRef) GetSeasons # Signature: seasons = Terrain.GetSeasons() Returns: - seasons (table): list of available season identifiers (e.g. { \"winter\", \"summer\", ... }). Description: [UNVERIFIED] Fetch the set of seasons for which terrain textures and lighting are defined. Example: for _, season in ipairs(Terrain.GetSeasons()) do print(\"Available season:\", season) end GetSurfaceHeightWithSeabed # Signature: surfaceH, depth = Terrain.GetSurfaceHeightWithSeabed(x, y) Parameters: - x, y (number): coordinates over water. Returns: - surfaceH (number): elevation of the water surface. - depth (number): depth from surface to seabed (positive number). Description: [UNVERIFIED] Useful for amphibious operations to know both water level and bottom depth. Example: local surf, d = Terrain.GetSurfaceHeightWithSeabed(20000, 15000) print(\"Water at\", surf, \"m, seabed\", d, \"m below\") GetSurfaceType # Signature: stype = Terrain.GetSurfaceType(x, y) Parameters: - x, y (number): query location. Returns: - stype (string): surface material. \"land\" , \"sea\" , \"lake\" , \"river\" Description: Detect what kind of surface occupies a coordinate. Example: local mat = Terrain.GetSurfaceType(10200, 20500) print(\"Surface is\", mat) GetTerrainConfig # Signature: cfg = Terrain.GetTerrainConfig(type) Parameters: - type (string): e.g. \"Airdromes\". Returns: - cfg (table): configuration block for that terrain element (bounds, default camera, etc.). Description: [UNVERIFIED] Inspect built-in metadata for things like airfield layout. Example: local airCfg = Terrain.GetTerrainConfig(\"Airdromes\") print(\"Airfield NE bound:\", airCfg.NE_bound.x, airCfg.NE_bound.y) Init # Signature: Terrain.Init(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: local cfg = Terrain.GetTerrainConfig(\"Airdromes\") Terrain.Init(cfg, \"mission_start\", { year=2025, month=7, day=7 }) InitLight # Signature: Terrain.InitLight(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: Terrain.InitLight(airCfg, \"time_change\", { year=2025, month=12, day=1 }) Release # Signature: Terrain.Release() Description: [UNVERIFIED] none. Example: Terrain.Release() convertLatLonToMeters # Signature: x, y = Terrain.convertLatLonToMeters(lat, lon) Parameters: - lat, lon (number): geographic coordinates in degrees. Returns: - x, y (number): simulation meters. Description: Project WGS84 lat/lon into the simulator\u2019s local flat coordinate system. Example: local mx, my = Terrain.convertLatLonToMeters(34.0522, -118.2437) convertMGRStoMeters # Signature: x, y = Terrain.convertMGRStoMeters(mgrs) Parameters: - mgrs (string): MGRS reference. Returns: - x, y (number): simulation meters. Description: Inverse of GetMGRScoordinates. Example: local ux, uy = Terrain.convertMGRStoMeters(\"33TUN1234567890\") convertMetersToLatLon # Signature: lat, lon = Terrain.convertMetersToLatLon(x, y) Parameters: - x, y (number): simulation coordinates. Returns: - lat, lon (number): geographic degrees. Description: Inverse map projection back to WGS84. Example: local \u03c6, \u03bb = Terrain.convertMetersToLatLon(400000, 5000000) findPathOnRoads # Signature: pathTable = Terrain.findPathOnRoads(type, x1, y1, x2, y2) Parameters: - type (string): \"roads\" or \"railroads\". - x1, y1 , x2, y2 (number): endpoints. Returns: - pathTable (table): waypoint array. Description: [UNVERIFIED] none. Example: local trainRoute = Terrain.findPathOnRoads(\"railroads\", 1000, 2000, 8000, 9000) getBeacons # Signature: beacons = Terrain.getBeacons() Returns: - beacons (table): list of beacon objects, each with position and frequency. Description: Enumerate nav-beacons placed in the terrain. Example: for _, b in ipairs(Terrain.getBeacons()) do print(\"Beacon\", b.id, \"at\", b.x, b.y, \"freq\", b.freq) end getClosestPointOnRoads # Signature: px, py = Terrain.getClosestPointOnRoads(type, x, y) Parameters: - type (string): \"roads\" or \"railroads\". - x, y (number): query point. Returns: - px, py (number): on-network coordinates. Description: [UNVERIFIED] none. Example: local rx, ry = Terrain.getClosestPointOnRoads(\"roads\", 12345, 67890) getClosestValidPoint # Signature: px, py = Terrain.getClosestValidPoint(type, x, y) Parameters: - type (string): e.g. \"land\". - x, y (number): input coords. Returns: - px, py (number): nearest valid location of that type. Description: [UNVERIFIED] none. Example: local fx, fy = Terrain.getClosestValidPoint(\"land\", helicopterX, helicopterY) getCrossParam # Signature: param = Terrain.getCrossParam() Returns: - param (any): undocumented cross-parameter data. Description: Only for advanced use\u2014internal terrain tuning. Example: local cp = Terrain.getCrossParam() print(\"Cross param:\", cp) getObjectPosition # Signature: ox, oy = Terrain.getObjectPosition(obj) Parameters: - obj (Object): engine object reference. Returns: - ox, oy (number): its map position. Description: [UNVERIFIED] none. Example: local x, y = Terrain.getObjectPosition(myVehicle) getObjectsAtMapPoint # Signature: list = Terrain.getObjectsAtMapPoint(mapX, mapY) Parameters: - mapX, mapY (number): query location. Returns: - list (table): all objects overlapping that point. Description: [UNVERIFIED] none. Example: local objs = Terrain.getObjectsAtMapPoint(5000, 6000) print(\"Found\", #objs, \"objects\") getRadio # Signature: radios = Terrain.getRadio(roadnet) Parameters: - roadnet (string): airport identifier. Returns: - radios (table): frequency settings for that airfield\u2019s comms. Description: Obtain tower/ground/approach frequencies. Example: local freqs = Terrain.getRadio(\"KSFO_roadnet\") print(freqs.tower, freqs.ground) getRunwayHeading # Signature: hdg = Terrain.getRunwayHeading(roadnet) Parameters: - roadnet (string): airport ID. Returns: - hdg (number): magnetic heading of the primary runway. Description: Useful for HUD wind-correction and runway-alignment cues. Example: local rHdg = Terrain.getRunwayHeading(\"RJTT_roadnet\") print(\"Runway heading:\", rHdg) getRunwayList # Signature: runways = Terrain.getRunwayList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - runways (table): each entry contains: - course (number): runway heading - edge1name (string), edge1x , edge1y (number): name and coordinates of one end - edge2name (string), edge2x , edge2y (number): name and coordinates of the opposite end Description: Enumerate all runways at the specified airfield, returning their endpoints and headings. Example: for _, rw in ipairs(Terrain.getRunwayList(\"EGLL_roadnet\")) do print(\"RW\", rw.edge1name, \"to\", rw.edge2name, \"heading\", rw.course) end getStandList # Signature: stands = Terrain.getStandList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - stands (table): list of parking stands with coordinates. Description: Get gate and parking-spot positions. Example: local gates = Terrain.getStandList(\"KDEN_roadnet\") print(\"First stand at\", gates[1].x, gates[1].y) getTechSkinByDate # Signature: skin = Terrain.getTechSkinByDate(day, month) Parameters: - day, month (number): calendar date. Returns: - skin (any): texture/skin identifier valid on that day. Description: Swap in historical or seasonal terrain skins. Example: local tex = Terrain.getTechSkinByDate(15, 8) -- August 15 getTempratureRangeByDate # Signature: minT, maxT = Terrain.getTempratureRangeByDate(day, month) Parameters: - day, month (number): date. Returns: - minT, maxT (number): expected daily temperature extremes (\u00b0C). Description: Drive weather models or engine performance tables. Example: local lo, hi = Terrain.getTempratureRangeByDate(1, 12) print(\"Dec 1 temps:\", lo, \"to\", hi) getTerrainShpare # Signature: shape = Terrain.getTerrainShpare() Returns: - shape (any): internal terrain mesh data. Description: Undocumented; likely used for low-level mesh queries. Example: local mesh = Terrain.getTerrainShpare() isVisible # Signature: visible = Terrain.isVisible(x1, alt1, y1, x2, alt2, y2) Parameters: - x1, y1, alt1 (number): start point and altitude. - x2, y2, alt2 (number): end point and altitude. Returns: - visible (boolean): true if line-of-sight is unobstructed. Description: Perform a raycast through the terrain to check LOS. Example: if Terrain.isVisible(10000, 50, 20000, 15000, 100, 25000) then print(\"Target in sight!\") end","title":"Terrain"},{"location":"Aircraft/Lua/Modules/Terrain/#terrain-module","text":"","title":"Terrain Module"},{"location":"Aircraft/Lua/Modules/Terrain/#loading-the-module","text":"local Terrain = require(\"terrain\") Warning Non functional or untested functions will be tagged with [UNVERIFIED] TODO: Test functions and verify descriptions Method Params Description Create \u2014 Instantiate or reset the terrain subsystem. FindNearestPoint x, y, range Find the nearest valid point (e.g. on a road) to (x, y) within range . FindOptimalPath x1, y1, x2, y2 Compute the optimal path (e.g. along roads) from (x1, y1) to (x2, y2) . GetHeight x, y Return terrain elevation at (x, y) . GetMGRScoordinates x, y Return the MGRS grid coordinate for (x, y) . GetSeasons \u2014 Return a table of season identifiers or data. GetSurfaceHeightWithSeabed x, y Return both surface elevation and depth of sea bed at (x, y) . GetSurfaceType x, y Return the type of surface (e.g. \u201cwater\u201d, \u201casphalt\u201d) at (x, y) . GetTerrainConfig type Obtain configuration data for terrain subtypes (e.g. \u201cAirdromes\u201d). Init terrain_config, reason, date Initialize terrain data with a config table, reason code, and date. InitLight terrain_config, reason, date Initialize only the lighting component of the terrain system. Release \u2014 Clean up or unload terrain resources. convertLatLonToMeters lat, lon Convert geographic coordinates (latitude, longitude) into simulation meters. convertMGRStoMeters mgrs Convert an MGRS string into simulation meters. convertMetersToLatLon x, y Convert simulation\u2010space meters back to geographic coordinates. findPathOnRoads type, x1, y1, x2, y2 Find a path along \u201croads\u201d or \u201crailroads\u201d between two points. getBeacons \u2014 Retrieve a list of all beacon objects in the terrain. getClosestPointOnRoads type, x, y Find the nearest point on the specified network (\u201croads\u201d or \u201crailroads\u201d) to (x, y) . getClosestValidPoint type, x, y Find the nearest valid point of specified type (e.g. \u201cland\u201d) to (x, y) . getCrossParam \u2014 Retrieve cross\u2010parameter data (undocumented use case). getObjectPosition o Return the map position of a given scene object. getObjectsAtMapPoint mapX, mapY List all objects whose footprint overlaps the map point. getRadio roadnet Get radio frequencies for an airport identified by its road-network string. getRunwayHeading roadnet Return the magnetic heading of the primary runway for the given airport. getRunwayList roadnet Return runway metadata: course, edge names and coordinates. getStandList roadnet Return a list of aircraft stands with locations. getTechSkinByDate day, month Retrieve terrain \u201ctech skin\u201d (appearance) valid on the specified date. getTempratureRangeByDate day, month Return expected temperature range for the given day/month. getTerrainShpare \u2014 (Undocumented\u2014likely returns shape data for terrain meshes.) isVisible x1, alt1, y1, x2, alt2, y2 Raycast LOS check between two points at specified altitudes; returns true if unobstructed.","title":"Loading the module"},{"location":"Aircraft/Lua/Modules/Terrain/#create","text":"Signature: Terrain.Create() Description: [UNVERIFIED] Instantiate or reset the terrain subsystem. Call this if you need to clear any existing terrain data before re-initializing or running a new mission. Example: -- Start with a fresh terrain state Terrain.Create()","title":"Create"},{"location":"Aircraft/Lua/Modules/Terrain/#findnearestpoint","text":"Signature: px, py = Terrain.FindNearestPoint(x, y, range) Parameters: - x, y (number): world coordinates from which to search. - range (number): maximum search radius in meters. Returns: - px, py (number): coordinates of the nearest valid point (e.g. on a road). Description: [UNVERIFIED] Searches outward up to range meters and returns the closest point on the specified network. Useful for snapping units to roads or paths. Example: local playerX, playerY = 50000, 75000 local roadX, roadY = Terrain.FindNearestPoint(playerX, playerY, 2000) print(\"Snap to road at:\", roadX, roadY)","title":"FindNearestPoint"},{"location":"Aircraft/Lua/Modules/Terrain/#findoptimalpath","text":"Signature: pathTable = Terrain.FindOptimalPath(x1, y1, x2, y2) Parameters: - x1, y1 (number): start coordinates. - x2, y2 (number): end coordinates. Returns: - pathTable (table): an array of { x = ..., y = ... } waypoints along the optimal route (e.g. following roads). Description: [UNVERIFIED] Runs a graph search (A or Dijkstra) over the terrain network to produce a drivable path. Example: * local route = Terrain.FindOptimalPath(10000, 20000, 30000, 40000) for i, pt in ipairs(route) do print(i, pt.x, pt.y) end","title":"FindOptimalPath"},{"location":"Aircraft/Lua/Modules/Terrain/#getheight","text":"Signature: h = Terrain.GetHeight(x, y) Parameters: - x, y (number): query coordinates. Returns: - h (number): terrain elevation (meters above sea level). Description: Quickly sample the terrain elevation. Example: local elev = Terrain.GetHeight(45000, 82000) print(\"Elevation is\", elev, \"m\")","title":"GetHeight"},{"location":"Aircraft/Lua/Modules/Terrain/#getmgrscoordinates","text":"Signature: mgrs = Terrain.GetMGRScoordinates(x, y) Parameters: - x, y (number): world coordinates. Returns: - mgrs (string): MGRS grid reference (e.g. \"34TDF1234567890\"). Description: Convert from simulation-space meters to a human-readable MGRS coordinate. Example: local gridRef = Terrain.GetMGRScoordinates(345000, 789000) print(\"Grid:\", gridRef)","title":"GetMGRScoordinates"},{"location":"Aircraft/Lua/Modules/Terrain/#getseasons","text":"Signature: seasons = Terrain.GetSeasons() Returns: - seasons (table): list of available season identifiers (e.g. { \"winter\", \"summer\", ... }). Description: [UNVERIFIED] Fetch the set of seasons for which terrain textures and lighting are defined. Example: for _, season in ipairs(Terrain.GetSeasons()) do print(\"Available season:\", season) end","title":"GetSeasons"},{"location":"Aircraft/Lua/Modules/Terrain/#getsurfaceheightwithseabed","text":"Signature: surfaceH, depth = Terrain.GetSurfaceHeightWithSeabed(x, y) Parameters: - x, y (number): coordinates over water. Returns: - surfaceH (number): elevation of the water surface. - depth (number): depth from surface to seabed (positive number). Description: [UNVERIFIED] Useful for amphibious operations to know both water level and bottom depth. Example: local surf, d = Terrain.GetSurfaceHeightWithSeabed(20000, 15000) print(\"Water at\", surf, \"m, seabed\", d, \"m below\")","title":"GetSurfaceHeightWithSeabed"},{"location":"Aircraft/Lua/Modules/Terrain/#getsurfacetype","text":"Signature: stype = Terrain.GetSurfaceType(x, y) Parameters: - x, y (number): query location. Returns: - stype (string): surface material. \"land\" , \"sea\" , \"lake\" , \"river\" Description: Detect what kind of surface occupies a coordinate. Example: local mat = Terrain.GetSurfaceType(10200, 20500) print(\"Surface is\", mat)","title":"GetSurfaceType"},{"location":"Aircraft/Lua/Modules/Terrain/#getterrainconfig","text":"Signature: cfg = Terrain.GetTerrainConfig(type) Parameters: - type (string): e.g. \"Airdromes\". Returns: - cfg (table): configuration block for that terrain element (bounds, default camera, etc.). Description: [UNVERIFIED] Inspect built-in metadata for things like airfield layout. Example: local airCfg = Terrain.GetTerrainConfig(\"Airdromes\") print(\"Airfield NE bound:\", airCfg.NE_bound.x, airCfg.NE_bound.y)","title":"GetTerrainConfig"},{"location":"Aircraft/Lua/Modules/Terrain/#init","text":"Signature: Terrain.Init(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: local cfg = Terrain.GetTerrainConfig(\"Airdromes\") Terrain.Init(cfg, \"mission_start\", { year=2025, month=7, day=7 })","title":"Init"},{"location":"Aircraft/Lua/Modules/Terrain/#initlight","text":"Signature: Terrain.InitLight(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: Terrain.InitLight(airCfg, \"time_change\", { year=2025, month=12, day=1 })","title":"InitLight"},{"location":"Aircraft/Lua/Modules/Terrain/#release","text":"Signature: Terrain.Release() Description: [UNVERIFIED] none. Example: Terrain.Release()","title":"Release"},{"location":"Aircraft/Lua/Modules/Terrain/#convertlatlontometers","text":"Signature: x, y = Terrain.convertLatLonToMeters(lat, lon) Parameters: - lat, lon (number): geographic coordinates in degrees. Returns: - x, y (number): simulation meters. Description: Project WGS84 lat/lon into the simulator\u2019s local flat coordinate system. Example: local mx, my = Terrain.convertLatLonToMeters(34.0522, -118.2437)","title":"convertLatLonToMeters"},{"location":"Aircraft/Lua/Modules/Terrain/#convertmgrstometers","text":"Signature: x, y = Terrain.convertMGRStoMeters(mgrs) Parameters: - mgrs (string): MGRS reference. Returns: - x, y (number): simulation meters. Description: Inverse of GetMGRScoordinates. Example: local ux, uy = Terrain.convertMGRStoMeters(\"33TUN1234567890\")","title":"convertMGRStoMeters"},{"location":"Aircraft/Lua/Modules/Terrain/#convertmeterstolatlon","text":"Signature: lat, lon = Terrain.convertMetersToLatLon(x, y) Parameters: - x, y (number): simulation coordinates. Returns: - lat, lon (number): geographic degrees. Description: Inverse map projection back to WGS84. Example: local \u03c6, \u03bb = Terrain.convertMetersToLatLon(400000, 5000000)","title":"convertMetersToLatLon"},{"location":"Aircraft/Lua/Modules/Terrain/#findpathonroads","text":"Signature: pathTable = Terrain.findPathOnRoads(type, x1, y1, x2, y2) Parameters: - type (string): \"roads\" or \"railroads\". - x1, y1 , x2, y2 (number): endpoints. Returns: - pathTable (table): waypoint array. Description: [UNVERIFIED] none. Example: local trainRoute = Terrain.findPathOnRoads(\"railroads\", 1000, 2000, 8000, 9000)","title":"findPathOnRoads"},{"location":"Aircraft/Lua/Modules/Terrain/#getbeacons","text":"Signature: beacons = Terrain.getBeacons() Returns: - beacons (table): list of beacon objects, each with position and frequency. Description: Enumerate nav-beacons placed in the terrain. Example: for _, b in ipairs(Terrain.getBeacons()) do print(\"Beacon\", b.id, \"at\", b.x, b.y, \"freq\", b.freq) end","title":"getBeacons"},{"location":"Aircraft/Lua/Modules/Terrain/#getclosestpointonroads","text":"Signature: px, py = Terrain.getClosestPointOnRoads(type, x, y) Parameters: - type (string): \"roads\" or \"railroads\". - x, y (number): query point. Returns: - px, py (number): on-network coordinates. Description: [UNVERIFIED] none. Example: local rx, ry = Terrain.getClosestPointOnRoads(\"roads\", 12345, 67890)","title":"getClosestPointOnRoads"},{"location":"Aircraft/Lua/Modules/Terrain/#getclosestvalidpoint","text":"Signature: px, py = Terrain.getClosestValidPoint(type, x, y) Parameters: - type (string): e.g. \"land\". - x, y (number): input coords. Returns: - px, py (number): nearest valid location of that type. Description: [UNVERIFIED] none. Example: local fx, fy = Terrain.getClosestValidPoint(\"land\", helicopterX, helicopterY)","title":"getClosestValidPoint"},{"location":"Aircraft/Lua/Modules/Terrain/#getcrossparam","text":"Signature: param = Terrain.getCrossParam() Returns: - param (any): undocumented cross-parameter data. Description: Only for advanced use\u2014internal terrain tuning. Example: local cp = Terrain.getCrossParam() print(\"Cross param:\", cp)","title":"getCrossParam"},{"location":"Aircraft/Lua/Modules/Terrain/#getobjectposition","text":"Signature: ox, oy = Terrain.getObjectPosition(obj) Parameters: - obj (Object): engine object reference. Returns: - ox, oy (number): its map position. Description: [UNVERIFIED] none. Example: local x, y = Terrain.getObjectPosition(myVehicle)","title":"getObjectPosition"},{"location":"Aircraft/Lua/Modules/Terrain/#getobjectsatmappoint","text":"Signature: list = Terrain.getObjectsAtMapPoint(mapX, mapY) Parameters: - mapX, mapY (number): query location. Returns: - list (table): all objects overlapping that point. Description: [UNVERIFIED] none. Example: local objs = Terrain.getObjectsAtMapPoint(5000, 6000) print(\"Found\", #objs, \"objects\")","title":"getObjectsAtMapPoint"},{"location":"Aircraft/Lua/Modules/Terrain/#getradio","text":"Signature: radios = Terrain.getRadio(roadnet) Parameters: - roadnet (string): airport identifier. Returns: - radios (table): frequency settings for that airfield\u2019s comms. Description: Obtain tower/ground/approach frequencies. Example: local freqs = Terrain.getRadio(\"KSFO_roadnet\") print(freqs.tower, freqs.ground)","title":"getRadio"},{"location":"Aircraft/Lua/Modules/Terrain/#getrunwayheading","text":"Signature: hdg = Terrain.getRunwayHeading(roadnet) Parameters: - roadnet (string): airport ID. Returns: - hdg (number): magnetic heading of the primary runway. Description: Useful for HUD wind-correction and runway-alignment cues. Example: local rHdg = Terrain.getRunwayHeading(\"RJTT_roadnet\") print(\"Runway heading:\", rHdg)","title":"getRunwayHeading"},{"location":"Aircraft/Lua/Modules/Terrain/#getrunwaylist","text":"Signature: runways = Terrain.getRunwayList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - runways (table): each entry contains: - course (number): runway heading - edge1name (string), edge1x , edge1y (number): name and coordinates of one end - edge2name (string), edge2x , edge2y (number): name and coordinates of the opposite end Description: Enumerate all runways at the specified airfield, returning their endpoints and headings. Example: for _, rw in ipairs(Terrain.getRunwayList(\"EGLL_roadnet\")) do print(\"RW\", rw.edge1name, \"to\", rw.edge2name, \"heading\", rw.course) end","title":"getRunwayList"},{"location":"Aircraft/Lua/Modules/Terrain/#getstandlist","text":"Signature: stands = Terrain.getStandList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - stands (table): list of parking stands with coordinates. Description: Get gate and parking-spot positions. Example: local gates = Terrain.getStandList(\"KDEN_roadnet\") print(\"First stand at\", gates[1].x, gates[1].y)","title":"getStandList"},{"location":"Aircraft/Lua/Modules/Terrain/#gettechskinbydate","text":"Signature: skin = Terrain.getTechSkinByDate(day, month) Parameters: - day, month (number): calendar date. Returns: - skin (any): texture/skin identifier valid on that day. Description: Swap in historical or seasonal terrain skins. Example: local tex = Terrain.getTechSkinByDate(15, 8) -- August 15","title":"getTechSkinByDate"},{"location":"Aircraft/Lua/Modules/Terrain/#gettempraturerangebydate","text":"Signature: minT, maxT = Terrain.getTempratureRangeByDate(day, month) Parameters: - day, month (number): date. Returns: - minT, maxT (number): expected daily temperature extremes (\u00b0C). Description: Drive weather models or engine performance tables. Example: local lo, hi = Terrain.getTempratureRangeByDate(1, 12) print(\"Dec 1 temps:\", lo, \"to\", hi)","title":"getTempratureRangeByDate"},{"location":"Aircraft/Lua/Modules/Terrain/#getterrainshpare","text":"Signature: shape = Terrain.getTerrainShpare() Returns: - shape (any): internal terrain mesh data. Description: Undocumented; likely used for low-level mesh queries. Example: local mesh = Terrain.getTerrainShpare()","title":"getTerrainShpare"},{"location":"Aircraft/Lua/Modules/Terrain/#isvisible","text":"Signature: visible = Terrain.isVisible(x1, alt1, y1, x2, alt2, y2) Parameters: - x1, y1, alt1 (number): start point and altitude. - x2, y2, alt2 (number): end point and altitude. Returns: - visible (boolean): true if line-of-sight is unobstructed. Description: Perform a raycast through the terrain to check LOS. Example: if Terrain.isVisible(10000, 50, 20000, 15000, 100, 25000) then print(\"Target in sight!\") end","title":"isVisible"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/","text":"LuaToolsPlugin # Overview # A Simple git submodule to add several useful classes for various tasks Install Guide # Repository Link Can be found here Git SubModule # Navigate to Cockpit/Scripts/ in your terminal Run git submodule add https://github.com/DCS-OpenSource/LuaToolsPlugin.git Load any of the classes into your project using, for example: local HelperClass = dofile(\"path/to/file\") Static Install # Go to the repo click the blue code button download as .zip Extract and insert into your mod folder inside Cockpit/Scripts/ Load any of the classes into your project using, for example: local HelperClass = dofile(\"path/to/file\") Included Classes # KeybindtoDevice Timer KeybindToDevice (class) # Description A helper class that links keybind commands to device commands in the cockpit, with optional dispatch to the EFM. Methods # KeybindToDevice:new() # Description Creates a new instance of KeybindToDevice . Returns KeybindToDevice - A new instance of the keybind helper. KeybindToDevice:registerKeybind(keyCommand, deviceCommand, device, toEFM) # Description Registers a key command that, when pressed, triggers a device command. Parameters Name Type Description keyCommand number The keybind command to listen for (from listen_command ). deviceCommand number The device command to perform. device number The device ID for GetDevice(device) . toEFM boolean Whether to dispatch the command to the EFM via dispatch_action . Returns nil KeybindToDevice:sendCommand(keyCommand, value) # Description Sends the device command tied to a keybind. If toEFM was set, a dispatch_action is also triggered. Parameters Name Type Description keyCommand number The keybind command that was triggered. value any The value to send with the command. Returns boolean - true if a command was sent, otherwise false . Internal Fields # Field Type Description self.device userdata The device instance returned from GetSelf() self.keybinds table Stores mappings: [keyCommand] = {deviceCommand, device, toEFM} Timer (class) # Description A simple timer utility that runs for a specified duration and executes a callback when complete. Can be used with an update loop such as update() in DCS Lua. Methods # Timer:new(duration, updateRate, callback) # Description Creates a new timer instance. Parameters Name Type Description duration number Total time the timer should run for (in seconds). Defaults to 1. updateRate number Time increment per update (typically matches update rate). Defaults to 0.05. callback function \\| nil Function to be called when the timer completes. Optional. Returns Timer - A new timer object. Timer:startTimer() # Description Starts or restarts the timer from zero. Returns nil Timer:stopTimer() # Description Stops the timer before it completes. Returns nil Timer:updateTimer() # Description Advances the timer by updateRate . If the duration is reached, calls the callback (if any) and stops the timer. Returns nil Timer:isDone() # Description Checks whether the timer has completed. Returns boolean - true if the timer is complete, otherwise false . Timer:setCallback(fn) # Description Sets or replaces the callback function to be called when the timer completes. Parameters Name Type Description fn function Callback function to assign Returns nil Internal Fields # Field Type Description duration number Total timer duration in seconds updateRate number Time increment per update callback function \\| nil Function to call when completed running boolean Whether the timer is currently running elapsed number Time accumulated since start completed boolean Whether the timer has finished running","title":"LuaToolsPlugin"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#luatoolsplugin","text":"","title":"LuaToolsPlugin"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#overview","text":"A Simple git submodule to add several useful classes for various tasks","title":"Overview"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#install-guide","text":"Repository Link Can be found here","title":"Install Guide"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#git-submodule","text":"Navigate to Cockpit/Scripts/ in your terminal Run git submodule add https://github.com/DCS-OpenSource/LuaToolsPlugin.git Load any of the classes into your project using, for example: local HelperClass = dofile(\"path/to/file\")","title":"Git SubModule"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#static-install","text":"Go to the repo click the blue code button download as .zip Extract and insert into your mod folder inside Cockpit/Scripts/ Load any of the classes into your project using, for example: local HelperClass = dofile(\"path/to/file\")","title":"Static Install"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#included-classes","text":"KeybindtoDevice Timer","title":"Included Classes"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#keybindtodevice-class","text":"Description A helper class that links keybind commands to device commands in the cockpit, with optional dispatch to the EFM.","title":"KeybindToDevice (class)"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#methods","text":"","title":"Methods"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#keybindtodevicenew","text":"Description Creates a new instance of KeybindToDevice . Returns KeybindToDevice - A new instance of the keybind helper.","title":"KeybindToDevice:new()"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#keybindtodeviceregisterkeybindkeycommand-devicecommand-device-toefm","text":"Description Registers a key command that, when pressed, triggers a device command. Parameters Name Type Description keyCommand number The keybind command to listen for (from listen_command ). deviceCommand number The device command to perform. device number The device ID for GetDevice(device) . toEFM boolean Whether to dispatch the command to the EFM via dispatch_action . Returns nil","title":"KeybindToDevice:registerKeybind(keyCommand, deviceCommand, device, toEFM)"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#keybindtodevicesendcommandkeycommand-value","text":"Description Sends the device command tied to a keybind. If toEFM was set, a dispatch_action is also triggered. Parameters Name Type Description keyCommand number The keybind command that was triggered. value any The value to send with the command. Returns boolean - true if a command was sent, otherwise false .","title":"KeybindToDevice:sendCommand(keyCommand, value)"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#internal-fields","text":"Field Type Description self.device userdata The device instance returned from GetSelf() self.keybinds table Stores mappings: [keyCommand] = {deviceCommand, device, toEFM}","title":"Internal Fields"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#timer-class","text":"Description A simple timer utility that runs for a specified duration and executes a callback when complete. Can be used with an update loop such as update() in DCS Lua.","title":"Timer (class)"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#methods_1","text":"","title":"Methods"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#timernewduration-updaterate-callback","text":"Description Creates a new timer instance. Parameters Name Type Description duration number Total time the timer should run for (in seconds). Defaults to 1. updateRate number Time increment per update (typically matches update rate). Defaults to 0.05. callback function \\| nil Function to be called when the timer completes. Optional. Returns Timer - A new timer object.","title":"Timer:new(duration, updateRate, callback)"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#timerstarttimer","text":"Description Starts or restarts the timer from zero. Returns nil","title":"Timer:startTimer()"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#timerstoptimer","text":"Description Stops the timer before it completes. Returns nil","title":"Timer:stopTimer()"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#timerupdatetimer","text":"Description Advances the timer by updateRate . If the duration is reached, calls the callback (if any) and stops the timer. Returns nil","title":"Timer:updateTimer()"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#timerisdone","text":"Description Checks whether the timer has completed. Returns boolean - true if the timer is complete, otherwise false .","title":"Timer:isDone()"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#timersetcallbackfn","text":"Description Sets or replaces the callback function to be called when the timer completes. Parameters Name Type Description fn function Callback function to assign Returns nil","title":"Timer:setCallback(fn)"},{"location":"Aircraft/Lua/Plugins/LuaToolsPlugin/#internal-fields_1","text":"Field Type Description duration number Total timer duration in seconds updateRate number Time increment per update callback function \\| nil Function to call when completed running boolean Whether the timer is currently running elapsed number Time accumulated since start completed boolean Whether the timer has finished running","title":"Internal Fields"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/","text":"Welcome to the DCS: OpenSource NavDataPlugin Wiki! # Introduction # This contains installation instructions, and documentation to create the backend of a powerful navigation system using raw data from DCS. Why does this exist? While all the functions to create this yourself are exposed in DCS Lua, they are chaotic and undocumented. This plugin streamlines the process, by doing the data collection for you, and collating it into one big table. Features # Airport Data Beacon Data Supplemental Data replacement (to replace missing DCS Data or overwrite existing data) Helper functions for various useful tasks such as range sorting. Download and install guide # .git submodule # Navigate to Cockpit/Scripts/ in your terminal Run git submodule add https://github.com/DCS-OpenSource/NavDataPlugin.git commit the submodule file to your repo Manual Install # Download the latest release (the .zip, not source code) unzip, and place the folder in Cockpit/Scripts/ verify the relative path to Nav.lua is Cockpit/Scripts/NavDataPlugin/Nav.lua Configure the NavdataPlugin: # -- This allows the use of require statements. require uses . instead of / for folder sepparators. -- Require only loads the lua once saving loading time. package.path = package.path..\";\"..LockOn_Options.script_path..\"?.lua\" package.path = package.path..\";\"..LockOn_Options.common_script_path..\"?.lua\" require(\"NavDataPlugin.Nav\") Function List # Function Parameters Returns Description get_ILS_beacons none table: ILS_beacons Returns ILS Beacons Table get_TCN_beacons none table: TCN_beacons Returns TCN Beacons Table get_VOR_beacons none table: VOR_beacons Returns VOR Beacons Table getAirports none table: filteredAirportData Returns Filtered Airport Data sortAirportsByDistance ownPos: {x, y} table: sortedAirportList Returns Sorted Airport table Function Details # get_ILS_beacons() # Description Returns all ILS beacons in the beacons file. ILS Beacon Types Beacon Type Integer Value BEACON_TYPE_ILS_LOCALIZER 16640 BEACON_TYPE_ILS_GLIDESLOPE 16896 BEACON_TYPE_ILS_FAR_HOMER 16408 BEACON_TYPE_ILS_NEAR_HOMER 16424 Parameters Name Type Description none nil Returns table: ILS_beacons - Table of ILS Beacons on the Map -- Example of one entry in the returned table [1] = { type = 16896, -- matches beacon type table above beaconId = \"airfield1_0\", positionGeo = { longitude = -115.691917, latitude = 36.585008, }, sceneObjects = { [1] = \"t:85164032\", }, display_name = \"Creech\", channel = 24, direction = -88.617531, position = { [1] = -360394.21875, [2] = 952.944679, [3] = -76976.257813, }, callsign = \"ICRR\", frequency = 108700000, -- 108.7 }, get_TCN_beacons() # Description Returns all TCN beacons in the beacons file. TCN Beacon Types Beacon Type Integer Value BEACON_TYPE_TACAN 4 BEACON_TYPE_VORTAC 5 Parameters Name Type Description none nil Returns table: TCN_beacons - Table of TCN Beacons on the Map -- Example of one entry in the returned table [4] = { type = 4, -- BEACON_TYPE_TACAN beaconId = \"airfield4_1\", positionGeo = { longitude = -115.025113, latitude = 36.244644, }, display_name = \"Nellis\", channel = 12, sceneObjects = { [1] = \"t:41518947\", }, direction = -141.002194, position = { [1] = -397135.9375, [2] = 564.647598, [3] = -16545.675781, }, callsign = \"LSV\", }, get_VOR_beacons() # Description Returns all VOR beacons in the beacons file. VOR Beacon Types Beacon Type Integer Value BEACON_TYPE_VOR 1 BEACON_TYPE_VOR_DME 2 BEACON_TYPE_VORTAC 5 Parameters Name Type Description none nil Returns table: VOR_beacons - Table of ILS Beacons on the Map -- Example of one entry in the returned table [1] = { type = 5, -- BEACON_TYPE_VORTAC beaconId = \"airfield3_4\", positionGeo = { longitude = -115.159816, latitude = 36.079576, }, sceneObjects = { [1] = \"t:69208390\", }, display_name = \"McCarran-International\", channel = 116, direction = -179.199384, position = { [1] = -415686.09375, [2] = 657.922167, [3] = -28303.363281, }, callsign = \"LAS\", frequency = 116900000, }, getAirports() # Description Returns all Airports on the map, with extra filtered data. Parameters Name Type Description none nil Returns table: Filtered Airport Data - Table of Airport Data Nellis = { radioid = { [1] = \"airfield4_0\", }, radios = { radioId = \"airfield4_0\", uniform = 327, victor = 132.55, }, runways = { [1] = { runwayLength = 9454.0715925188, runwayEnd1 = { y = -18395.984375, x = -399101.90625, }, name = \"03L-21R\", runwayEnd2 = { y = -16538.4921875, x = -396898.875, }, }, [2] = { runwayLength = 9437.9092172239, runwayEnd1 = { y = -18160.181640625, x = -399295.1875, }, name = \"03R-21L\", runwayEnd2 = { y = -16306.291992188, x = -397095.5625, }, }, }, positionLatLon = { lon = -115.03300055101, lat = 36.235224110884, }, name = \"Nellis\", position = { y = -17233.236816, x = -398195.375, }, beacons = { [1] = { beaconId = \"airfield4_1\", }, [2] = { runwayName = \"03R-21L\", runwayId = 2, runwaySide = \"21L\", beaconId = \"airfield4_2\", }, [0] = { runwayName = \"03R-21L\", runwayId = 2, runwaySide = \"21L\", beaconId = \"airfield4_0\", }, }, isCivilian = false, ICAO = \"KLSV\", }, sortAirportsByDistance({x, y}) # Description Returns the same as getAirports() but sorted by distance to the player or other defined point. Parameters Name Type Description ownPos table {[1] = x, [2] = y} Users current position Returns table: Filtered Airport Data - Table of Airport Data Nellis = { -- All the same as getAirports() with the addition of two new fields distanceToPlayerNM = 15.6 -- Distance from player to point in NM bearingToPlayer = 330 -- Bearing from player in degrees }, Data Supplementation # The Data DCS provides is often less than perfect, especially around radios on certain maps. Nellis (NTTR) and Caucasus work as expected, but ED seemingly updated the TDK after those maps, so data such as radios is hidden/inaccessable sometimes. To circumvent this, I added a way to add additional data to edit the dynamically aquired information. How to setup data supplementation # Make a new folder in your Cockpit/Scripts/ folder called NavDataPluginExtra Make sub folders for each map, the name should match the theatre name. You can get the theatre name using: For NTTR this would look like Cockpit/Scripts/NavDataPluginExtra/Nevada/ do_mission_file(\"mission\") -- Load the mission file local theatre = mission.theatre -- map name string Make a file in the new folder called theatreName.lua (in this example Nevada.lua ) Paste the following into the file: -- This Lua file contains an array of data to supplement the existing data pulled from DCS local Airports = { [\"Nellis\"] = { -- This needs to match the airport name on the F10 Map name = \"Nellis Air Force Base\", ICAO = \"KLSV\", }, } return Airports -- Don't forget to include this at the bottom You can edit every value, providing you match the format Radio supplement example: [\"Groom Lake\"] = { -- Area 51 name = \"Homey Airport\", radios = { uniform = 250.05, victor = 118.00, } } The data is automatically supplemented, if the file exists, so no extra function calls needed","title":"NavDataPlugin"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#welcome-to-the-dcs-opensource-navdataplugin-wiki","text":"","title":"Welcome to the DCS: OpenSource NavDataPlugin Wiki!"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#introduction","text":"This contains installation instructions, and documentation to create the backend of a powerful navigation system using raw data from DCS. Why does this exist? While all the functions to create this yourself are exposed in DCS Lua, they are chaotic and undocumented. This plugin streamlines the process, by doing the data collection for you, and collating it into one big table.","title":"Introduction"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#features","text":"Airport Data Beacon Data Supplemental Data replacement (to replace missing DCS Data or overwrite existing data) Helper functions for various useful tasks such as range sorting.","title":"Features"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#download-and-install-guide","text":"","title":"Download and install guide"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#git-submodule","text":"Navigate to Cockpit/Scripts/ in your terminal Run git submodule add https://github.com/DCS-OpenSource/NavDataPlugin.git commit the submodule file to your repo","title":".git submodule"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#manual-install","text":"Download the latest release (the .zip, not source code) unzip, and place the folder in Cockpit/Scripts/ verify the relative path to Nav.lua is Cockpit/Scripts/NavDataPlugin/Nav.lua","title":"Manual Install"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#configure-the-navdataplugin","text":"-- This allows the use of require statements. require uses . instead of / for folder sepparators. -- Require only loads the lua once saving loading time. package.path = package.path..\";\"..LockOn_Options.script_path..\"?.lua\" package.path = package.path..\";\"..LockOn_Options.common_script_path..\"?.lua\" require(\"NavDataPlugin.Nav\")","title":"Configure the NavdataPlugin:"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#function-list","text":"Function Parameters Returns Description get_ILS_beacons none table: ILS_beacons Returns ILS Beacons Table get_TCN_beacons none table: TCN_beacons Returns TCN Beacons Table get_VOR_beacons none table: VOR_beacons Returns VOR Beacons Table getAirports none table: filteredAirportData Returns Filtered Airport Data sortAirportsByDistance ownPos: {x, y} table: sortedAirportList Returns Sorted Airport table","title":"Function List"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#function-details","text":"","title":"Function Details"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#get_ils_beacons","text":"Description Returns all ILS beacons in the beacons file. ILS Beacon Types Beacon Type Integer Value BEACON_TYPE_ILS_LOCALIZER 16640 BEACON_TYPE_ILS_GLIDESLOPE 16896 BEACON_TYPE_ILS_FAR_HOMER 16408 BEACON_TYPE_ILS_NEAR_HOMER 16424 Parameters Name Type Description none nil Returns table: ILS_beacons - Table of ILS Beacons on the Map -- Example of one entry in the returned table [1] = { type = 16896, -- matches beacon type table above beaconId = \"airfield1_0\", positionGeo = { longitude = -115.691917, latitude = 36.585008, }, sceneObjects = { [1] = \"t:85164032\", }, display_name = \"Creech\", channel = 24, direction = -88.617531, position = { [1] = -360394.21875, [2] = 952.944679, [3] = -76976.257813, }, callsign = \"ICRR\", frequency = 108700000, -- 108.7 },","title":"get_ILS_beacons()"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#get_tcn_beacons","text":"Description Returns all TCN beacons in the beacons file. TCN Beacon Types Beacon Type Integer Value BEACON_TYPE_TACAN 4 BEACON_TYPE_VORTAC 5 Parameters Name Type Description none nil Returns table: TCN_beacons - Table of TCN Beacons on the Map -- Example of one entry in the returned table [4] = { type = 4, -- BEACON_TYPE_TACAN beaconId = \"airfield4_1\", positionGeo = { longitude = -115.025113, latitude = 36.244644, }, display_name = \"Nellis\", channel = 12, sceneObjects = { [1] = \"t:41518947\", }, direction = -141.002194, position = { [1] = -397135.9375, [2] = 564.647598, [3] = -16545.675781, }, callsign = \"LSV\", },","title":"get_TCN_beacons()"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#get_vor_beacons","text":"Description Returns all VOR beacons in the beacons file. VOR Beacon Types Beacon Type Integer Value BEACON_TYPE_VOR 1 BEACON_TYPE_VOR_DME 2 BEACON_TYPE_VORTAC 5 Parameters Name Type Description none nil Returns table: VOR_beacons - Table of ILS Beacons on the Map -- Example of one entry in the returned table [1] = { type = 5, -- BEACON_TYPE_VORTAC beaconId = \"airfield3_4\", positionGeo = { longitude = -115.159816, latitude = 36.079576, }, sceneObjects = { [1] = \"t:69208390\", }, display_name = \"McCarran-International\", channel = 116, direction = -179.199384, position = { [1] = -415686.09375, [2] = 657.922167, [3] = -28303.363281, }, callsign = \"LAS\", frequency = 116900000, },","title":"get_VOR_beacons()"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#getairports","text":"Description Returns all Airports on the map, with extra filtered data. Parameters Name Type Description none nil Returns table: Filtered Airport Data - Table of Airport Data Nellis = { radioid = { [1] = \"airfield4_0\", }, radios = { radioId = \"airfield4_0\", uniform = 327, victor = 132.55, }, runways = { [1] = { runwayLength = 9454.0715925188, runwayEnd1 = { y = -18395.984375, x = -399101.90625, }, name = \"03L-21R\", runwayEnd2 = { y = -16538.4921875, x = -396898.875, }, }, [2] = { runwayLength = 9437.9092172239, runwayEnd1 = { y = -18160.181640625, x = -399295.1875, }, name = \"03R-21L\", runwayEnd2 = { y = -16306.291992188, x = -397095.5625, }, }, }, positionLatLon = { lon = -115.03300055101, lat = 36.235224110884, }, name = \"Nellis\", position = { y = -17233.236816, x = -398195.375, }, beacons = { [1] = { beaconId = \"airfield4_1\", }, [2] = { runwayName = \"03R-21L\", runwayId = 2, runwaySide = \"21L\", beaconId = \"airfield4_2\", }, [0] = { runwayName = \"03R-21L\", runwayId = 2, runwaySide = \"21L\", beaconId = \"airfield4_0\", }, }, isCivilian = false, ICAO = \"KLSV\", },","title":"getAirports()"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#sortairportsbydistancex-y","text":"Description Returns the same as getAirports() but sorted by distance to the player or other defined point. Parameters Name Type Description ownPos table {[1] = x, [2] = y} Users current position Returns table: Filtered Airport Data - Table of Airport Data Nellis = { -- All the same as getAirports() with the addition of two new fields distanceToPlayerNM = 15.6 -- Distance from player to point in NM bearingToPlayer = 330 -- Bearing from player in degrees },","title":"sortAirportsByDistance({x, y})"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#data-supplementation","text":"The Data DCS provides is often less than perfect, especially around radios on certain maps. Nellis (NTTR) and Caucasus work as expected, but ED seemingly updated the TDK after those maps, so data such as radios is hidden/inaccessable sometimes. To circumvent this, I added a way to add additional data to edit the dynamically aquired information.","title":"Data Supplementation"},{"location":"Aircraft/Lua/Plugins/NavDataPlugin/#how-to-setup-data-supplementation","text":"Make a new folder in your Cockpit/Scripts/ folder called NavDataPluginExtra Make sub folders for each map, the name should match the theatre name. You can get the theatre name using: For NTTR this would look like Cockpit/Scripts/NavDataPluginExtra/Nevada/ do_mission_file(\"mission\") -- Load the mission file local theatre = mission.theatre -- map name string Make a file in the new folder called theatreName.lua (in this example Nevada.lua ) Paste the following into the file: -- This Lua file contains an array of data to supplement the existing data pulled from DCS local Airports = { [\"Nellis\"] = { -- This needs to match the airport name on the F10 Map name = \"Nellis Air Force Base\", ICAO = \"KLSV\", }, } return Airports -- Don't forget to include this at the bottom You can edit every value, providing you match the format Radio supplement example: [\"Groom Lake\"] = { -- Area 51 name = \"Homey Airport\", radios = { uniform = 250.05, victor = 118.00, } } The data is automatically supplemented, if the file exists, so no extra function calls needed","title":"How to setup data supplementation"},{"location":"Aircraft/Lua/Plugins/WeaponSystemPlugin/","text":"","title":"WeaponSystemPlugin"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/","text":"Device Stubs # Param Handles # Param handles serve as your method of parsing information between devices, devices to indicators, or devices to the EFM. They act as \"global variables\" and can be accessed with getters and setters as detailed below. Params can be either numbers or strings. Warning If a you set a param to a string, and the string contains only numbers (eg. \"1234\" ) the parameter will revert to a number. I'm not sure if this is a bug or a feature, but if you're not careful you can get situations where you can crash your game. See Below: -- Param Type reset example local param = get_param_handle(\"TEST\") local testString = \"1234\" print_message_to_user(tostring(type(testString))) -- \"string\" (\"1234\") param:set(testString) -- all number string is converted back to int. print_message_to_user(tostring(type(param:get()))) -- \"int\" (1234) Note This guide only references the lua side of parameters. Retrieving param values in the EFM can be referenced from template EFMs. Creating a param handle # A param object is created like this: local dcPower = get_param_handle(\"DC_POWER_ON\") Calling get_param_handle(\"DC_POWER_ON\") in another device allows you to have access to the parameter value there as well. The get_param_handle() function returns a table containing a :get() function and a :set() function. Getting a param handle # The Value of a param handle can be retrived by calling param:get() local dcPower = get_param_handle(\"DC_POWER_ON\") local value == dcPower:get() Setting a param handle # The Value of a param handle can be set by calling param:get(value) local dcPower = get_param_handle(\"DC_POWER_ON\") -- pseudo power switch on dcPower:set(1) dcPower:set(\"true\") -- String based example -- pseudo power switch off dcPower:set(0) dcPower:set(\"false\") -- String based example Debugging a param handle # You can access a debug window that lists all params while the game is running. See show_param_handles_list() Stubs # dispatch_action(device_id, command, value) # Description Triggers a command on a device. Similar to avDevice:performClickableAction() but does not move the switch. If controlling a non-owned device, device_id must be specified. Parameters Name Type Description device_id number\\|nil Target device ID or nil command number Command number value number Value to apply Returns nil do_mission_file(file) # Description Loads the mission file as a table to a variable mission when parsed the string \"mission\" Parameters Name Type Description file string \"mission\" Returns nil Usage do_mission_file(\"mission\") print_message_to_user(mission.theatre) -- prints map name find_viewport(name) # Description Finds and returns the viewport object by name. [UNVERIFIED] Parameters Name Type Description name string Name of viewport Returns table - Viewport data geo_to_lo_coords(lat, lon) # Description Converts latitude and longitude to local DCS coordinates. Parameters Name Type Description lat number Latitude in degrees lon number Longitude in degrees Returns vec3 - Local coordinates get_absolute_model_time() # Description Returns the time of day in seconds, including fractional seconds. Returns number - Time in seconds get_aircraft_draw_argument_value(arg) # Description Returns the current value of an aircraft draw argument. Parameters Name Type Description arg number Argument index Returns number - Argument value get_aircraft_mission_data(key) # Description Returns mission-specific data for the current aircraft. Note Only seems to work when parsed \"Radio\" Parameters Name Type Description key string Data key, e.g. \"Radio\" Returns table - Mission data get_aircraft_property(name) # Description Returns a property value from the aircraft. [UNVERIFIED] Parameters Name Type Description name string Property name Returns any get_aircraft_property_or_nil(name) # Description Returns an aircraft property or nil if it does not exist. [UNVERIFIED] Parameters Name Type Description name string Property name Returns any get_aircraft_type() # Description Returns the type of the current aircraft. Returns string get_base_data() # Description Returns the base sensor data of the aircraft. Returns BaseData get_clickable_element_reference(point_name) # Description Returns a reference table to a clickable element. Parameters Name Type Description point_name string Name of the clickable element point Returns table - Functions: set_hint , update , hide get_cockpit_draw_argument_value(arg) # Description Returns the cockpit draw argument value. Parameters Name Type Description arg number Argument index Returns number get_dcs_plugin_path(name) # Description Returns the full path to a DCS plugin. Parameters Name Type Description name string Plugin name Returns string - File path get_input_devices() # Description ??? [UNVERIFIED] Returns ??? get_mission_route() # Description Returns the flight plan programmed in the mission editor for aircraft. Returns table - Route as a table of waypoints get_model_time() # Description Returns the time in seconds since the mission started. Returns number - Time in seconds get_multimonitor_preset_name() # Description Returns the name of the active multi-monitor preset. [UNVERIFIED] Returns string - Preset name get_non_sim_random_evenly() # Description ??? [UNVERIFIED] Returns ??? get_option_value(option, env) # Description Returns the value of a specific DCS option. [UNVERIFIED] Parameters Name Type Description option string Option name (e.g. difficulty.hideStick ) env string Environment (e.g. local ) Returns any get_param_handle(param) # Description Returns a parameter handle, useful for setting or reading shared state between systems like animations, indicators, and EFM Lua bindings. Parameters Name Type Description param string Name of the parameter Returns ParamHandle get_player_crew_index() # Description Method to get the seat the player is sitting in. Returns int - index of the players seat get_plugin_option() # Description ??? [UNVERIFIED] Returns ??? get_plugin_option_value(plugin, option, env) # Description Returns the value of a plugin-specific option. [UNVERIFIED] Parameters Name Type Description plugin string Plugin name option string Option name env string Environment (e.g. local ) Returns any get_random_evenly() # Description ??? [UNVERIFIED] Returns ??? get_random_orderly() # Description ??? [UNVERIFIED] Returns ??? get_terrain_related_data(file) # Description Returns terrain-related data such as beacons, charts, or airfields. Parameters Name Type Description file string Name of the terrain data file (e.g. beacons , Airdromes ) Returns table - Terrain data including display_name , radio , etc. get_UIMainView() # Description Returns parameters describing the main UI view. [UNVERIFIED] Returns number, number, number, number, number - start_x , start_y , main_w , main_h , gui_scale get_Viewports() # Description Returns all available viewports. [UNVERIFIED] Returns table - Viewport definitions list_cockpit_params() # Description Returns a table of all cockpit parameters currently available. [UNVERIFIED] Returns table - Cockpit parameter handles list_indication(indicator_id) # Description Returns the current indication string of a specified cockpit element. [UNVERIFIED] Parameters Name Type Description indicator_id number ID of the indicator Returns string - Indication text lo_to_geo_coords(pos) # Description Converts a local position vector to geographic latitude and longitude. Parameters Name Type Description pos vec3 Local coordinates Returns number, number - Latitude, Longitude load_mission_file(file) # Description Loads a Lua mission file and returns it as an executable function chunk. [UNVERIFIED] Parameters Name Type Description file string File path Returns function - Compiled chunk MakeFont(font_data, rgba) # TODO add example, including vfs mount Description Creates a DX-compatible font object for rendering. Parameters Name Type Description font_data table Font descriptor (e.g. font_dejavu_lgc_sans_22 ) rgba table RGBA color (e.g. {0, 255, 0, 255} ) Returns table - Font object MakeMaterial(texture_path, rgba) # Description Creates a material using a specified texture and color. Parameters Name Type Description texture_path string Path to the texture (e.g. .dds ) rgba table RGBA color Returns table - Material object mount_vfs_model_path(path) # Description Mounts a model directory path to the virtual file system. Parameters Name Type Description path string Path to mount Returns nil mount_vfs_path_to_mount_point(mount_point, path) # Description Mounts a path into a specified mount point in the VFS. [UNVERIFIED] Parameters Name Type Description mount_point string Target VFS mount point path path string Real file system path Returns nil mount_vfs_texture_archives(path) # Description Mounts a texture archive folder into the VFS. Parameters Name Type Description path string Path to archive directory Returns nil mount_vfs_texture_path(path) # Description Mounts a texture path into the VFS. Parameters Name Type Description path string Path to texture folder Returns nil print_message_to_user(text) # Description Displays a message to the player on screen. Parameters Name Type Description text string Text to display Returns nil save_to_mission(file, content) # Description Writes string content to a mission file path. [UNVERIFIED] Parameters Name Type Description file string Mission file path content string Content to write Returns nil set_aircraft_draw_argument_value(argument, value) # Description Sets the value of an aircraft draw argument for animations (External Model). Parameters Name Type Description argument number Argument index value number Value to set Returns nil set_crew_member_seat_adjustment() # Description ??? [UNVERIFIED] Returns ??? show_param_handles_list(enable) # Description Enables or disables display of param handles list. Parameters Name Type Description enable boolean true to show, false to hide Returns nil switch_labels_off() # Description [UNVERIFIED] ??? Returns ??? track_is_reading() # Description Checks if a replay track is currently being played. [UNVERIFIED] Returns boolean track_is_writing() # Description Checks if a replay track is currently being recorded. [UNVERIFIED] Returns boolean UTF8_strlen() # Description ??? [UNVERIFIED] Returns ??? UTF8_substring() # Description ??? [UNVERIFIED] Returns ??? BaseData # Description Device base data structure returned by get_base_data() . This object provides access to various aircraft state parameters. All returned values are in Metric standard units. Note The list of functions are complete, although I don't have documentation for all of them, they should be pretty easy to figure out though Methods # Method Returns Description getAngleOfAttack() number Gets the current angle of attack. getAngleOfSlide() number Gets the current angle of slide. getBarometricAltitude() number Gets the barometric altitude (meters). getCanopyPos() unknown ??? getCanopyState() unknown ??? getEngineLeftFuelConsumption() unknown ??? getEngineLeftRPM() number Left engine RPM in percent. getEngineLeftTemperatureBeforeTurbine() number Left engine temperature before turbine. getEngineRightFuelConsumption() unknown ??? getEngineRightRPM() number Right engine RPM in percent. getEngineRightTemperatureBeforeTurbine() number Right engine temperature before turbine. getFlapsPos() unknown ??? getFlapsRetracted() unknown ??? getHeading() number Heading in radians getHelicopterCollective() unknown ??? getHelicopterCorrection() unknown ??? getHorizontalAcceleration() unknown ??? getIndicatedAirSpeed() number Indicated airspeed (m/s). getLandingGearHandlePos() unknown ??? getLateralAcceleration() unknown ??? getLeftMainLandingGearDown() unknown ??? getLeftMainLandingGearUp() unknown ??? getMachNumber() number Current Mach number. getMagneticHeading() number Magnetic heading in radians getNoseLandingGearDown() unknown ??? getNoseLandingGearUp() unknown ??? getPitch() number Pitch in radians. getRadarAltitude() number Radar altitude (meters). getRateOfPitch() unknown ??? getRateOfRoll() unknown ??? getRateOfYaw() unknown ??? getRightMainLandingGearDown() unknown ??? getRightMainLandingGearUp() unknown ??? getRoll() number Roll in radians. getRudderPosition() unknown ??? getSelfAirspeed() unknown ??? getSelfCoordinates() unknown Returns getSelfVelocity() unknown ??? getSpeedBrakePos() unknown ??? getStickPitchPosition() unknown ??? getStickRollPosition() unknown ??? getThrottleLeftPosition() unknown ??? getThrottleRightPosition() unknown ??? getTotalFuelWeight() unknown ??? getTrueAirSpeed() unknown ??? getVerticalAcceleration() unknown ??? getVerticalVelocity() unknown ??? getWOW_LeftMainLandingGear() unknown ??? getWOW_NoseLandingGear() unknown ??? getWOW_RightMainLandingGear() unknown ??? Notes # unknown means the return type is not clearly documented or may require further inspection.","title":"Device Stubs"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#device-stubs","text":"","title":"Device Stubs"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#param-handles","text":"Param handles serve as your method of parsing information between devices, devices to indicators, or devices to the EFM. They act as \"global variables\" and can be accessed with getters and setters as detailed below. Params can be either numbers or strings. Warning If a you set a param to a string, and the string contains only numbers (eg. \"1234\" ) the parameter will revert to a number. I'm not sure if this is a bug or a feature, but if you're not careful you can get situations where you can crash your game. See Below: -- Param Type reset example local param = get_param_handle(\"TEST\") local testString = \"1234\" print_message_to_user(tostring(type(testString))) -- \"string\" (\"1234\") param:set(testString) -- all number string is converted back to int. print_message_to_user(tostring(type(param:get()))) -- \"int\" (1234) Note This guide only references the lua side of parameters. Retrieving param values in the EFM can be referenced from template EFMs.","title":"Param Handles"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#creating-a-param-handle","text":"A param object is created like this: local dcPower = get_param_handle(\"DC_POWER_ON\") Calling get_param_handle(\"DC_POWER_ON\") in another device allows you to have access to the parameter value there as well. The get_param_handle() function returns a table containing a :get() function and a :set() function.","title":"Creating a param handle"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#getting-a-param-handle","text":"The Value of a param handle can be retrived by calling param:get() local dcPower = get_param_handle(\"DC_POWER_ON\") local value == dcPower:get()","title":"Getting a param handle"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#setting-a-param-handle","text":"The Value of a param handle can be set by calling param:get(value) local dcPower = get_param_handle(\"DC_POWER_ON\") -- pseudo power switch on dcPower:set(1) dcPower:set(\"true\") -- String based example -- pseudo power switch off dcPower:set(0) dcPower:set(\"false\") -- String based example","title":"Setting a param handle"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#debugging-a-param-handle","text":"You can access a debug window that lists all params while the game is running. See show_param_handles_list()","title":"Debugging a param handle"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#stubs","text":"","title":"Stubs"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#dispatch_actiondevice_id-command-value","text":"Description Triggers a command on a device. Similar to avDevice:performClickableAction() but does not move the switch. If controlling a non-owned device, device_id must be specified. Parameters Name Type Description device_id number\\|nil Target device ID or nil command number Command number value number Value to apply Returns nil","title":"dispatch_action(device_id, command, value)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#do_mission_filefile","text":"Description Loads the mission file as a table to a variable mission when parsed the string \"mission\" Parameters Name Type Description file string \"mission\" Returns nil Usage do_mission_file(\"mission\") print_message_to_user(mission.theatre) -- prints map name","title":"do_mission_file(file)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#find_viewportname","text":"Description Finds and returns the viewport object by name. [UNVERIFIED] Parameters Name Type Description name string Name of viewport Returns table - Viewport data","title":"find_viewport(name)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#geo_to_lo_coordslat-lon","text":"Description Converts latitude and longitude to local DCS coordinates. Parameters Name Type Description lat number Latitude in degrees lon number Longitude in degrees Returns vec3 - Local coordinates","title":"geo_to_lo_coords(lat, lon)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_absolute_model_time","text":"Description Returns the time of day in seconds, including fractional seconds. Returns number - Time in seconds","title":"get_absolute_model_time()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_aircraft_draw_argument_valuearg","text":"Description Returns the current value of an aircraft draw argument. Parameters Name Type Description arg number Argument index Returns number - Argument value","title":"get_aircraft_draw_argument_value(arg)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_aircraft_mission_datakey","text":"Description Returns mission-specific data for the current aircraft. Note Only seems to work when parsed \"Radio\" Parameters Name Type Description key string Data key, e.g. \"Radio\" Returns table - Mission data","title":"get_aircraft_mission_data(key)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_aircraft_propertyname","text":"Description Returns a property value from the aircraft. [UNVERIFIED] Parameters Name Type Description name string Property name Returns any","title":"get_aircraft_property(name)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_aircraft_property_or_nilname","text":"Description Returns an aircraft property or nil if it does not exist. [UNVERIFIED] Parameters Name Type Description name string Property name Returns any","title":"get_aircraft_property_or_nil(name)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_aircraft_type","text":"Description Returns the type of the current aircraft. Returns string","title":"get_aircraft_type()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_base_data","text":"Description Returns the base sensor data of the aircraft. Returns BaseData","title":"get_base_data()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_clickable_element_referencepoint_name","text":"Description Returns a reference table to a clickable element. Parameters Name Type Description point_name string Name of the clickable element point Returns table - Functions: set_hint , update , hide","title":"get_clickable_element_reference(point_name)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_cockpit_draw_argument_valuearg","text":"Description Returns the cockpit draw argument value. Parameters Name Type Description arg number Argument index Returns number","title":"get_cockpit_draw_argument_value(arg)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_dcs_plugin_pathname","text":"Description Returns the full path to a DCS plugin. Parameters Name Type Description name string Plugin name Returns string - File path","title":"get_dcs_plugin_path(name)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_input_devices","text":"Description ??? [UNVERIFIED] Returns ???","title":"get_input_devices()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_mission_route","text":"Description Returns the flight plan programmed in the mission editor for aircraft. Returns table - Route as a table of waypoints","title":"get_mission_route()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_model_time","text":"Description Returns the time in seconds since the mission started. Returns number - Time in seconds","title":"get_model_time()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_multimonitor_preset_name","text":"Description Returns the name of the active multi-monitor preset. [UNVERIFIED] Returns string - Preset name","title":"get_multimonitor_preset_name()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_non_sim_random_evenly","text":"Description ??? [UNVERIFIED] Returns ???","title":"get_non_sim_random_evenly()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_option_valueoption-env","text":"Description Returns the value of a specific DCS option. [UNVERIFIED] Parameters Name Type Description option string Option name (e.g. difficulty.hideStick ) env string Environment (e.g. local ) Returns any","title":"get_option_value(option, env)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_param_handleparam","text":"Description Returns a parameter handle, useful for setting or reading shared state between systems like animations, indicators, and EFM Lua bindings. Parameters Name Type Description param string Name of the parameter Returns ParamHandle","title":"get_param_handle(param)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_player_crew_index","text":"Description Method to get the seat the player is sitting in. Returns int - index of the players seat","title":"get_player_crew_index()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_plugin_option","text":"Description ??? [UNVERIFIED] Returns ???","title":"get_plugin_option()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_plugin_option_valueplugin-option-env","text":"Description Returns the value of a plugin-specific option. [UNVERIFIED] Parameters Name Type Description plugin string Plugin name option string Option name env string Environment (e.g. local ) Returns any","title":"get_plugin_option_value(plugin, option, env)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_random_evenly","text":"Description ??? [UNVERIFIED] Returns ???","title":"get_random_evenly()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_random_orderly","text":"Description ??? [UNVERIFIED] Returns ???","title":"get_random_orderly()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_terrain_related_datafile","text":"Description Returns terrain-related data such as beacons, charts, or airfields. Parameters Name Type Description file string Name of the terrain data file (e.g. beacons , Airdromes ) Returns table - Terrain data including display_name , radio , etc.","title":"get_terrain_related_data(file)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_uimainview","text":"Description Returns parameters describing the main UI view. [UNVERIFIED] Returns number, number, number, number, number - start_x , start_y , main_w , main_h , gui_scale","title":"get_UIMainView()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#get_viewports","text":"Description Returns all available viewports. [UNVERIFIED] Returns table - Viewport definitions","title":"get_Viewports()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#list_cockpit_params","text":"Description Returns a table of all cockpit parameters currently available. [UNVERIFIED] Returns table - Cockpit parameter handles","title":"list_cockpit_params()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#list_indicationindicator_id","text":"Description Returns the current indication string of a specified cockpit element. [UNVERIFIED] Parameters Name Type Description indicator_id number ID of the indicator Returns string - Indication text","title":"list_indication(indicator_id)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#lo_to_geo_coordspos","text":"Description Converts a local position vector to geographic latitude and longitude. Parameters Name Type Description pos vec3 Local coordinates Returns number, number - Latitude, Longitude","title":"lo_to_geo_coords(pos)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#load_mission_filefile","text":"Description Loads a Lua mission file and returns it as an executable function chunk. [UNVERIFIED] Parameters Name Type Description file string File path Returns function - Compiled chunk","title":"load_mission_file(file)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#makefontfont_data-rgba","text":"TODO add example, including vfs mount Description Creates a DX-compatible font object for rendering. Parameters Name Type Description font_data table Font descriptor (e.g. font_dejavu_lgc_sans_22 ) rgba table RGBA color (e.g. {0, 255, 0, 255} ) Returns table - Font object","title":"MakeFont(font_data, rgba)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#makematerialtexture_path-rgba","text":"Description Creates a material using a specified texture and color. Parameters Name Type Description texture_path string Path to the texture (e.g. .dds ) rgba table RGBA color Returns table - Material object","title":"MakeMaterial(texture_path, rgba)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#mount_vfs_model_pathpath","text":"Description Mounts a model directory path to the virtual file system. Parameters Name Type Description path string Path to mount Returns nil","title":"mount_vfs_model_path(path)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#mount_vfs_path_to_mount_pointmount_point-path","text":"Description Mounts a path into a specified mount point in the VFS. [UNVERIFIED] Parameters Name Type Description mount_point string Target VFS mount point path path string Real file system path Returns nil","title":"mount_vfs_path_to_mount_point(mount_point, path)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#mount_vfs_texture_archivespath","text":"Description Mounts a texture archive folder into the VFS. Parameters Name Type Description path string Path to archive directory Returns nil","title":"mount_vfs_texture_archives(path)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#mount_vfs_texture_pathpath","text":"Description Mounts a texture path into the VFS. Parameters Name Type Description path string Path to texture folder Returns nil","title":"mount_vfs_texture_path(path)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#print_message_to_usertext","text":"Description Displays a message to the player on screen. Parameters Name Type Description text string Text to display Returns nil","title":"print_message_to_user(text)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#save_to_missionfile-content","text":"Description Writes string content to a mission file path. [UNVERIFIED] Parameters Name Type Description file string Mission file path content string Content to write Returns nil","title":"save_to_mission(file, content)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#set_aircraft_draw_argument_valueargument-value","text":"Description Sets the value of an aircraft draw argument for animations (External Model). Parameters Name Type Description argument number Argument index value number Value to set Returns nil","title":"set_aircraft_draw_argument_value(argument, value)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#set_crew_member_seat_adjustment","text":"Description ??? [UNVERIFIED] Returns ???","title":"set_crew_member_seat_adjustment()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#show_param_handles_listenable","text":"Description Enables or disables display of param handles list. Parameters Name Type Description enable boolean true to show, false to hide Returns nil","title":"show_param_handles_list(enable)"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#switch_labels_off","text":"Description [UNVERIFIED] ??? Returns ???","title":"switch_labels_off()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#track_is_reading","text":"Description Checks if a replay track is currently being played. [UNVERIFIED] Returns boolean","title":"track_is_reading()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#track_is_writing","text":"Description Checks if a replay track is currently being recorded. [UNVERIFIED] Returns boolean","title":"track_is_writing()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#utf8_strlen","text":"Description ??? [UNVERIFIED] Returns ???","title":"UTF8_strlen()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#utf8_substring","text":"Description ??? [UNVERIFIED] Returns ???","title":"UTF8_substring()"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#basedata","text":"Description Device base data structure returned by get_base_data() . This object provides access to various aircraft state parameters. All returned values are in Metric standard units. Note The list of functions are complete, although I don't have documentation for all of them, they should be pretty easy to figure out though","title":"BaseData"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#methods","text":"Method Returns Description getAngleOfAttack() number Gets the current angle of attack. getAngleOfSlide() number Gets the current angle of slide. getBarometricAltitude() number Gets the barometric altitude (meters). getCanopyPos() unknown ??? getCanopyState() unknown ??? getEngineLeftFuelConsumption() unknown ??? getEngineLeftRPM() number Left engine RPM in percent. getEngineLeftTemperatureBeforeTurbine() number Left engine temperature before turbine. getEngineRightFuelConsumption() unknown ??? getEngineRightRPM() number Right engine RPM in percent. getEngineRightTemperatureBeforeTurbine() number Right engine temperature before turbine. getFlapsPos() unknown ??? getFlapsRetracted() unknown ??? getHeading() number Heading in radians getHelicopterCollective() unknown ??? getHelicopterCorrection() unknown ??? getHorizontalAcceleration() unknown ??? getIndicatedAirSpeed() number Indicated airspeed (m/s). getLandingGearHandlePos() unknown ??? getLateralAcceleration() unknown ??? getLeftMainLandingGearDown() unknown ??? getLeftMainLandingGearUp() unknown ??? getMachNumber() number Current Mach number. getMagneticHeading() number Magnetic heading in radians getNoseLandingGearDown() unknown ??? getNoseLandingGearUp() unknown ??? getPitch() number Pitch in radians. getRadarAltitude() number Radar altitude (meters). getRateOfPitch() unknown ??? getRateOfRoll() unknown ??? getRateOfYaw() unknown ??? getRightMainLandingGearDown() unknown ??? getRightMainLandingGearUp() unknown ??? getRoll() number Roll in radians. getRudderPosition() unknown ??? getSelfAirspeed() unknown ??? getSelfCoordinates() unknown Returns getSelfVelocity() unknown ??? getSpeedBrakePos() unknown ??? getStickPitchPosition() unknown ??? getStickRollPosition() unknown ??? getThrottleLeftPosition() unknown ??? getThrottleRightPosition() unknown ??? getTotalFuelWeight() unknown ??? getTrueAirSpeed() unknown ??? getVerticalAcceleration() unknown ??? getVerticalVelocity() unknown ??? getWOW_LeftMainLandingGear() unknown ??? getWOW_NoseLandingGear() unknown ??? getWOW_RightMainLandingGear() unknown ???","title":"Methods"},{"location":"Aircraft/Lua/Stubs/DeviceStubs/#notes","text":"unknown means the return type is not clearly documented or may require further inspection.","title":"Notes"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/","text":"LockOn_Options # The LockOn_Options table provides several useful parameters and values. avionics_language # String representation of avionics language Usage local lang = LockOn_Options.avionics_language cockpit # Table containing cockpit-related options. Usage local cockpitOptions = LockOn_Options.cockpit cockpit_language # String representation of the cockpit language. Usage local cockpitLang = LockOn_Options.cockpit_language common_ground_script_path # String path to the CA (Combined Arms) cockpit scripts. Usage local caPath = LockOn_Options.common_ground_script_path common_script_path # String path to the common cockpit scripts. Usage local commonPath = LockOn_Options.common_script_path date # Table containing the current date (day, month, year). Usage local date = LockOn_Options.date -- date.day, date.month, date.year flight # Table containing flight-related options. Usage local flightOptions = LockOn_Options.flight.unlimited_fuel Values Option Type Description unlimited_fuel bool Unlimited fuel g_effects bool G-effects enabled radio_assist bool Radio assist enabled unlimited_weapons bool Unlimited weapons external_view bool External view enabled easy_radar bool Easy radar mode easy_flight bool Easy flight mode external_labels bool External labels enabled crash_recovery bool Crash recovery enabled immortal bool Invincibility enabled tool_tips_enabled bool Tool tips enabled padlock bool Padlock view enabled aircraft_switching bool Aircraft switching enabled init_conditions # Get the state of the spawn. Useful for configuring your aircraft depending on the initial state. The init_conditions table contains an entry \"birth_place\" which allows you to differentiate spawn types. The following are the spawn string literals: In Air Hot: string | \"AIR_HOT\" On Ground Hot: string | \"GROUND_HOT\" Cold Start: Unknown (see usage) Usage local birth = LockOn_Options.init_conditions.birth_place if birth == \"GROUND_HOT\" or birth == \"AIR_HOT\" then -- hot start init else -- cold start init end measurement_system # String indicating the measurement system in use. Usage local system = LockOn_Options.measurement_system mission # Table containing mission-related options. This does't seem to return anything useful, see do_mission_file(\"mission\") to get the mission file. Usage local mission = LockOn_Options.mission screen # Table containing screen parameters (aspect, height, width). Usage local screen = LockOn_Options.screen -- screen.aspect, screen.height, screen.width script_path # String path to the cockpit scripts. Usage local scriptPath = LockOn_Options.script_path time # Table containing the current time (hours, minutes, seconds). Usage local time = LockOn_Options.time -- time.hours, time.minutes, time.seconds","title":"LockOn_Options"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#lockon_options","text":"The LockOn_Options table provides several useful parameters and values.","title":"LockOn_Options"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#avionics_language","text":"String representation of avionics language Usage local lang = LockOn_Options.avionics_language","title":"avionics_language"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#cockpit","text":"Table containing cockpit-related options. Usage local cockpitOptions = LockOn_Options.cockpit","title":"cockpit"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#cockpit_language","text":"String representation of the cockpit language. Usage local cockpitLang = LockOn_Options.cockpit_language","title":"cockpit_language"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#common_ground_script_path","text":"String path to the CA (Combined Arms) cockpit scripts. Usage local caPath = LockOn_Options.common_ground_script_path","title":"common_ground_script_path"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#common_script_path","text":"String path to the common cockpit scripts. Usage local commonPath = LockOn_Options.common_script_path","title":"common_script_path"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#date","text":"Table containing the current date (day, month, year). Usage local date = LockOn_Options.date -- date.day, date.month, date.year","title":"date"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#flight","text":"Table containing flight-related options. Usage local flightOptions = LockOn_Options.flight.unlimited_fuel Values Option Type Description unlimited_fuel bool Unlimited fuel g_effects bool G-effects enabled radio_assist bool Radio assist enabled unlimited_weapons bool Unlimited weapons external_view bool External view enabled easy_radar bool Easy radar mode easy_flight bool Easy flight mode external_labels bool External labels enabled crash_recovery bool Crash recovery enabled immortal bool Invincibility enabled tool_tips_enabled bool Tool tips enabled padlock bool Padlock view enabled aircraft_switching bool Aircraft switching enabled","title":"flight"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#init_conditions","text":"Get the state of the spawn. Useful for configuring your aircraft depending on the initial state. The init_conditions table contains an entry \"birth_place\" which allows you to differentiate spawn types. The following are the spawn string literals: In Air Hot: string | \"AIR_HOT\" On Ground Hot: string | \"GROUND_HOT\" Cold Start: Unknown (see usage) Usage local birth = LockOn_Options.init_conditions.birth_place if birth == \"GROUND_HOT\" or birth == \"AIR_HOT\" then -- hot start init else -- cold start init end","title":"init_conditions"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#measurement_system","text":"String indicating the measurement system in use. Usage local system = LockOn_Options.measurement_system","title":"measurement_system"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#mission","text":"Table containing mission-related options. This does't seem to return anything useful, see do_mission_file(\"mission\") to get the mission file. Usage local mission = LockOn_Options.mission","title":"mission"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#screen","text":"Table containing screen parameters (aspect, height, width). Usage local screen = LockOn_Options.screen -- screen.aspect, screen.height, screen.width","title":"screen"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#script_path","text":"String path to the cockpit scripts. Usage local scriptPath = LockOn_Options.script_path","title":"script_path"},{"location":"Aircraft/Lua/Stubs/LockOnOptions/#time","text":"Table containing the current time (hours, minutes, seconds). Usage local time = LockOn_Options.time -- time.hours, time.minutes, time.seconds","title":"time"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/","text":"CreateGauge(type) # Description Creates a gauge object to drive animation arguments. Parameters Name Type Description type string | nil Type of gauge: nil , \"parameter\" , \"cycled\" , or \"external_arg\" Returns Gauge - A new gauge object. Gauge (class) # Description Describes the configuration of a cockpit gauge animation. Field Type Description arg_number number Argument number to be animated. input table Input range from controller or parameter (e.g. {0, 1} ). output table Output animation range for the argument (e.g. {0, 1} ). controller userdata | nil Controller object (from LoRegisterPanelControls ) for types nil / cycled . params table | nil Parameters for the controller function. parameter_name string | nil Parameter name (for type \"parameter\" ). cycle_value number | nil Cycle value (for type \"cycled\" ). external_arg number | nil External argument number (for type \"external_arg\" ). Example Gauge # Using a Controller # vsi = CreateGauge() vsi.arg_number = 48 vsi.input = {-6000*ft_to_meter/60, 6000*ft_to_meter/60} vsi.output = {-1, 1} vsi.controller = controllers.base_gauge_VerticalVelocity Using a Parameter # CurrTime_hours = CreateGauge(\"parameter\") CurrTime_hours.parameter_name = \"CURRTIME_HOURS\" CurrTime_hours.arg_number = 440 CurrTime_hours.input = {0.0, 12.0} CurrTime_hours.output = {1.0, -1.0} LoRegisterPanelControls() # Description Returns the list of main panel controllers registered for the aircraft. Returns MainPanelControls - A userdata object representing all registered panel controls. MainPanelControls (class) # Description Returned from LoRegisterPanelControls() , this object exposes all available cockpit control animations and their linked gauges. Fields # Field Name Type Description Panel_Rot_X userdata Panel X-axis rotation Panel_Shake_Y userdata Panel Y-axis shake Panel_Shake_Z userdata Panel Z-axis shake base_gauge_AngleOfAttack userdata Gauge: Angle of Attack base_gauge_AngleOfSlide userdata Gauge: Angle of Slide base_gauge_BarometricAltitude userdata Gauge: Barometric Altitude base_gauge_CanopyPos userdata Gauge: Canopy Position base_gauge_CanopyState userdata Gauge: Canopy State base_gauge_EngineLeftFuelConsumption userdata Gauge: Left Engine Fuel Consumption base_gauge_EngineLeftRPM userdata Gauge: Left Engine RPM base_gauge_EngineLeftTemperatureBeforeTurbine userdata Gauge: Left Engine Temp (pre-turbine) base_gauge_EngineRightFuelConsumption userdata Gauge: Right Engine Fuel Consumption base_gauge_EngineRightRPM userdata Gauge: Right Engine RPM base_gauge_EngineRightTemperatureBeforeTurbine userdata Gauge: Right Engine Temp (pre-turbine) base_gauge_FlapsPos userdata Gauge: Flaps Position base_gauge_FlapsRetracted userdata Gauge: Flaps Retracted base_gauge_Heading userdata Gauge: Heading base_gauge_HelicopterCollective userdata Gauge: Helicopter Collective base_gauge_HelicopterCorrection userdata Gauge: Helicopter Correction base_gauge_HorizontalAcceleration userdata Gauge: Horizontal Acceleration base_gauge_IndicatedAirSpeed userdata Gauge: Indicated Airspeed base_gauge_LandingGearHandlePos userdata Gauge: Gear Handle Position base_gauge_LateralAcceleration userdata Gauge: Lateral Acceleration base_gauge_LeftMainLandingGearDown userdata Gauge: Left Main Gear Down base_gauge_LeftMainLandingGearUp userdata Gauge: Left Main Gear Up base_gauge_MachNumber userdata Gauge: Mach Number base_gauge_MagneticHeading userdata Gauge: Magnetic Heading base_gauge_NoseLandingGearDown userdata Gauge: Nose Gear Down base_gauge_NoseLandingGearUp userdata Gauge: Nose Gear Up base_gauge_Pitch userdata Gauge: Pitch base_gauge_RadarAltitude userdata Gauge: Radar Altitude base_gauge_RateOfPitch userdata Gauge: Rate of Pitch base_gauge_RateOfRoll userdata Gauge: Rate of Roll base_gauge_RateOfYaw userdata Gauge: Rate of Yaw base_gauge_RightMainLandingGearDown userdata Gauge: Right Main Gear Down base_gauge_RightMainLandingGearUp userdata Gauge: Right Main Gear Up base_gauge_Roll userdata Gauge: Roll base_gauge_RudderPosition userdata Gauge: Rudder Position base_gauge_SpeedBrakePos userdata Gauge: Speed Brake Position base_gauge_StickPitchPosition userdata Gauge: Stick Pitch Position base_gauge_StickRollPosition userdata Gauge: Stick Roll Position base_gauge_ThrottleLeftPosition userdata Gauge: Left Throttle Position base_gauge_ThrottleRightPosition userdata Gauge: Right Throttle Position base_gauge_TotalFuelWeight userdata Gauge: Total Fuel Weight base_gauge_TrueAirSpeed userdata Gauge: True Airspeed base_gauge_VerticalAcceleration userdata Gauge: Vertical Acceleration base_gauge_VerticalVelocity userdata Gauge: Vertical Velocity base_gauge_WOW_LeftMainLandingGear userdata Gauge: Left Main Weight-On-Wheels base_gauge_WOW_NoseLandingGear userdata Gauge: Nose Weight-On-Wheels base_gauge_WOW_RightMainLandingGear userdata Gauge: Right Main Weight-On-Wheels canopy userdata Canopy animation controller day_night_texture_switcher userdata Night/day mode texture toggle head_shift_X userdata Head shift X controller head_shift_Y userdata Head shift Y controller head_shift_Z userdata Head shift Z controller mirrors_draw userdata Mirror draw state pilot_draw userdata Pilot visibility Let me know if you want this grouped, styled differently (e.g., collapsible sections), or exported.","title":"Mainpanel Stubs"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#creategaugetype","text":"Description Creates a gauge object to drive animation arguments. Parameters Name Type Description type string | nil Type of gauge: nil , \"parameter\" , \"cycled\" , or \"external_arg\" Returns Gauge - A new gauge object.","title":"CreateGauge(type)"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#gauge-class","text":"Description Describes the configuration of a cockpit gauge animation. Field Type Description arg_number number Argument number to be animated. input table Input range from controller or parameter (e.g. {0, 1} ). output table Output animation range for the argument (e.g. {0, 1} ). controller userdata | nil Controller object (from LoRegisterPanelControls ) for types nil / cycled . params table | nil Parameters for the controller function. parameter_name string | nil Parameter name (for type \"parameter\" ). cycle_value number | nil Cycle value (for type \"cycled\" ). external_arg number | nil External argument number (for type \"external_arg\" ).","title":"Gauge (class)"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#example-gauge","text":"","title":"Example Gauge"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#using-a-controller","text":"vsi = CreateGauge() vsi.arg_number = 48 vsi.input = {-6000*ft_to_meter/60, 6000*ft_to_meter/60} vsi.output = {-1, 1} vsi.controller = controllers.base_gauge_VerticalVelocity","title":"Using a Controller"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#using-a-parameter","text":"CurrTime_hours = CreateGauge(\"parameter\") CurrTime_hours.parameter_name = \"CURRTIME_HOURS\" CurrTime_hours.arg_number = 440 CurrTime_hours.input = {0.0, 12.0} CurrTime_hours.output = {1.0, -1.0}","title":"Using a Parameter"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#loregisterpanelcontrols","text":"Description Returns the list of main panel controllers registered for the aircraft. Returns MainPanelControls - A userdata object representing all registered panel controls.","title":"LoRegisterPanelControls()"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#mainpanelcontrols-class","text":"Description Returned from LoRegisterPanelControls() , this object exposes all available cockpit control animations and their linked gauges.","title":"MainPanelControls (class)"},{"location":"Aircraft/Lua/Stubs/MainPanelStubs/#fields","text":"Field Name Type Description Panel_Rot_X userdata Panel X-axis rotation Panel_Shake_Y userdata Panel Y-axis shake Panel_Shake_Z userdata Panel Z-axis shake base_gauge_AngleOfAttack userdata Gauge: Angle of Attack base_gauge_AngleOfSlide userdata Gauge: Angle of Slide base_gauge_BarometricAltitude userdata Gauge: Barometric Altitude base_gauge_CanopyPos userdata Gauge: Canopy Position base_gauge_CanopyState userdata Gauge: Canopy State base_gauge_EngineLeftFuelConsumption userdata Gauge: Left Engine Fuel Consumption base_gauge_EngineLeftRPM userdata Gauge: Left Engine RPM base_gauge_EngineLeftTemperatureBeforeTurbine userdata Gauge: Left Engine Temp (pre-turbine) base_gauge_EngineRightFuelConsumption userdata Gauge: Right Engine Fuel Consumption base_gauge_EngineRightRPM userdata Gauge: Right Engine RPM base_gauge_EngineRightTemperatureBeforeTurbine userdata Gauge: Right Engine Temp (pre-turbine) base_gauge_FlapsPos userdata Gauge: Flaps Position base_gauge_FlapsRetracted userdata Gauge: Flaps Retracted base_gauge_Heading userdata Gauge: Heading base_gauge_HelicopterCollective userdata Gauge: Helicopter Collective base_gauge_HelicopterCorrection userdata Gauge: Helicopter Correction base_gauge_HorizontalAcceleration userdata Gauge: Horizontal Acceleration base_gauge_IndicatedAirSpeed userdata Gauge: Indicated Airspeed base_gauge_LandingGearHandlePos userdata Gauge: Gear Handle Position base_gauge_LateralAcceleration userdata Gauge: Lateral Acceleration base_gauge_LeftMainLandingGearDown userdata Gauge: Left Main Gear Down base_gauge_LeftMainLandingGearUp userdata Gauge: Left Main Gear Up base_gauge_MachNumber userdata Gauge: Mach Number base_gauge_MagneticHeading userdata Gauge: Magnetic Heading base_gauge_NoseLandingGearDown userdata Gauge: Nose Gear Down base_gauge_NoseLandingGearUp userdata Gauge: Nose Gear Up base_gauge_Pitch userdata Gauge: Pitch base_gauge_RadarAltitude userdata Gauge: Radar Altitude base_gauge_RateOfPitch userdata Gauge: Rate of Pitch base_gauge_RateOfRoll userdata Gauge: Rate of Roll base_gauge_RateOfYaw userdata Gauge: Rate of Yaw base_gauge_RightMainLandingGearDown userdata Gauge: Right Main Gear Down base_gauge_RightMainLandingGearUp userdata Gauge: Right Main Gear Up base_gauge_Roll userdata Gauge: Roll base_gauge_RudderPosition userdata Gauge: Rudder Position base_gauge_SpeedBrakePos userdata Gauge: Speed Brake Position base_gauge_StickPitchPosition userdata Gauge: Stick Pitch Position base_gauge_StickRollPosition userdata Gauge: Stick Roll Position base_gauge_ThrottleLeftPosition userdata Gauge: Left Throttle Position base_gauge_ThrottleRightPosition userdata Gauge: Right Throttle Position base_gauge_TotalFuelWeight userdata Gauge: Total Fuel Weight base_gauge_TrueAirSpeed userdata Gauge: True Airspeed base_gauge_VerticalAcceleration userdata Gauge: Vertical Acceleration base_gauge_VerticalVelocity userdata Gauge: Vertical Velocity base_gauge_WOW_LeftMainLandingGear userdata Gauge: Left Main Weight-On-Wheels base_gauge_WOW_NoseLandingGear userdata Gauge: Nose Weight-On-Wheels base_gauge_WOW_RightMainLandingGear userdata Gauge: Right Main Weight-On-Wheels canopy userdata Canopy animation controller day_night_texture_switcher userdata Night/day mode texture toggle head_shift_X userdata Head shift X controller head_shift_Y userdata Head shift Y controller head_shift_Z userdata Head shift Z controller mirrors_draw userdata Mirror draw state pilot_draw userdata Pilot visibility Let me know if you want this grouped, styled differently (e.g., collapsible sections), or exported.","title":"Fields"},{"location":"Database/draw-args/","text":"Reserved Draw Args # Warning This is not complete, please let me know if you have more to add. Sourced From TF-51, doesn't take into account FC3 specific args Arg Usage Values 0 Tail/Nose wheel retraction 0 wheel up, 1 wheel down 1 Tail/Nose wheel suspension 0 Extended, 1, compressed 2 Tail/Nose wheel steering -1 left, 0 straight, 1 right 38 Canopy 0 closed, 0.9 open, 1 invisible 101 Tail/Nose wheel rotation 0-1 increasing is forward 102 Right wheel rotation 0-1 increasing is forward 103 Left wheel rotation 0-1 increasing is forward 114 Canopy Visibility 0 Visible, 1 invisible 115 Right Wheel Door 0 closed, 1 open 116 Left Wheel Door 0 closed, 1 open 407 Prop Rotation -1 to 1 2 revolutions anti-clockwise 475 Prop blade visibility 0 visible, 0.1 - 1 invisible Hayds got bored while writing this, but he'll get back to it in two weeks\u2122","title":"Draw Args"},{"location":"Database/draw-args/#reserved-draw-args","text":"Warning This is not complete, please let me know if you have more to add. Sourced From TF-51, doesn't take into account FC3 specific args Arg Usage Values 0 Tail/Nose wheel retraction 0 wheel up, 1 wheel down 1 Tail/Nose wheel suspension 0 Extended, 1, compressed 2 Tail/Nose wheel steering -1 left, 0 straight, 1 right 38 Canopy 0 closed, 0.9 open, 1 invisible 101 Tail/Nose wheel rotation 0-1 increasing is forward 102 Right wheel rotation 0-1 increasing is forward 103 Left wheel rotation 0-1 increasing is forward 114 Canopy Visibility 0 Visible, 1 invisible 115 Right Wheel Door 0 closed, 1 open 116 Left Wheel Door 0 closed, 1 open 407 Prop Rotation -1 to 1 2 revolutions anti-clockwise 475 Prop blade visibility 0 visible, 0.1 - 1 invisible Hayds got bored while writing this, but he'll get back to it in two weeks\u2122","title":"Reserved Draw Args"},{"location":"Database/iCommands/","text":"iCommands # Heres a list of iCommands for DCS A downloadable lua file to include into your mod can be found here Or use CTRL + F and search this page in the list below to find what you're looking for. ---@diagnostic disable: lowercase-global iCommandNull = 0 iCommandRotatePlus = 1 iCommandRotateMinus = 2 iCommandUpPilon = 3 iCommandDownPilon = 4 iCommandMissileFire = 5 iCommandGunFire = 6 iCommandViewCockpit = 7 iCommandViewAir = 8 iCommandViewTower = 9 iCommandViewGround = 10 iCommandViewMirage = 11 iCommandViewChase = 12 iCommandViewNavy = 13 iCommandViewFight = 14 iCommandViewAWACS = 15 iCommandViewFree = 16 iCommandViewTempCockpitOn = 17 iCommandViewTempCockpitOff = 18 iCommandViewLock = 19 iCommandViewUnlock = 20 iCommandViewMe = 21 iCommandViewPlus = 22 iCommandViewFriends = 23 iCommandViewEnemies = 24 iCommandViewNeutrals = 25 iCommandViewAll = 26 iCommandViewExplosion = 27 iCommandViewLeft = 28 iCommandViewRight = 29 iCommandViewUp = 30 iCommandViewDown = 31 iCommandViewLeftSlow = 32 iCommandViewRightSlow = 33 iCommandViewUpSlow = 34 iCommandViewDownSlow = 35 iCommandViewCenter = 36 iCommandViewForward = 37 iCommandViewBack = 38 iCommandViewForwardSlow = 39 iCommandViewBackSlow = 40 iCommandViewCameraLeft = 41 iCommandViewCameraRight = 42 iCommandViewCameraUp = 43 iCommandViewCameraDown = 44 iCommandViewCameraLeftSlow = 45 iCommandViewCameraRightSlow = 46 iCommandViewCameraUpSlow = 47 iCommandViewCameraDownSlow = 48 iCommandViewCameraCenter = 49 iCommandFriendlyChat = 50 iCommandQuit = 51 iCommandBrakeGo = 52 iCommandAccelerate = 53 iCommandOneFrame = 54 iCommandTrkEsc = 55 iCommandPlayerCntrl = 56 iCommandChat = 57 iCommandPlaneSAUAutomatic = 58 iCommandPlaneSAUHBarometric = 59 iCommandPlaneSAUHRadio = 60 iCommandPlaneSAUHorizon = 61 iCommandPlaneAutopilot = 62 iCommandPlaneAUTOnOff = 63 iCommandPlaneAUTIncrease = 64 iCommandPlaneAUTDecrease = 65 iCommandPlaneAUTIncreaseRegime = 66 iCommandPlaneAUTDecreaseRegime = 67 iCommandPlaneGear = 68 iCommandPlaneHook = 69 iCommandPlanePackWing = 70 iCommandPlaneFonar = 71 iCommandPlaneFlaps = 72 iCommandPlaneAirBrake = 73 iCommandPlaneWheelBrakeOn = 74 iCommandPlaneWheelBrakeOff = 75 iCommandPlaneParachute = 76 iCommandPlaneDropSnar = 77 iCommandPlaneWingtipSmokeOnOff = 78 iCommandPlaneFuelOn = 79 iCommandPlaneFuelOff = 80 iCommandPlaneSalvoOnOff = 81 iCommandPlaneJettisonWeapons = 82 iCommandPlaneEject = 83 iCommandPlaneFire = 84 iCommandPlaneFireOff = 85 iCommandPlaneRadarOnOff = 86 iCommandPlaneEOSOnOff = 87 iCommandPlaneRadarLeft = 88 iCommandPlaneRadarRight = 89 iCommandPlaneRadarUp = 90 iCommandPlaneRadarDown = 91 iCommandPlaneRadarCenter = 92 iCommandPlaneTrimLeft = 93 iCommandPlaneTrimRight = 94 iCommandPlaneTrimUp = 95 iCommandPlaneTrimDown = 96 iCommandPlaneTrimCancel = 97 iCommandPlaneTrimLeftRudder = 98 iCommandPlaneTrimRightRudder = 99 iCommandPlaneChangeLock = 100 iCommandPlaneChangeWeapon = 101 iCommandPlaneChangeTarget = 102 iCommandPlaneZoomIn = 103 iCommandPlaneZoomOut = 104 iCommandPlaneModeNAV = 105 iCommandPlaneModeBVR = 106 iCommandPlaneModeVS = 107 iCommandPlaneModeBore = 108 iCommandPlaneModeHelmet = 109 iCommandPlaneModeFI0 = 110 iCommandPlaneModeGround = 111 iCommandPlaneModeGrid = 112 iCommandPlaneModeCannon = 113 iCommandPlaneDoAndHome = 114 iCommandPlaneDoAndBack = 115 iCommandPlaneFormation = 116 iCommandPlaneJoinUp = 117 iCommandPlaneAttackMyTarget = 118 iCommandPlaneCoverMySix = 119 iCommandPlaneShipTakeOff = 120 iCommandPlaneCobra = 121 iCommandSoundOnOff = 122 iCommandSoundMicOn = 123 iCommandSoundMicOff = 124 iCommandViewRightMirrorOn = 125 iCommandViewRightMirrorOff = 126 iCommandViewLeftMirrorOn = 127 iCommandViewLeftMirrorOff = 128 iCommandNaturalViewCockpitIn = 129 iCommandNaturalViewCockpitOut = 130 iCommandViewLndgOfficer = 131 iCommandViewCaptainBridge = 132 iCommandViewGroundAndPlane = 133 iCommandViewPlaneAndGround = 134 iCommandViewWeaponAndTarget = 135 iCommandActiveJamming = 136 iCommandLandDetailsIncrease = 137 iCommandLandDetailsDecrease = 138 iCommandSelecterLeft = 139 iCommandSelecterRight = 140 iCommandSelecterUp = 141 iCommandSelecterDown = 142 iCommandRefusalTWS = 143 iCommandPlaneResetMasterWarning = 144 iCommandPlaneFlapsOn = 145 iCommandPlaneFlapsOff = 146 iCommandPlaneAirBrakeOn = 147 iCommandPlaneAirBrakeOff = 148 iCommandViewWeapons = 149 iCommandViewStatic = 150 iCommandViewTargets = 151 iCommandInfoOnOff = 152 iCommandInfoTextOnOff = 153 iCommandInfoDataOnOff = 154 iCommandPlaneAirRefuel = 155 iCommandBrightnessILS = 156 iCommandGraphicsFrameRate = 157 iCommandViewFreeJump = 158 iCommandViewSpeedUp = 159 iCommandViewSlowDown = 160 iCommandPlaneAUTIncreaseLeft = 161 iCommandPlaneAUTDecreaseLeft = 162 iCommandPlaneAUTIncreaseRight = 163 iCommandPlaneAUTDecreaseRight = 164 iCommandPlaneAUTIncreaseRegimeLeft = 165 iCommandPlaneAUTDecreaseRegimeLeft = 166 iCommandPlaneAUTIncreaseRegimeRight = 167 iCommandPlaneAUTDecreaseRegimeRight = 168 iCommandPlaneImmortal = 169 iCommandPlaneJettisonFuelTanksUp = 170 iCommandPlaneJettisonWeaponsUp = 171 iCommandPlaneAUTUnlockLeft = 172 iCommandPlaneAUTUnlockRight = 173 iCommandPlaneTrimViewOnOff = 174 iCommandPlaneLightsOnOff = 175 iCommandPlaneDropSnarOnce = 176 iCommandViewAngleDefault = 177 iCommandPlaneJettisonFuelTanks = 178 iCommandToggleCommandMenu = 179 iCommandViewSwitchReverse = 180 iCommandViewSwitchForward = 181 iCommandViewObjectIgnore = 182 iCommandViewObjectsAll = 183 iCommandViewTerrainLock = 184 iCommandViewFromTo = 185 iCommandPlaneDown = 186 iCommandPlaneUp = 187 iCommandPlaneLeft = 188 iCommandPlaneRight = 189 iCommandViewLocal = 190 iCommandDecelerate = 191 iCommandPlaneJump = 192 iCommandPlaneUpStart = 193 iCommandPlaneUpStop = 194 iCommandPlaneDownStart = 195 iCommandPlaneDownStop = 196 iCommandPlaneLeftStart = 197 iCommandPlaneLeftStop = 198 iCommandPlaneRightStart = 199 iCommandPlaneRightStop = 200 iCommandPlaneLeftRudderStart = 201 iCommandPlaneLeftRudderStop = 202 iCommandPlaneRightRudderStart = 203 iCommandPlaneRightRudderStop = 204 iCommandViewUpRight = 205 iCommandViewDownRight = 206 iCommandViewDownLeft = 207 iCommandViewUpLeft = 208 iCommandViewStop = 209 iCommandViewUpRightSlow = 210 iCommandViewDownRightSlow = 211 iCommandViewDownLeftSlow = 212 iCommandViewUpLeftSlow = 213 iCommandViewStopSlow = 214 iCommandPlaneTrimStop = 215 iCommandPointOfViewUp = 216 iCommandPointOfViewUpRight = 217 iCommandPointOfViewRight = 218 iCommandPointOfViewDownRight = 219 iCommandPointOfViewDown = 220 iCommandPointOfViewDownLeft = 221 iCommandPointOfViewLeft = 222 iCommandPointOfViewUpLeft = 223 iCommandPointOfViewCenter = 224 iCommandPointOfViewStop = 225 iCommandSelecterUpRight = 226 iCommandSelecterDownRight = 227 iCommandSelecterDownLeft = 228 iCommandSelecterUpLeft = 229 iCommandSelecterStop = 230 iCommandPlaneRadarUpRight = 231 iCommandPlaneRadarDownRight = 232 iCommandPlaneRadarDownLeft = 233 iCommandPlaneRadarUpLeft = 234 iCommandPlaneRadarStop = 235 iCommandViewSaveAngles = 236 iCommandViewTempCockpitToggle = 237 iCommandViewSaveAngles3 = 238 iCommandViewSaveAngles4 = 239 iCommandViewSaveAngles5 = 240 iCommandViewSaveAngles6 = 241 iCommandViewSaveAngles7 = 242 iCommandViewSaveAngles8 = 243 iCommandViewSaveAngles9 = 244 iCommandViewCoordinatesInLinearUnits = 245 iCommandNoAcceleration = 246 iCommandPlaneHUDFilterOnOff = 247 iCommandCockpitTakeControl = 248 iCommandRollbackSave = 249 iCommandRollBack = 250 iCommandRollForward = 251 iCommandPlaneMasterCaution = 252 iCommandPlaneScalesReject = 253 iCommandPlaneBettyRepeat = 254 iCommandSaveGame = 255 iCommandLoadGame = 256 iCommandScreenShot = 257 iCommandThreatMissilePadlock = 258 iCommandAllMissilePadlock = 259 iCommandFinishTrack = 260 iCommandMarkerState = 261 iCommandDecreaseRadarScanArea = 262 iCommandIncreaseRadarScanArea = 263 iCommandMarkerStatePlane = 264 iCommandMarkerStateRocket = 265 iCommandMarkerStateShip = 266 iCommandAWACSHomeBearing = 267 iCommandAWACSTankerBearing = 268 iCommandAWACSBanditBearing = 269 iCommandAWACSDeclare = 270 iCommandEasyRadarOnOff = 271 iCommandAutoLockOnNearestAircraft = 272 iCommandAutoLockOnCenterAircraft = 273 iCommandAutoLockOnNextAircraft = 274 iCommandAutoLockOnPreviousAircraft = 275 iCommandAutoLockOnNearestSurfaceTarget = 276 iCommandAutoLockOnCenterSurfaceTarget = 277 iCommandAutoLockOnNextSurfaceTarget = 278 iCommandAutoLockOnPreviousSurfaceTarget = 279 iCommandChangeGunRateOfFire = 280 iCommandChangeRippleQuantity = 281 iCommandChangeRippleInterval = 282 iCommandSwitchMasterArm = 283 iCommandChangeReleaseMode = 284 iCommandPlaneRadarChangeMode = 285 iCommandChangeRWRMode = 286 iCommandPromotePlane = 287 iCommandFlightClockReset = 288 iCommandViewForwardSlowStop = 289 iCommandViewBackSlowStop = 290 iCommandViewForwardStop = 291 iCommandViewBackStop = 292 iCommandFreezeActionSystem = 293 iCommandUnfreezeActionSystem = 294 iCommandViewHorStop = 295 iCommandViewVertStop = 296 iCommandAutopilotEmergOFF_up = 297 iCommandViewTowerJump = 298 iCommandViewCameraJiggle = 299 iCommandPlaneCockpitIllumination = 300 iCommandHelicopter_PPR_button_K_up = 301 iCommandHelicopter_PPR_button_H_up = 302 iCommandHelicopter_PPR_button_T_up = 303 iCommandHelicopter_PPR_button_B_up = 304 iCommandHelicopter_PPR_button_DIR_up = 305 iCommandTransferCursor = 306 iCommandRecordCursorOnOff = 307 iCommandChangeRippleIntervalDown = 308 iCommandEnginesStart = 309 iCommandEnginesStop = 310 iCommandLeftEngineStart = 311 iCommandRightEngineStart = 312 iCommandLeftEngineStop = 313 iCommandRightEngineStop = 314 iCommandPowerOnOff = 315 iCommandAltimeterPressureIncrease = 316 iCommandAltimeterPressureDecrease = 317 iCommandAltimeterPressureStop = 318 iCommandTrackEditReplace = 319 iCommandTrackEditInsert = 320 iCommandViewFastMouse = 321 iCommandViewSlowMouse = 322 iCommandViewNormalMouse = 323 iCommandRecordSubtitleOn = 324 iCommandRecordSubtitleOff = 325 iCommandViewHUDOnlyOnOff = 326 iCommandRecoverHuman = 327 iCommandPlaneHeadLightOnOff = 328 iCommandPlaneLockPadlock = 329 iCommandPlaneUnlockPadlock = 330 iCommandViewFastKeyboard = 331 iCommandViewSlowKeyboard = 332 iCommandViewNormalKeyboard = 333 iCommandViewExternalZoomIn = 334 iCommandViewExternalZoomInStop = 335 iCommandViewExternalZoomOut = 336 iCommandViewExternalZoomOutStop = 337 iCommandViewExternalZoomDefault = 338 iCommandMouseViewOnOff = 339 iCommandViewCameraMoveMode = 340 iCommandViewFightGround = 341 iCommandViewCameraUpLeft = 342 iCommandViewCameraUpRight = 343 iCommandViewCameraDownLeft = 344 iCommandViewCameraDownRight = 345 iCommandViewPanToggle = 346 iCommandViewCameraReturn = 347 iCommandViewLocomotivesToggle = 348 iCommandPlaneLaunchPermissionOverride = 349 iCommandPlanePickleOn = 350 iCommandPlanePickleOff = 351 iCommandViewCameraBaseReturn = 352 iCommandViewCameraUpLeftSlow = 353 iCommandViewCameraUpRightSlow = 354 iCommandViewCameraDownLeftSlow = 355 iCommandViewCameraDownRightSlow = 356 iCommandPlaneDropFlareOnce = 357 iCommandPlaneDropChaffOnce = 358 iCommandViewRear = 359 iCommandScoresWindowToggle = 360 iCommandCockpitClickOn = 361 iCommandCockpitClickOff = 362 iCommandCockpitClickModeOnOff = 363 iCommandPlaneCMDDispence = 364 iCommandPlaneCMDDispenceOff = 365 iCommandPlaneCMDDispenceStop = 366 iCommandPlaneCMDDispenceStopOff = 367 iCommandPlaneCMDChangeRippleQuantity = 368 iCommandPlaneCMDChangeRippleQuantityOff = 369 iCommandPlaneCMDChangeRippleInterval = 370 iCommandPlaneCMDChangeRippleIntervalOff = 371 iCommandPlaneCMDChangeBurstAmount = 372 iCommandPlaneCMDChangeBurstAmountOff = 373 iCommandPlaneCMDCancelCurrentProgram = 374 iCommandPlaneCMDCancelCurrentProgramOff = 375 iCommandPlaneCMDChangeBoard = 376 iCommandPlaneCMDShowAmountOrProgram = 377 iCommandPlaneCancelWeaponsDelivery = 378 iCommandPlaneMasterCautionOff = 379 iCommandPlane_SpotLight_hor_stop = 380 iCommandHelicopter_SelectWeapon_hor_up = 381 iCommandHelicopter_SelectWeapon_vert_up = 382 iCommandViewChaseArcade = 383 iCommandAutoLockOnClear = 384 iCommandHelicopterHover_up = 385 iCommandPlaneStabTangBank = 386 iCommandPlaneStabHbarBank = 387 iCommandPlaneStabHorizon = 388 iCommandPlaneStabHbar = 389 iCommandPlaneStabHrad = 390 iCommandActiveIRJamming = 391 iCommandPlaneLaserRangerOnOff = 392 iCommandPlaneNightTVOnOff = 393 iCommandPlaneChangeRadarPRF = 394 iCommandViewKeepTerrain = 395 iCommandViewSnapView0 = 396 iCommandViewSnapView1 = 397 iCommandViewSnapView2 = 398 iCommandViewSnapView3 = 399 iCommandViewSnapView4 = 400 iCommandViewSnapView5 = 401 iCommandViewSnapView6 = 402 iCommandViewSnapView7 = 403 iCommandViewSnapView8 = 404 iCommandViewSnapView9 = 405 iCommandViewSnapViewStop = 406 iCommandViewBinocular = 407 iCommandPlaneStabCancel = 408 iCommandPlaneThreatWarnSoundVolumeDown = 409 iCommandPlaneThreatWarnSoundVolumeUp = 410 iCommandViewLaserOnOff = 411 iCommandPlaneIncreaseBase_Distance = 412 iCommandPlaneDecreaseBase_Distance = 413 iCommandPlaneStopBase_Distance = 414 iCommandViewIRPointerOnOff = 415 iCommandViewNVGOnOff = 416 iCommandViewAWACSUnitInfoOn = 423 iCommandViewAWACSUnitInfoOff = 424 iCommandViewIR = 425 iCommandViewTargetType = 426 iCommandPlaneAutopilotOverrideOn = 427 iCommandPlaneAutopilotOverrideOff = 428 iCommandPlaneRouteAutopilot = 429 iCommandPlaneGearUp = 430 iCommandPlaneGearDown = 431 iCommandViewAWACSJump = 432 iCommandCockpitSecondClickOn = 433 iCommandCockpitSecondClickOff = 434 iCommandCompassRose = 435 iCommandViewAWACSClearDistance = 436 iCommandViewAWACSOutOfFocus = 437 iCommandViewNightVisionGogglesOn = 438 iCommandPlaneDesignate_CageOn = 439 iCommandPlaneDesignate_CageOff = 440 iCommandPlaneDesignate_CageOn_vertical = 441 iCommandPlaneDesignate_CageOn_horizontal = 442 iCommandPlaneDLK_Target1 = 443 iCommandPlaneDLK_Target2 = 444 iCommandPlaneDLK_Target3 = 445 iCommandPlaneDLK_RefPoint = 446 iCommandPlaneDLK_Wingman1 = 447 iCommandPlaneDLK_Wingman2 = 448 iCommandPlaneDLK_Wingman3 = 449 iCommandPlaneDLK_Wingman4 = 450 iCommandPlaneDLK_All = 451 iCommandPlaneDLK_Erase = 452 iCommandPlaneDLK_Ingress = 453 iCommandPlaneDLK_SendMemory = 454 iCommandPlaneNavChangePanelModeRight = 455 iCommandPlaneNavChangePanelModeLeft = 456 iCommandPlaneNavSetFixtakingMode = 457 iCommandPlaneNav_DLK_OnOff = 458 iCommandPlaneNav_PB0 = 459 iCommandPlaneNav_PB1 = 460 iCommandPlaneNav_PB2 = 461 iCommandPlaneNav_PB3 = 462 iCommandPlaneNav_PB4 = 463 iCommandPlaneNav_PB5 = 464 iCommandPlaneNav_PB6 = 465 iCommandPlaneNav_PB7 = 466 iCommandPlaneNav_PB8 = 467 iCommandPlaneNav_PB9 = 468 iCommandPlaneNav_Steerpoints = 469 iCommandPlaneNav_INU_realign = 470 iCommandPlaneNav_POS_corrMode = 471 iCommandPlaneNav_INU_precise_align = 472 iCommandPlaneNav_Airfields = 473 iCommandPlaneNav_INU_normal_align = 474 iCommandPlaneNav_Targets = 475 iCommandPlaneNav_Enter = 476 iCommandPlaneNav_Cancel = 477 iCommandPlaneNav_POS_init = 478 iCommandPlaneNav_SelfCoord = 479 iCommandPlaneNav_CourseTimeRange = 480 iCommandPlaneNav_Wind = 481 iCommandPlaneNav_THeadingTimeRangeF = 482 iCommandPlaneNav_BearingRangeT = 483 iCommandViewPitCameraMoveUp = 484 iCommandViewPitCameraMoveDown = 485 iCommandViewPitCameraMoveLeft = 486 iCommandViewPitCameraMoveRight = 487 iCommandViewPitCameraMoveForward = 488 iCommandViewPitCameraMoveBack = 489 iCommandViewPitCameraMoveStop = 490 iCommandViewPitCameraMoveCenter = 491 iCommandViewPitHeadOnOff = 492 iCommandPlaneCockpitIlluminationPanels = 493 iCommandPlaneCockpitIlluminationGauges = 494 iCommandPlane_ABRIS_Power = 495 iCommandPlane_ABRIS_BT_1 = 496 iCommandPlane_ABRIS_BT_2 = 497 iCommandPlane_ABRIS_BT_3 = 498 iCommandPlane_ABRIS_BT_4 = 499 iCommandPlane_ABRIS_BT_5 = 500 iCommandPlane_ABRIS_Axis_Increase = 501 iCommandPlane_ABRIS_Axis_Decrease = 502 iCommandPlane_ABRIS_Axis_Push = 503 iCommandPlane_ABRIS_Brightness_Increase = 504 iCommandPlane_ABRIS_Brightness_Decrease = 505 iCommandPlane_RouteMode = 506 iCommandPlane_DescentMode = 507 iCommandPlane_DescentModeOff = 508 iCommandPlane_LockOn_start = 509 iCommandPlane_LockOn_finish = 510 iCommandPlane_SpotLight_left = 511 iCommandPlane_SpotLight_right = 512 iCommandPlane_SpotLight_up = 513 iCommandPlane_SpotLight_down = 514 iCommandPlane_SpotLight_vert_stop = 515 iCommandPlaneRotorTipLights = 516 iCommandPlane_SpotSelect_switch = 517 iCommandPlaneAntiCollisionLights = 518 iCommandPlaneNavLights_CodeModeOn = 519 iCommandPlaneNavLights_CodeModeOff = 520 iCommandPlaneFormationLights = 521 iCommandPlane_EngageAirDefenses = 522 iCommandPlane_EngageGroundTargets = 523 iCommandPlane_AutomaticTracking_Gunsight_switch = 524 iCommandPlane_K041_Power = 525 iCommandPlane_AutomaticTurn = 526 iCommandPlane_GroundMovingTarget = 527 iCommandPlane_AirborneTarget = 528 iCommandPlane_HeadOnAspect = 529 iCommandPlane_ChangeDeliveryMode_right = 530 iCommandPlane_ChangeDeliveryMode_left = 531 iCommandPlane_WeaponMode_Manual_Auto = 532 iCommandPlane_WeaponMode_switch = 533 iCommandPlane_AmmoTypeSelect = 534 iCommandPlane_FireRate = 535 iCommandPlaneDropSnarOnceOff = 536 iCommandHelicopterHover = 537 iCommandAutopilotEmergOFF = 538 iCommandPlane_HOTAS_CoolieUp = 539 iCommandPlane_HOTAS_CoolieDown = 540 iCommandPlane_HOTAS_CoolieLeft = 541 iCommandPlane_HOTAS_CoolieRight = 542 iCommandPlane_HOTAS_CoolieOff = 543 iCommandPlane_HOTAS_TargetManagementSwitchUp = 544 iCommandPlane_HOTAS_TargetManagementSwitchDown = 545 iCommandPlane_HOTAS_TargetManagementSwitchLeft = 546 iCommandPlane_HOTAS_TargetManagementSwitchRight = 547 iCommandPlane_HOTAS_TargetManagementSwitchOff = 548 iCommandPlane_HOTAS_DataManagementSwitchUp = 549 iCommandPlane_HOTAS_DataManagementSwitchDown = 550 iCommandPlane_HOTAS_DataManagementSwitchLeft = 551 iCommandPlane_HOTAS_DataManagementSwitchRight = 552 iCommandPlane_HOTAS_DataManagementSwitchOff = 553 iCommandPlane_HOTAS_TriggerSecondStage = 554 iCommandPlane_HOTAS_TriggerFirstStage = 555 iCommandPlane_HOTAS_CMS_Up = 556 iCommandPlane_HOTAS_CMS_Down = 557 iCommandPlane_HOTAS_CMS_Left = 558 iCommandPlane_HOTAS_CMS_Right = 559 iCommandPlane_HOTAS_CMS_Off = 560 iCommandPlane_HOTAS_MasterModeControlButton = 561 iCommandPlane_HOTAS_NoseWheelSteeringButton = 562 iCommandPlane_HOTAS_BoatSwitchForward = 563 iCommandPlane_HOTAS_BoatSwitchAft = 564 iCommandPlane_HOTAS_BoatSwitchCenter = 565 iCommandPlane_HOTAS_ChinaHatForward = 566 iCommandPlane_HOTAS_ChinaHatAft = 567 iCommandPlane_HOTAS_PinkySwitchForward = 568 iCommandPlane_HOTAS_PinkySwitchAft = 569 iCommandPlane_HOTAS_PinkySwitchCenter = 570 iCommandPlane_HOTAS_LeftThrottleButton = 571 iCommandPlane_HOTAS_MIC_SwitchUp = 572 iCommandPlane_HOTAS_MIC_SwitchDown = 573 iCommandPlane_HOTAS_MIC_SwitchLeft = 574 iCommandPlane_HOTAS_MIC_SwitchRight = 575 iCommandPlane_HOTAS_MIC_SwitchOff = 576 iCommandPlane_HOTAS_SpeedBrakeSwitchForward = 577 iCommandPlane_HOTAS_SpeedBrakeSwitchAft = 578 iCommandPlane_HOTAS_SpeedBrakeSwitchCenter = 579 iCommandPlane_ADF_Homer_change = 580 iCommandPlane_ADF_Channel_next = 581 iCommandPlane_ADF_Channel_prevous = 582 iCommandPlane_ADF_Mode_change = 583 iCommandPlane_ADF_Receiver_Mode_change = 585 iCommandPlane_ADF_Volume_up = 586 iCommandPlane_ADF_Volume_down = 587 iCommandPlane_ADF_Test = 588 iCommandPlane_HOTAS_ChinaHatOff = 589 iCommandHelicopter_PPR_button_K = 590 iCommandHelicopter_PPR_button_H = 591 iCommandHelicopter_PPR_button_T = 592 iCommandHelicopter_PPR_button_B = 593 iCommandHelicopter_PPR_button_DIR = 594 iCommandHelicopter_PPR_BAR_RV = 595 iCommandHelicopter_Selected_Engine_start = 596 iCommandHelicopter_Selected_Engine_interrupt_start = 597 iCommandHelicopter_APU_stop = 598 iCommandHelicopter_Engine_Select = 599 iCommandHelicopter_Left_Engine_Lock = 600 iCommandHelicopter_Right_Engine_Lock = 601 iCommandHelicopter_Rotor_Lock = 605 iCommandPlane_HOTAS_NoseWheelSteeringButtonOff = 606 iCommandPlane_R_800_1st_wheel_up = 607 iCommandPlane_R_800_1st_wheel_down = 608 iCommandPlane_R_800_2nd_wheel_up = 609 iCommandPlane_R_800_2nd_wheel_down = 610 iCommandPlane_R_800_3rd_wheel_up = 611 iCommandPlane_R_800_3rd_wheel_down = 612 iCommandPlane_R_800_4th_wheel_up = 613 iCommandPlane_R_800_4th_wheel_down = 614 iCommandPlane_R_800_Noise_Reductor_on_off = 615 iCommandPlane_R_800_Modulation_change = 616 iCommandPlane_R_800_50_100_switch = 617 iCommandPlane_R_800_ADF_Sound_switch = 618 iCommandPlane_R_800_Emergency_Radio = 619 iCommandPlane_R_800_Test = 620 iCommandPlane_R_800_Power_on_off = 621 iCommandPlane_R_828_Channel_next = 622 iCommandPlane_R_828_Channel_prevous = 623 iCommandPlane_R_828_Noise_Reductor_on_off = 624 iCommandPlane_R_828_ASU = 625 iCommandPlane_R_828_volume_up = 626 iCommandPlane_R_828_volume_down = 627 iCommandPlane_R_828_Power_on_off = 628 iCommandPlane_SPU9_SPU_9_on_off = 629 iCommandPlane_SPU9_radio_change = 630 iCommandPlaneCollectiveIncrease = 631 iCommandPlaneCollectiveDecrease = 632 iCommandPlane_HOTAS_MasterModeControlButtonUP = 633 iCommandPlane_HOTAS_TDC_depress_on = 634 iCommandPlane_HOTAS_TDC_depress_off = 635 iCommandPlaneStabHbarHeading = 636 iCommandPlaneStabPathHold = 637 iCommandPlane_HOTAS_TriggerSecondStage_Off = 638 iCommandPlane_HOTAS_TriggerFirstStage_Off = 639 iCommandPlaneDLK_Self_ID_change = 640 iCommandPlaneDLK_mode_change = 641 iCommandPlaneLeftMFD_OSB1 = 642 iCommandPlaneLeftMFD_OSB2 = 643 iCommandPlaneLeftMFD_OSB3 = 644 iCommandPlaneLeftMFD_OSB4 = 645 iCommandPlaneLeftMFD_OSB5 = 646 iCommandPlaneLeftMFD_OSB6 = 647 iCommandPlaneLeftMFD_OSB7 = 648 iCommandPlaneLeftMFD_OSB8 = 649 iCommandPlaneLeftMFD_OSB9 = 650 iCommandPlaneLeftMFD_OSB10 = 651 iCommandPlaneLeftMFD_OSB11 = 652 iCommandPlaneLeftMFD_OSB12 = 653 iCommandPlaneLeftMFD_OSB13 = 654 iCommandPlaneLeftMFD_OSB14 = 655 iCommandPlaneLeftMFD_OSB15 = 656 iCommandPlaneLeftMFD_OSB16 = 657 iCommandPlaneLeftMFD_OSB17 = 658 iCommandPlaneLeftMFD_OSB18 = 659 iCommandPlaneLeftMFD_OSB19 = 660 iCommandPlaneLeftMFD_OSB20 = 661 iCommandPlaneLeftMFD_ADJ_Increase = 662 iCommandPlaneLeftMFD_ADJ_Decrease = 663 iCommandPlaneLeftMFD_DSP_Increase = 664 iCommandPlaneLeftMFD_DSP_Decrease = 665 iCommandPlaneLeftMFD_BRT_Increase = 666 iCommandPlaneLeftMFD_BRT_Decrease = 667 iCommandPlaneLeftMFD_CON_Increase = 668 iCommandPlaneLeftMFD_CON_Decrease = 669 iCommandPlaneLeftMFD_SYM_Up = 670 iCommandPlaneLeftMFD_SYM_Dn = 671 iCommandPlaneRightMFD_OSB1 = 672 iCommandPlaneRightMFD_OSB2 = 673 iCommandPlaneRightMFD_OSB3 = 674 iCommandPlaneRightMFD_OSB4 = 675 iCommandPlaneRightMFD_OSB5 = 676 iCommandPlaneRightMFD_OSB6 = 677 iCommandPlaneRightMFD_OSB7 = 678 iCommandPlaneRightMFD_OSB8 = 679 iCommandPlaneRightMFD_OSB9 = 680 iCommandPlaneRightMFD_OSB10 = 681 iCommandPlaneRightMFD_OSB11 = 682 iCommandPlaneRightMFD_OSB12 = 683 iCommandPlaneRightMFD_OSB13 = 684 iCommandPlaneRightMFD_OSB14 = 685 iCommandPlaneRightMFD_OSB15 = 686 iCommandPlaneRightMFD_OSB16 = 687 iCommandPlaneRightMFD_OSB17 = 688 iCommandPlaneRightMFD_OSB18 = 689 iCommandPlaneRightMFD_OSB19 = 690 iCommandPlaneRightMFD_OSB20 = 691 iCommandPlaneRightMFD_ADJ_Increase = 692 iCommandPlaneRightMFD_ADJ_Decrease = 693 iCommandPlaneRightMFD_DSP_Increase = 694 iCommandPlaneRightMFD_DSP_Decrease = 695 iCommandPlaneRightMFD_BRT_Increase = 696 iCommandPlaneRightMFD_BRT_Decrease = 697 iCommandPlaneRightMFD_CON_Increase = 698 iCommandPlaneRightMFD_CON_Decrease = 699 iCommandPlaneRightMFD_SYM_Up = 700 iCommandPlaneRightMFD_SYM_Dn = 701 iCommandPlaneLeftMFD_OSB_OFF = 702 iCommandPlaneRightMFD_OSB_OFF = 703 iCommandGroundPowerDC = 704 iCommandGroundPowerDC_Cover = 705 iCommandPowerBattery1 = 706 iCommandPowerBattery1_Cover = 707 iCommandPowerBattery2 = 708 iCommandPowerBattery2_Cover = 709 iCommandGroundPowerAC = 710 iCommandPowerGeneratorLeft = 711 iCommandPowerGeneratorRight = 712 iCommandElectricalPowerInverter = 713 iCommandDatalinkTLK = 714 iCommandDatalinkUHF_TLK = 715 iCommandDatalinkUHF_SA = 716 iCommandFuelPumpsTankForward = 717 iCommandFuelPumpsTankRear = 718 iCommandFuelExternalPumpsTanksInner = 719 iCommandFuelExternalPumpsTanksOuter = 720 iCommandFuelmeterPower = 721 iCommandLeftEngineFuelValveShutOff = 722 iCommandLeftEngineFuelValveShutOffCover = 723 iCommandRightEngineFuelValveShutOff = 724 iCommandRightEngineFuelValveShutOffCover = 725 iCommandAPUFuelValveShutOff = 726 iCommandAPUFuelValveShutOffCover = 727 iCommandFuelBypassValve = 728 iCommandFuelBypassValveCover = 729 iCommandEjectingSystemPower1 = 730 iCommandEjectingSystemPower1Cover = 731 iCommandEjectingSystemPower2 = 732 iCommandEjectingSystemPower3 = 733 iCommandWeaponsControlSystem = 734 iCommandWeaponsControlSystemCover = 735 iCommandMainHydraulics = 736 iCommandMainHydraulicsCover = 737 iCommandIFF_Power = 738 iCommandIFF_PowerCover = 739 iCommandTargetingNavigationSystemsPower = 740 iCommandElectronicControlSystemLeftEngine = 741 iCommandElectronicControlSystemLeftEngineCover = 742 iCommandElectronicControlSystemRightEngine = 743 iCommandElectronicControlSystemRightEngineCover = 744 iCommandHeadingMethodSwitch = 745 iCommandHUDBrightnessUp = 746 iCommandHUDBrightnessDown = 747 iCommandHUDTest = 748 iCommandHUDTest_up = 749 iCommandEmergencyGear = 750 iCommandEmergencyGearCover = 751 iCommandMechClock_LeftLever_Down = 752 iCommandMechClock_LeftLever_Down_up = 753 iCommandMechClock_LeftLever_Up = 754 iCommandMechClock_LeftLever_TurnLeft = 755 iCommandMechClock_LeftLever_TurnRight = 756 iCommandMechClock_RightLever_Down = 757 iCommandMechClock_RightLever_Down_up = 758 iCommandMechClock_RightLever_Rotate_left = 759 iCommandMechClock_RightLever_Rotate_right = 760 iCommandBKOMode = 761 iCommandLampsControl = 762 iCommandRotorRPMHigh = 763 iCommandHSI_CourseRotaryLeft = 764 iCommandHSI_CourseRotaryRight = 765 iCommandHSI_HeadingRotaryLeft = 766 iCommandHSI_HeadingRotaryRight = 767 iCommandHSI_Test = 768 iCommandHSI_Test_up = 769 iCommandHSI_SteeringSelection = 770 iCommandADI_ZeroPitchTrimLeft = 771 iCommandADI_ZeroPitchTrimRight = 772 iCommandADI_Test = 773 iCommandADI_Test_up = 774 iCommandADI_TestCover = 775 iCommandRALT_DangerousAltitudeRotaryLeft = 776 iCommandRALT_DangerousAltitudeRotaryRight = 777 iCommandRALT_Test = 778 iCommandRALT_Test_up = 779 iCommandPlaneDLK_Target1_up = 780 iCommandPlaneDLK_Target2_up = 781 iCommandPlaneDLK_Target3_up = 782 iCommandPlaneDLK_RefPoint_up = 783 iCommandPlaneDLK_Wingman1_up = 784 iCommandPlaneDLK_Wingman2_up = 785 iCommandPlaneDLK_Wingman3_up = 786 iCommandPlaneDLK_Wingman4_up = 787 iCommandPlaneDLK_All_up = 788 iCommandPlaneDLK_Erase_up = 789 iCommandPlaneDLK_Ingress_up = 790 iCommandPlaneDLK_SendMemory_up = 791 iCommandPlane_ADF_Test_up = 792 iCommandPlane_R_800_Test_up = 793 iCommandPlane_R_828_ASU_up = 794 iCommandPlane_AutomaticTurn_up = 795 iCommandPlane_GroundMovingTarget_up = 796 iCommandPlane_AirborneTarget_up = 797 iCommandPlane_HeadOnAspect_up = 798 iCommandPlaneCancelWeaponsDelivery_up = 799 iCommandLampsControl_up = 800 iCommandRotorRPMHigh_up = 801 iCommandHelicopter_Selected_Engine_start_up = 802 iCommandHelicopter_Selected_Engine_interrupt_start_up = 803 iCommandHelicopter_APU_stop_up = 804 iCommandPlane_ABRIS_BT_1_up = 805 iCommandPlane_ABRIS_BT_2_up = 806 iCommandPlane_ABRIS_BT_3_up = 807 iCommandPlane_ABRIS_BT_4_up = 808 iCommandPlane_ABRIS_BT_5_up = 809 iCommandPlane_ABRIS_Axis_Increase_up = 810 iCommandPlane_ABRIS_Axis_Decrease_up = 811 iCommandPlane_ABRIS_Axis_Push_up = 812 iCommandPlaneADIAHRIllumination = 813 iCommandControlPanelIllumination = 814 iCommandCockpitIllumination = 815 iCommandActivePauseOnOff = 816 iCommandHelicopter_Engine_Launch_method = 817 iCommandHelicopter_Rotor_Anti_Icing_System = 818 iCommandHelicopter_Engines_Anti_Icing_Dust_Protection_System = 819 iCommandHelicopter_TC_RPM = 820 iCommandHelicopter_TC_RPM_Cover = 821 iCommandHelicopter_Engine_Temperature_Control = 822 iCommandHelicopter_Engine_Temperature_Control_Cover = 823 iCommandHelicopter_SelectWeapon_Internal = 824 iCommandHelicopter_SelectWeapon_External = 825 iCommandHelicopter_SelectWeapon_ALL = 826 iCommandHelicopter_SelectWeapon_AA = 827 iCommandHelicopter_SignalFlares_switch_OnOff = 828 iCommandHelicopter_SignalFlares_GREEN = 829 iCommandHelicopter_SignalFlares_RED = 830 iCommandHelicopter_SignalFlares_WHITE = 831 iCommandHelicopter_SignalFlares_YELLOW = 832 iCommandHelicopter_PanelsIlluminationButtonDown = 833 iCommandHelicopter_PanelsIlluminationButtonUp = 834 iCommandCockpitShowPilotOnOff = 835 iCommandEasyRadarScaleUp = 836 iCommandEasyRadarScaleOut = 837 iCommandEngineLaunchMethod = 838 iCommandPlaneCollectiveStop = 839 iCommandPlane_Helmet_Brightess_Up = 840 iCommandPlane_Helmet_Brightess_Down = 841 iCommandPlane_I251_Brightness_Up = 842 iCommandPlane_I251_Brightness_Down = 843 iCommandPlane_I251_Contrast_Up = 844 iCommandPlane_I251_Contrast_Down = 845 iCommandPlane_I251_Background_WhiteBlack = 846 iCommandPlane_LaserCode_Next = 847 iCommandPlane_LaserCode_Previous = 848 iCommandReloadTables = 849 iCommandPlane_JettisonMode_explosion = 850 iCommandPlane_ShowControls = 851 iCommandPlane_CallHelpWindow = 852 iCommandPlane_ReadjustFreeTurbineRPM_Up = 853 iCommandPlane_ReadjustFreeTurbineRPM_Down = 854 iCommandPlaneWheelParkingBrake = 855 iCommandHelicopter_CollectiveStopper_Up = 856 iCommandHelicopter_CollectiveStopper_Down = 857 iCommandPlaneNav_PB0_off = 858 iCommandPlaneNav_PB1_off = 859 iCommandPlaneNav_PB2_off = 860 iCommandPlaneNav_PB3_off = 861 iCommandPlaneNav_PB4_off = 862 iCommandPlaneNav_PB5_off = 863 iCommandPlaneNav_PB6_off = 864 iCommandPlaneNav_PB7_off = 865 iCommandPlaneNav_PB8_off = 866 iCommandPlaneNav_PB9_off = 867 iCommandPlaneNav_Steerpoints_off = 868 iCommandPlaneNav_INU_realign_off = 869 iCommandPlaneNav_POS_corrMode_off = 870 iCommandPlaneNav_INU_precise_align_off = 871 iCommandPlaneNav_Airfields_off = 872 iCommandPlaneNav_INU_normal_align_off = 873 iCommandPlaneNav_Targets_off = 874 iCommandPlaneNav_Enter_off = 875 iCommandPlaneNav_Cancel_off = 876 iCommandPlaneNav_POS_init_off = 877 iCommandPlaneNav_SelfCoord_off = 878 iCommandPlaneNav_CourseTimeRange_off = 879 iCommandPlaneNav_Wind_off = 880 iCommandPlaneNav_THeadingTimeRangeF_off = 881 iCommandPlaneNav_BearingRangeT_off = 882 iCommand_CPT_MECH_WindscreenWiper_Speed = 883 iCommandAccelReset = 884 iCommand_LWS_Reset = 885 iCommandLaserRangeModeSwitchCover = 886 iCommandLaserRangeModeSwitch = 887 iCommandLaserRangeReset = 888 iCommand_AGR_Power = 889 iCommand_WEAP_INTERF_MasterSimulate = 890 iCommand_CPT_MECH_VMG_HYDRO_EKRAN_Cover = 891 iCommand_CPT_MECH_VMG_HYDRO_EKRAN = 892 iCommand_LWS_BIT_On = 893 iCommand_IlluminationInterf_Control_Panel_Illumination = 894 iCommand_LWS_Power = 895 iCommand_UV26_PowerCover = 896 iCommand_UV26_Power = 897 iCommand_UV26_BITCover = 898 iCommand_UV26_BIT = 899 iCommand_C061K_power = 900 iCommand_C061K_heat = 901 iCommand_VMS_ALMAZ_UP_Check = 902 iCommand_EjectInterface_Circuit_Test = 903 iCommand_ENG_INTERF_Right_Engine_RT_12_6 = 904 iCommand_ENG_INTERF_Left_Engine_RT_12_6 = 905 iCommand_ENG_INTERF_EngVibrDetectorBIT = 906 iCommand_ENG_INTERF_TempIndTestwRunningEng = 907 iCommand_ENG_INTERF_TempIndTestwStoppedEng = 908 iCommand_FuelSysInterf_FuelQuantityIndTestOn = 909 iCommandPitotAoAHeat = 910 iCommandPitotRam = 911 iCommandHelicopter_Rotor_Anti_Icing_Dust_Protection_System = 912 iCommand_VMS_ALMAZ_UP_EmergencyOn = 913 iCommand_VMS_ALMAZ_UP_SpeechInfoOff = 914 iCommand_VMS_ALMAZ_UP_Repeat = 915 iCommand_SHKVAL_scan_vel_up = 916 iCommand_SHKVAL_scan_vel_down = 917 iCommand_SHKVAL_windscreen_wiper = 918 iCommand_PVI_BRIGHTNESS_LEVER_up = 919 iCommand_PVI_BRIGHTNESS_LEVER_down = 920 iCommand_FireExting_LeftEngineExting = 921 iCommand_FireExting_APUExting = 922 iCommand_FireExting_RightEngineExting = 923 iCommand_FireExting_VentilatorExting = 924 iCommand_FireExting_ExtinguishersToDown = 925 iCommand_FireExting_ExtinguishersCover = 926 iCommand_FireExting_Signals = 927 iCommand_FireExting_Reservoirs = 928 iCommand_FireExting_ReservoirsCover = 929 iCommand_IlluminationInterf_Cockpit_Illumination = 930 iCommand_FireExting_TestGroups = 931 iCommand_AGR_Test = 932 iCommand_AGR_Oriet = 933 iCommand_AGR_axis_left = 934 iCommand_AGR_axis_right = 935 iCommand_IlluminationInterf_Cockpit_Night_Illumination_brightness_up = 936 iCommand_IlluminationInterf_Cockpit_Night_Illumination_brightness_down = 937 iCommand_IlluminationInterf_Panels_Illumination_brightness_up = 938 iCommand_IlluminationInterf_Panels_Illumination_brightness_down = 939 iCommand_IlluminationInterf_ADI_AHR_Illumination_brightness_up = 940 iCommand_IlluminationInterf_ADI_AHR_Illumination_brightness_down = 941 iCommand_IlluminationInterf_Control_Panel_Illumination_brightness_up = 942 iCommand_IlluminationInterf_Control_Panel_Illumination_brightness_down = 943 iCommand_NAVINTERF_HeadingCourse = 944 iCommandPlaneDLK_None = 945 iCommandPlaneDLK_None_up = 946 iCommandWeaponsBallisticSelectorRight = 947 iCommandWeaponsBallisticSelectorLeft = 948 iCommand_ZMS_3_MagVarRotaryRight = 949 iCommand_ZMS_3_MagVarRotaryLeft = 950 iCommand_EjectInterface_Circuit_SelectRight = 951 iCommand_EjectInterface_Circuit_SelectLeft = 952 iCommand_CPT_MECH_PitotSystemHeatTest = 953 iCommand_FireDetectorsTest1stGroup = 954 iCommand_FireDetectorsTest2ndGroup = 955 iCommand_FireDetectorsTest3rdGroup = 956 iCommandPlaneTrimOn = 957 iCommandPlaneTrimOff = 958 iCommandPlaneLevitation = 959 iCommandPlaneEmergencyBrake = 960 iCommandPlaneWheelBrakeLeftOn = 961 iCommandPlaneWheelBrakeLeftOff = 962 iCommandPlaneWheelBrakeRightOn = 963 iCommandPlaneWheelBrakeRightOff = 964 iCommandPlaneEmergencyDisconnectLever = 965 ICommandMenuItem1 = 966 ICommandMenuItem2 = 967 ICommandMenuItem3 = 968 ICommandMenuItem4 = 969 ICommandMenuItem5 = 970 ICommandMenuItem6 = 971 ICommandMenuItem7 = 972 ICommandMenuItem8 = 973 ICommandMenuItem9 = 974 ICommandMenuItem10 = 975 ICommandMenuItem11 = 976 ICommandMenuItem12 = 977 ICommandMenuExit = 978 ICommandSwitchDialog = 979 ICommandSwitchToCommonDialog = 980 ICommandToggleConsole = 981 iCommandPlaneLeftMFD_OSB1_Off = 982 iCommandPlaneLeftMFD_OSB2_Off = 983 iCommandPlaneLeftMFD_OSB3_Off = 984 iCommandPlaneLeftMFD_OSB4_Off = 985 iCommandPlaneLeftMFD_OSB5_Off = 986 iCommandPlaneLeftMFD_OSB6_Off = 987 iCommandPlaneLeftMFD_OSB7_Off = 988 iCommandPlaneLeftMFD_OSB8_Off = 989 iCommandPlaneLeftMFD_OSB9_Off = 990 iCommandPlaneLeftMFD_OSB10_Off = 991 iCommandPlaneLeftMFD_OSB11_Off = 992 iCommandPlaneLeftMFD_OSB12_Off = 993 iCommandPlaneLeftMFD_OSB13_Off = 994 iCommandPlaneLeftMFD_OSB14_Off = 995 iCommandPlaneLeftMFD_OSB15_Off = 996 iCommandPlaneLeftMFD_OSB16_Off = 997 iCommandPlaneLeftMFD_OSB17_Off = 998 iCommandPlaneLeftMFD_OSB18_Off = 999 iCommandPlaneLeftMFD_OSB19_Off = 1000 iCommandPlaneLeftMFD_OSB20_Off = 1001 iCommandPlaneLeftMFD_ADJ_Stop = 1002 iCommandPlaneLeftMFD_DSP_Stop = 1003 iCommandPlaneLeftMFD_BRT_Stop = 1004 iCommandPlaneLeftMFD_CON_Stop = 1005 iCommandPlaneLeftMFD_SYM_Stop = 1006 iCommandPlaneRightMFD_OSB1_Off = 1007 iCommandPlaneRightMFD_OSB2_Off = 1008 iCommandPlaneRightMFD_OSB3_Off = 1009 iCommandPlaneRightMFD_OSB4_Off = 1010 iCommandPlaneRightMFD_OSB5_Off = 1011 iCommandPlaneRightMFD_OSB6_Off = 1012 iCommandPlaneRightMFD_OSB7_Off = 1013 iCommandPlaneRightMFD_OSB8_Off = 1014 iCommandPlaneRightMFD_OSB9_Off = 1015 iCommandPlaneRightMFD_OSB10_Off = 1016 iCommandPlaneRightMFD_OSB11_Off = 1017 iCommandPlaneRightMFD_OSB12_Off = 1018 iCommandPlaneRightMFD_OSB13_Off = 1019 iCommandPlaneRightMFD_OSB14_Off = 1020 iCommandPlaneRightMFD_OSB15_Off = 1021 iCommandPlaneRightMFD_OSB16_Off = 1022 iCommandPlaneRightMFD_OSB17_Off = 1023 iCommandPlaneRightMFD_OSB18_Off = 1024 iCommandPlaneRightMFD_OSB19_Off = 1025 iCommandPlaneRightMFD_OSB20_Off = 1026 iCommandPlaneRightMFD_ADJ_Stop = 1027 iCommandPlaneRightMFD_DSP_Stop = 1028 iCommandPlaneRightMFD_BRT_Stop = 1029 iCommandPlaneRightMFD_CON_Stop = 1030 iCommandPlaneRightMFD_SYM_Stop = 1031 iCommandThrottleIncrease = 1032 iCommandThrottleDecrease = 1033 iCommandThrottleStop = 1034 iCommandThrottle1Increase = 1035 iCommandThrottle1Decrease = 1036 iCommandThrottle1Stop = 1037 iCommandThrottle2Increase = 1038 iCommandThrottle2Decrease = 1039 iCommandThrottle2Stop = 1040 iCommandPlane_HOTAS_CMS_Zaxis = 1041 iCommandPlane_HOTAS_CMS_Zaxis_Off = 1042 iCommandViewJFO = 1043 iCommandViewSmoke1 = 1044 iCommandViewSmoke2 = 1045 iCommandViewSmoke3 = 1046 iCommandPlane_FLAPS_UP = 1047 iCommandPlane_FLAPS_MNR = 1048 iCommandPlane_FLAPS_DN = 1049 iCommandPlane_EAC_ARM = 1050 iCommandPlane_EAC_OFF = 1051 iCommandPlane_RDR_ALTM_NRM = 1052 iCommandPlane_RDR_ALTM_DIS = 1053 iCommandPlane_LG_WRN_Silence = 1054 iCommandPlane_APU_Start = 1055 iCommandPlane_APU_Off = 1056 iCommandPlane_L_ENG_OPER_Ign = 1057 iCommandPlane_L_ENG_OPER_Norm = 1058 iCommandPlane_L_ENG_OPER_Motor = 1059 iCommandPlane_R_ENG_OPER_Ign = 1060 iCommandPlane_R_ENG_OPER_Norm = 1061 iCommandPlane_R_ENG_OPER_Motor = 1062 iCommandPlane_L_ENG_FUEL_FLOW_Norm = 1063 iCommandPlane_L_ENG_FUEL_FLOW_Override = 1064 iCommandPlane_R_ENG_FUEL_FLOW_Norm = 1065 iCommandPlane_R_ENG_FUEL_FLOW_Override = 1066 iCommandPlaneQuickPadlockOn = 1067 iCommandPlaneQuickPadlockOff = 1068 iCommandPlaneThrottleFrictionDec = 1069 iCommandPlaneThrottleFrictionInc = 1070 iCommandAPUGeneratorPower = 1071 iCommandEmergencyFlood = 1072 iCommandBatteryPower = 1073 iCommandElectricalPowerInverterSTBY = 1074 iCommandElectricalPowerInverterOFF = 1075 iCommandElectricalPowerInverterTEST = 1076 iCommandPlaneFSExtTanksWingValve = 1077 iCommandPlaneFSExtTanksFuselageValve = 1078 iCommandPlaneFSSigAmplifier = 1079 iCommandPlaneFSLineCheck = 1080 iCommandPlaneFSTankGate = 1081 iCommandPlaneFSTankCrossFeed = 1082 iCommandPlaneFSLeftWingBoostPump = 1083 iCommandPlaneFSRightWingBoostPump = 1084 iCommandPlaneFSLeftWingFillDisable = 1085 iCommandPlaneFSRightWingFillDisable = 1086 iCommandPlaneFSLeftMainBoostPump = 1087 iCommandPlaneFSRightMainBoostPump = 1088 iCommandPlaneFSLeftMainFillDisable = 1089 iCommandPlaneFSRightMainFillDisable = 1090 iCommandPlaneFSReceiverLever = 1091 iCommandPlaneFSQuantityIndicatorSelectorINT = 1092 iCommandPlaneFSQuantityIndicatorSelectorMAIN = 1093 iCommandPlaneFSQuantityIndicatorSelectorWING = 1094 iCommandPlaneFSQuantityIndicatorSelectorEXTWING = 1095 iCommandPlaneFSQuantityIndicatorSelectorEXTCTR = 1096 iCommandPlaneFSQuantityIndicatorTest = 1097 iCommandPlaneFSRefuelLigtingDecrease = 1098 iCommandPlaneFSRefuelLigtingIncrease = 1099 iCommandPlaneEmerSpeedBrakeRetract = 1100 iCommandPlaneEmerPitchRollTrim = 1101 iCommandPlaneEmerTrimNoseDn = 1102 iCommandPlaneEmerTrimLWingDn = 1103 iCommandPlaneEmerTrimRWingDn = 1104 iCommandPlaneEmerTrimNoseUP = 1105 iCommandPlaneEmerTrimNeutral = 1106 iCommandPlaneEmerAileronDisengageL = 1107 iCommandPlaneEmerAileronDisengageOff = 1108 iCommandPlaneEmerAileronDisengageR = 1109 iCommandPlaneEmerElevatorDisengageL = 1110 iCommandPlaneEmerElevatorDisengageOff = 1111 iCommandPlaneEmerElevatorDisengageR = 1112 iCommandPlaneEmerFlapsRetract = 1113 iCommandPlaneEmerFlightControl = 1114 iCommandPlaneCircuitBreaker_1 = 1115 iCommandPlaneCircuitBreaker_2 = 1116 iCommandPlaneCircuitBreaker_3 = 1117 iCommandPlaneCircuitBreaker_4 = 1118 iCommandPlaneCircuitBreaker_5 = 1119 iCommandPlaneCircuitBreaker_6 = 1120 iCommandPlaneCircuitBreaker_7 = 1121 iCommandPlaneCircuitBreaker_8 = 1122 iCommandPlaneCircuitBreaker_9 = 1123 iCommandPlaneCircuitBreaker_10 = 1124 iCommandPlaneCircuitBreaker_11 = 1125 iCommandPlaneCircuitBreaker_12 = 1126 iCommandPlaneCircuitBreaker_13 = 1127 iCommandPlaneCircuitBreaker_14 = 1128 iCommandPlaneCircuitBreaker_15 = 1129 iCommandPlaneCircuitBreaker_16 = 1130 iCommandPlaneCircuitBreaker_17 = 1131 iCommandPlaneCircuitBreaker_18 = 1132 iCommandPlaneCircuitBreaker_19 = 1133 iCommandPlaneCircuitBreaker_20 = 1134 iCommandPlaneCircuitBreaker_21 = 1135 iCommandPlaneCircuitBreaker_22 = 1136 iCommandPlaneCircuitBreaker_23 = 1137 iCommandPlaneCircuitBreaker_24 = 1138 iCommandPlaneCircuitBreaker_25 = 1139 iCommandPlaneCircuitBreaker_26 = 1140 iCommandPlaneCircuitBreaker_27 = 1141 iCommandPlaneCircuitBreaker_28 = 1142 iCommandPlaneCircuitBreaker_29 = 1143 iCommandPlaneCircuitBreaker_30 = 1144 iCommandPlaneCircuitBreaker_31 = 1145 iCommandPlaneCircuitBreaker_32 = 1146 iCommandPlaneCircuitBreaker_33 = 1147 iCommandPlaneCircuitBreaker_34 = 1148 iCommandPlaneCircuitBreaker_35 = 1149 iCommandPlaneCircuitBreaker_36 = 1150 iCommandPlaneCircuitBreaker_37 = 1151 iCommandPlaneCircuitBreaker_38 = 1152 iCommandPlaneYawSASEngageL = 1153 iCommandPlaneYawSASEngageR = 1154 iCommandPlanePitchSASEngageL = 1155 iCommandPlanePitchSASEngageR = 1156 iCommandPlaneSASMonitorTestLeft = 1157 iCommandPlaneSASMonitorTestOff = 1158 iCommandPlaneSASMonitorTestRight = 1159 iCommandPlaneSASTakeOffTrim = 1160 iCommandPlaneIntercomINTDecrease = 1161 iCommandPlaneIntercomINTIncrease = 1162 iCommandPlaneIntercomINTPress = 1163 iCommandPlaneIntercomFMDecrease = 1164 iCommandPlaneIntercomFMIncrease = 1165 iCommandPlaneIntercomFMPress = 1166 iCommandPlaneIntercomVHFDecrease = 1167 iCommandPlaneIntercomVHFIncrease = 1168 iCommandPlaneIntercomVHFPress = 1169 iCommandPlaneIntercomUHFDecrease = 1170 iCommandPlaneIntercomUHFIncrease = 1171 iCommandPlaneIntercomUHFPress = 1172 iCommandPlaneIntercomAIMDecrease = 1173 iCommandPlaneIntercomAIMIncrease = 1174 iCommandPlaneIntercomAIMPress = 1175 iCommandPlaneIntercomIFFDecrease = 1176 iCommandPlaneIntercomIFFIncrease = 1177 iCommandPlaneIntercomIFFPress = 1178 iCommandPlaneIntercomILSDecrease = 1179 iCommandPlaneIntercomILSIncrease = 1180 iCommandPlaneIntercomILSPress = 1181 iCommandPlaneIntercomTCNDecrease = 1182 iCommandPlaneIntercomTCNIncrease = 1183 iCommandPlaneIntercomTCNPress = 1184 iCommandPlaneIntercomVolumeDecrease = 1185 iCommandPlaneIntercomVolumeIncrease = 1186 iCommandPlaneIntercomHM = 1187 iCommandPlaneIntercomINT = 1188 iCommandPlaneIntercomVHF = 1189 iCommandPlaneIntercomFM = 1190 iCommandPlaneIntercomHF = 1191 iCommandPlaneRefuelStatusIndLTSDecrease = 1192 iCommandPlaneRefuelStatusIndLTSIncrease = 1193 iCommandPlaneNightVisionLTSTCP = 1194 iCommandPlaneNightVisionLTSALL = 1195 iCommandPlaneNightVisionLTSOFF = 1196 iCommandPlaneHarsSasNormOverride = 1197 iCommandPlaneFireDetectBleedAirTest = 1198 iCommandPlaneUHFPresetChannelSelectorInc = 1199 iCommandPlaneUHFPresetChannelSelectorDec = 1200 iCommandPlaneUHF100MhzSelector1 = 1201 iCommandPlaneUHF100MhzSelector2 = 1202 iCommandPlaneUHF100MhzSelector3 = 1203 iCommandPlaneUHF100MhzSelectorA = 1204 iCommandPlaneUHF10MhzSelectorInc = 1205 iCommandPlaneUHF10MhzSelectorDec = 1206 iCommandPlaneUHF1MhzSelectorInc = 1207 iCommandPlaneUHF1MhzSelectorDec = 1208 iCommandPlaneUHF01MhzSelectorInc = 1209 iCommandPlaneUHF01MhzSelectorDec = 1210 iCommandPlaneUHF0025MhzSelectorInc = 1211 iCommandPlaneUHF0025MhzSelectorDec = 1212 iCommandPlaneUHFTestDisplay = 1213 iCommandPlaneUHFStatus = 1214 iCommandPlaneUHFLoad = 1215 iCommandPlaneUHFVolumeDec = 1216 iCommandPlaneUHFVolumeInc = 1217 iCommandPlaneUHFFunctionDialOFF = 1218 iCommandPlaneUHFFunctionDialMAIN = 1219 iCommandPlaneUHFFunctionDialBOTH = 1220 iCommandPlaneUHFFunctionDialADF = 1221 iCommandPlaneUHFFreqModeDialMNL = 1222 iCommandPlaneUHFFreqModeDialPRESET = 1223 iCommandPlaneUHFFreqModeDialGRD = 1224 iCommandPlaneUHFTTone = 1225 iCommandPlaneUHFSquelch = 1226 iCommandPlaneUHFPanelCover = 1227 iCommandPlaneCDU_LSK_3L = 1228 iCommandPlaneCDU_LSK_5L = 1229 iCommandPlaneCDU_LSK_7L = 1230 iCommandPlaneCDU_LSK_9L = 1231 iCommandPlaneCDU_LSK_3R = 1232 iCommandPlaneCDU_LSK_5R = 1233 iCommandPlaneCDU_LSK_7R = 1234 iCommandPlaneCDU_LSK_9R = 1235 iCommandPlaneCDU_SYS = 1236 iCommandPlaneCDU_NAV = 1237 iCommandPlaneCDU_WP = 1238 iCommandPlaneCDU_OSET = 1239 iCommandPlaneCDU_FPM = 1240 iCommandPlaneCDU_PREV = 1241 iCommandPlaneCDU_1 = 1242 iCommandPlaneCDU_2 = 1243 iCommandPlaneCDU_3 = 1244 iCommandPlaneCDU_4 = 1245 iCommandPlaneCDU_5 = 1246 iCommandPlaneCDU_6 = 1247 iCommandPlaneCDU_7 = 1248 iCommandPlaneCDU_8 = 1249 iCommandPlaneCDU_9 = 1250 iCommandPlaneCDU_0 = 1251 iCommandPlaneCDU_PNT = 1252 iCommandPlaneCDU_SLASH = 1253 iCommandPlaneCDU_A = 1254 iCommandPlaneCDU_B = 1255 iCommandPlaneCDU_C = 1256 iCommandPlaneCDU_D = 1257 iCommandPlaneCDU_E = 1258 iCommandPlaneCDU_F = 1259 iCommandPlaneCDU_G = 1260 iCommandPlaneCDU_H = 1261 iCommandPlaneCDU_I = 1262 iCommandPlaneCDU_J = 1263 iCommandPlaneCDU_K = 1264 iCommandPlaneCDU_L = 1265 iCommandPlaneCDU_M = 1266 iCommandPlaneCDU_N = 1267 iCommandPlaneCDU_O = 1268 iCommandPlaneCDU_P = 1269 iCommandPlaneCDU_Q = 1270 iCommandPlaneCDU_R = 1271 iCommandPlaneCDU_S = 1272 iCommandPlaneCDU_T = 1273 iCommandPlaneCDU_U = 1274 iCommandPlaneCDU_V = 1275 iCommandPlaneCDU_W = 1276 iCommandPlaneCDU_X = 1277 iCommandPlaneCDU_Y = 1278 iCommandPlaneCDU_Z = 1279 iCommandPlaneVOID_1 = 1280 iCommandPlaneVOID_2 = 1281 iCommandPlaneCDU_MK = 1282 iCommandPlaneCDU_BCK = 1283 iCommandPlaneCDU_SPC = 1284 iCommandPlaneCDU_CLR = 1285 iCommandPlaneCDU_FA = 1286 iCommandPlaneCDU_DIM = 1287 iCommandPlaneCDU_BRT = 1288 iCommandPlaneCDU_PGUP = 1289 iCommandPlaneCDU_PGDN = 1290 iCommandPlaneCDU_BLANC_L = 1291 iCommandPlaneCDU_BLANC_R = 1292 iCommandPlaneCDU_PLUS = 1293 iCommandPlaneCDU_MINUS = 1294 iCommandPlaneUFC_1 = 1295 iCommandPlaneUFC_2 = 1296 iCommandPlaneUFC_3 = 1297 iCommandPlaneUFC_4 = 1298 iCommandPlaneUFC_5 = 1299 iCommandPlaneUFC_6 = 1300 iCommandPlaneUFC_7 = 1301 iCommandPlaneUFC_8 = 1302 iCommandPlaneUFC_9 = 1303 iCommandPlaneUFC_0 = 1304 iCommandPlaneUFC_SPC = 1305 iCommandPlaneUFC_HACK = 1306 iCommandPlaneUFC_FUNC = 1307 iCommandPlaneUFC_LTR = 1308 iCommandPlaneUFC_CLR = 1309 iCommandPlaneUFC_ENT = 1310 iCommandPlaneUFC_MK = 1311 iCommandPlaneUFC_ALT = 1312 iCommandPlaneUFC_MASTER_WARNING = 1313 iCommandPlaneUFC_STEER_UP = 1314 iCommandPlaneUFC_STEER_DOWN = 1315 iCommandPlaneUFC_DATA_UP = 1316 iCommandPlaneUFC_DATA_DOWN = 1317 iCommandPlaneUFC_SEL_UP = 1318 iCommandPlaneUFC_SEL_DOWN = 1319 iCommandPlaneUFC_DEPR_UP = 1320 iCommandPlaneUFC_DEPR_DOWN = 1321 iCommandPlaneUFC_INTEN_INCREASE = 1322 iCommandPlaneUFC_INTEN_DECREASE = 1323 iCommandPlaneCMSP_OSB_1 = 1324 iCommandPlaneCMSP_OSB_2 = 1325 iCommandPlaneCMSP_OSB_3 = 1326 iCommandPlaneCMSP_OSB_4 = 1327 iCommandPlaneCMSP_NEXT_UP = 1328 iCommandPlaneCMSP_NEXT_DOWN = 1329 iCommandPlaneCMSP_RTN = 1330 iCommandPlaneCMSP_JTSN = 1331 iCommandPlaneCMSP_BRT_DEC = 1332 iCommandPlaneCMSP_BRT_INC = 1333 iCommandPlaneCMSP_MWS_MENU = 1334 iCommandPlaneCMSP_MWS_ON = 1335 iCommandPlaneCMSP_JMR_MENU = 1336 iCommandPlaneCMSP_JMR_ON = 1337 iCommandPlaneCMSP_RWR_MENU = 1338 iCommandPlaneCMSP_RWR_ON = 1339 iCommandPlaneCMSP_DISP_MENU = 1340 iCommandPlaneCMSP_DISP_ON = 1341 iCommandPlaneCMSP_MODE_OFF = 1342 iCommandPlaneCMSP_MODE_STBY = 1343 iCommandPlaneCMSP_MODE_MAN = 1344 iCommandPlaneCMSP_MODE_SEMI = 1345 iCommandPlaneCMSP_MODE_AUTO = 1346 iCommandPlaneCMSC_JMR = 1347 iCommandPlaneCMSC_MWS = 1348 iCommandPlaneCMSC_BRT_DEC = 1349 iCommandPlaneCMSC_BRT_INC = 1350 iCommandPlaneCMSC_AUD_DEC = 1351 iCommandPlaneCMSC_AUD_INC = 1352 iCommandPlaneCMSC_PRI = 1353 iCommandPlaneCMSC_SEP = 1354 iCommandPlaneCMSC_UNK = 1355 iCommandPlanePositionLightsFlash = 1356 iCommandPlanePositionLightsOff = 1357 iCommandPlanePositionLightsSteady = 1358 iCommandPlaneFormationLightsDecrease = 1359 iCommandPlaneFormationLightsIncrease = 1360 iCommandPlaneEngInstLightsDecrease = 1361 iCommandPlaneEngInstLightsIncrease = 1362 iCommandPlaneNoseIllum = 1363 iCommandPlaneAuxInstLightsDecrease = 1364 iCommandPlaneAuxInstLightsIncrease = 1365 iCommandPlaneSignalLTS = 1366 iCommandPlaneFltInstLightsDecrease = 1367 iCommandPlaneFltInstLightsIncrease = 1368 iCommandPlaneAccelCompLights = 1369 iCommandPlaneFloodLightsDecrease = 1370 iCommandPlaneFloodLightsIncrease = 1371 iCommandPlaneConsoleLightsDecrease = 1372 iCommandPlaneConsoleLightsIncrease = 1373 iCommandPlaneAHCPMasterArm = 1374 iCommandPlaneAHCPMasterSafe = 1375 iCommandPlaneAHCPMasterTrain = 1376 iCommandPlaneAHCPGUNPACArm = 1377 iCommandPlaneAHCPGUNSafe = 1378 iCommandPlaneAHCPGUNArm = 1379 iCommandPlaneAHCPLaserArm = 1380 iCommandPlaneAHCPLaserSafe = 1381 iCommandPlaneAHCPLaserTrain = 1382 iCommandPlaneAHCPTGPOnOff = 1383 iCommandPlaneAHCPAltSCEBaro = 1384 iCommandPlaneAHCPAltSCEDelta = 1385 iCommandPlaneAHCPAltSCERadar = 1386 iCommandPlaneAHCPHUDModeDayNight = 1387 iCommandPlaneAHCPHUDModeNormSTBY = 1388 iCommandPlaneAHCPCICUOnOff = 1389 iCommandPlaneAHCPJTRSOnOff = 1390 iCommandPlaneAHCPIFFCCOn = 1391 iCommandPlaneAHCPIFFCCTest = 1392 iCommandPlaneAHCPIFFCCOff = 1393 iCommandPlaneLGPAntiSkid = 1394 iCommandPlaneLGPDownlockOverride = 1395 iCommandPlaneLGPLandLight = 1396 iCommandPlaneLGPLightsOff = 1397 iCommandPlaneLGPTaxiLight = 1398 iCommandPlaneNMSP_HARS = 1399 iCommandPlaneNMSP_EGI = 1400 iCommandPlaneNMSP_TISL = 1401 iCommandPlaneNMSP_STRPT = 1402 iCommandPlaneNMSP_ANCHR = 1403 iCommandPlaneNMSP_TCN = 1404 iCommandPlaneNMSP_ILS = 1405 iCommandPlaneNMSP_PTR_ABLE_STOW = 1406 iCommand_FireExting_Discharge_Left = 1407 iCommand_FireExting_Discharge_Center = 1408 iCommand_FireExting_Discharge_Right = 1409 iCommandPlane_HARS_Fast_Erect = 1410 iCommandPlane_Altimeter_PNEU = 1411 iCommandPlane_Altimeter_ELECT = 1412 iCommandPlane_Altimeter_CENTER = 1413 iCommandPlane_AAP_CDU_Power = 1414 iCommandPlane_AAP_EGI_Power = 1415 iCommandPlane_AAP_PageSel_OTHER = 1416 iCommandPlane_AAP_PageSel_POSITION = 1417 iCommandPlane_AAP_PageSel_STEER = 1418 iCommandPlane_AAP_PageSel_WAYPT = 1419 iCommandPlane_AAP_SteerPt_FLTPLAN = 1420 iCommandPlane_AAP_SteerPt_MARK = 1421 iCommandPlane_AAP_SteerPt_MISSION = 1422 iCommandPlane_AAP_SteerSw_Up = 1423 iCommandPlane_AAP_SteerSw_Down = 1424 iCommandPlane_TACAN_Mode_Off = 1425 iCommandPlane_TACAN_Mode_Rec = 1426 iCommandPlane_TACAN_Mode_TR = 1427 iCommandPlane_TACAN_Mode_AAREC = 1428 iCommandPlane_TACAN_Mode_AATR = 1429 iCommandPlane_TACAN_Volume_Decrease = 1430 iCommandPlane_TACAN_Volume_Increase = 1431 iCommandPlane_TACAN_Chanel_Ones_Decrease = 1432 iCommandPlane_TACAN_Chanel_Ones_Increase = 1433 iCommandPlane_TACAN_Chanel_Tens_Decrease = 1434 iCommandPlane_TACAN_Chanel_Tens_Increase = 1435 iCommandPlane_TACAN_Chanel_XY_Mode = 1436 iCommandPlane_TACAN_Test = 1437 iCommandPlane_ILS_Power = 1438 iCommandPlane_ILS_MHz_Decrease = 1439 iCommandPlane_ILS_MHz_Increase = 1440 iCommandPlane_ILS_KHz_Decrease = 1441 iCommandPlane_ILS_KHz_Increase = 1442 iCommandPlane_ILS_Volume_Decrease = 1443 iCommandPlane_ILS_Volume_Increase = 1444 iCommandPlane_HARS_Mode = 1445 iCommandPlane_HARS_LAT_Correction_Decrease = 1446 iCommandPlane_HARS_LAT_Correction_Increase = 1447 iCommandPlane_HARS_HemisphereSel = 1448 iCommandPlane_HARS_MagneticVar_Min15 = 1449 iCommandPlane_HARS_MagneticVar_Null = 1450 iCommandPlane_HARS_MagneticVar_Plus15 = 1451 iCommandPlane_HARS_SyncButton = 1452 iCommandPlane_HARS_HDG_Decrease = 1453 iCommandPlane_HARS_HDG_Increase = 1454 iCommandPlane_STALL_Vol_Decrease = 1455 iCommandPlane_STALL_Vol_Increase = 1456 iCommandPlane_Peak_Vol_Decrease = 1457 iCommandPlane_Peak_Vol_Increase = 1458 iCommandPlane_VHF_FM_Volume_Dec = 1459 iCommandPlane_VHF_FM_Volume_Inc = 1460 iCommandPlane_VHF_FM_Mode_EMERFM = 1461 iCommandPlane_VHF_FM_Mode_EMERAM = 1462 iCommandPlane_VHF_FM_Mode_MAN = 1463 iCommandPlane_VHF_FM_Mode_PRE = 1464 iCommandPlane_VHF_FM_FreqMode_OFF = 1465 iCommandPlane_VHF_FM_FreqMode_TK = 1466 iCommandPlane_VHF_FM_FreqMode_DN = 1467 iCommandPlane_VHF_FM_Squelch = 1468 iCommandPlane_VHF_FM_Tone = 1469 iCommandPlane_VHF_FM_Load = 1470 iCommandPlane_VHF_FM_Preset_Dec = 1471 iCommandPlane_VHF_FM_Preset_Inc = 1472 iCommandPlane_VHF_FM_10MHz_Dec = 1473 iCommandPlane_VHF_FM_10MHz_Inc = 1474 iCommandPlane_VHF_FM_1MHz_Dec = 1475 iCommandPlane_VHF_FM_1MHz_Inc = 1476 iCommandPlane_VHF_FM_01MHz_Dec = 1477 iCommandPlane_VHF_FM_01MHz_Inc = 1478 iCommandPlane_VHF_FM_025MHz_Dec = 1479 iCommandPlane_VHF_FM_025MHz_Inc = 1480 iCommandPlane_VHF_AM_Volume_Dec = 1481 iCommandPlane_VHF_AM_Volume_Inc = 1482 iCommandPlane_VHF_AM_Mode_EMERFM = 1483 iCommandPlane_VHF_AM_Mode_EMERAM = 1484 iCommandPlane_VHF_AM_Mode_MAN = 1485 iCommandPlane_VHF_AM_Mode_PRE = 1486 iCommandPlane_VHF_AM_FreqMode_OFF = 1487 iCommandPlane_VHF_AM_FreqMode_TK = 1488 iCommandPlane_VHF_AM_FreqMode_DN = 1489 iCommandPlane_VHF_AM_Squelch = 1490 iCommandPlane_VHF_AM_Tone = 1491 iCommandPlane_VHF_AM_Load = 1492 iCommandPlane_VHF_AM_Preset_Dec = 1493 iCommandPlane_VHF_AM_Preset_Inc = 1494 iCommandPlane_VHF_AM_10MHz_Dec = 1495 iCommandPlane_VHF_AM_10MHz_Inc = 1496 iCommandPlane_VHF_AM_1MHz_Dec = 1497 iCommandPlane_VHF_AM_1MHz_Inc = 1498 iCommandPlane_VHF_AM_01MHz_Dec = 1499 iCommandPlane_VHF_AM_01MHz_Inc = 1500 iCommandPlane_VHF_AM_025MHz_Dec = 1501 iCommandPlane_VHF_AM_025MHz_Inc = 1502 iCommandPlane_Oxygen_Emergency = 1503 iCommandPlane_Oxygen_Normal = 1504 iCommandPlane_Oxygen_TestMark = 1505 iCommandPlane_Oxygen_Supply = 1506 iCommandPlane_Oxygen_100Oxygen = 1507 iCommandPlane_Oxygen_Ind_Test = 1508 iCommandPlane_Env_WindshieldDefogDeice = 1509 iCommandPlane_Env_CanopyDefog_Dec = 1510 iCommandPlane_Env_CanopyDefog_Inc = 1511 iCommandPlane_Env_WindshieldRainRemove = 1512 iCommandPlane_Env_WindshieldCenter = 1513 iCommandPlane_Env_WindshieldWash = 1514 iCommandPlane_Env_BleddAir = 1515 iCommandPlane_Env_TempPress_NORM = 1516 iCommandPlane_Env_TempPress_DUMP = 1517 iCommandPlane_Env_TempPress_RAM = 1518 iCommandPlane_Env_MainAirSupply = 1519 iCommandPlane_Env_FlowLevel_Decrease = 1520 iCommandPlane_Env_FlowLevel_Increase = 1521 iCommandPlane_Env_AirConditioner_AUTO = 1522 iCommandPlane_Env_AirConditioner_HOT = 1523 iCommandPlane_Env_AirConditioner_COLD = 1524 iCommandPlane_Env_TempLevel_Decrease = 1525 iCommandPlane_Env_TempLevel_Increase = 1526 iCommandPlaneLeftMFD_BRTMODE_OFF = 1527 iCommandPlaneLeftMFD_BRTMODE_NIGHT = 1528 iCommandPlaneLeftMFD_BRTMODE_DAY = 1529 iCommandPlaneRightMFD_BRTMODE_OFF = 1530 iCommandPlaneRightMFD_BRTMODE_NIGHT = 1531 iCommandPlaneRightMFD_BRTMODE_DAY = 1532 iCommandSeatArmHandle = 1533 iCommandPlaneLockPadlockTerrain = 1534 iCommandTrainingUserResponded = 1535 iCommandViewBriefing = 1536 iCommandDebriefing = 1537 iCommandExtLadderButtonCover = 1538 iCommandExtLadderButton = 1539 iCommandExtLadderRelease = 1540 iCommandArmGroundSafetyCover = 1541 iCommandArmGroundSafetySwitch = 1542 iCommandDVADRFunctionOff = 1543 iCommandDVADRFunctionSTDBY = 1544 iCommandDVADRFunctionREC = 1545 iCommandAntiGSuitTest = 1546 iCommandCanopyActuatorDisengage = 1547 iCommandCanopyJettison = 1548 iCommandCanopyJettisonUnlockButton = 1549 iCommandIFFAntennaUpper = 1550 iCommandIFFAntennaBoth = 1551 iCommandIFFAntennaLower = 1552 iCommandUHFAntennaUpper = 1553 iCommandUHFAntennaAuto = 1554 iCommandUHFAntennaLower = 1555 iCommandEGI_HQ_TOD = 1556 iCommandPlane_HOTAS_LeftThrottleButton_Off = 1557 iCommandRWRIntensityDecrease = 1558 iCommandRWRIntensityIncrease = 1559 iCommandMissionResourcesManagement = 1560 iCommandViewLaserChangeCode = 1561 iCommand_LASTE_from_PATH_to_ALTHDG = 1562 iCommand_LASTE_from_ALT_to_ALTHDG = 1563 iCommandPlane_L_ENG_OPER_Norm_from_Motor = 1564 iCommandPlane_R_ENG_OPER_Norm_from_Motor = 1565 iCommandPlane_L_ENG_OPER_Norm_from_Ign = 1566 iCommandPlane_R_ENG_OPER_Norm_from_Ign = 1567 iCommandPlane_FLAPS_MNR_from_UP = 1568 iCommandPlane_FLAPS_MNR_from_DN = 1569 iCommandGViewAction = 1570 iCommandGChangeWS = 1571 iCommandGChangeLN = 1572 iCommandGReloadWeapon = 1573 iCommandGFire = 1574 iCommandGFireStop = 1575 iCommandGZoomIn = 1576 iCommandGZoomNormal = 1577 iCommandGChangeSpeedH = 1578 iCommandGChangeSpeedV = 1579 iCommandGLockon = 1580 iCommandGLockoff = 1581 iCommandGGroupModeOn = 1582 iCommandGGroupModeOff = 1583 iCommandGHoldCursorModeOn = 1584 iCommandGHoldCursorModeOff = 1585 iCommandViewParticleEffect = 1586 iCommandPlaneShowKneeboard = 1587 iCommandGIsometricView = 1588 iCommandPlane_SPU9_PTT_on = 1589 iCommandPlane_SPU9_PTT_off = 1590 iCommandPlane_P_51_PTT_on = 1591 iCommandPlane_P_51_PTT_off = 1592 iCommandViewTransposeModeOn = 1593 iCommandViewTransposeModeOff = 1594 iCommandViewBtn1Down = 1595 iCommandViewBtn1Up = 1596 iCommandViewBtn2Down = 1597 iCommandViewBtn2Up = 1598 iCommandViewBtn3Down = 1599 iCommandViewBtn3Up = 1600 iCommandPlane_P_51_WarEmergencyPower = 1601 iCommandViewCockpitChangeSeat = 1602 iCommandViewCockpitSetPilotSeat = 1603 iCommandViewCockpitSetOperatorSeat = 1604 iCommandViewCockpitSetGunnerSeat1 = 1605 iCommandViewCockpitSetGunnerSeat2 = 1606 iCommandGViewWSCenter = 1607 iCommandGStabilize = 1608 iCommandViewPauseOnOff = 1609 iCommandSlaveToTanker = 1610 iCommandViewNVG_GainUp = 1611 iCommandViewNVG_GainDown = 1612 iCommandVehicle_LaunchRedFlare = 1613 iCommandVehicle_LaunchGreenFlare = 1614 iCommandVehicle_LaunchWhiteFlare = 1615 iCommand_ExplorationStart = 1616 iCommand_ExplorationTargetSelection = 1617 iCommand_ExplorationCansel = 1618 iCommandViewNVGOff = 1619 iCommandGZoomUpdate = 1620 iCommandTakeControlTrack = 1621 iCommandGSelectFeedSlot1 = 1622 iCommandGSelectFeedSlot2 = 1623 iCommandGEmissionToggle = 1624 iCommandToggleMirrors = 1625 iCommandToggleReceiveMode = 1626 iCommandPlaneChangeLockUp = 1627 iCommandTrainingUserRespondedBack = 1628 iCommandClockElapsedTimeReset = 1629 iCommandGLaserRangerOn = 1630 iCommandGLaserRangerOff = 1631 iCommandGLaserRangerReset = 1632 iCommandExtCargoHook = 1633 iCommandExternalCargoAutounhook = 1634 iCommandSensorReset = 1635 iCommandMissionRestart = 1636 iCommandViewInfoControlPanelOnOff = 1637 iCommandMaximum = 1638 iCommandKeyNull = 2000 iCommandPlanePitch = 2001 iCommandPlaneRoll = 2002 iCommandPlaneRudder = 2003 iCommandPlaneThrustCommon = 2004 iCommandPlaneThrustLeft = 2005 iCommandPlaneThrustRight = 2006 iCommandPlaneViewHorizontal = 2007 iCommandPlaneViewVertical = 2008 iCommandPlaneZoomView = 2009 iCommandViewHorizontalAbs = 2010 iCommandViewVerticalAbs = 2011 iCommandViewZoomAbs = 2012 iCommandPlanePitchDelta = 2013 iCommandPlaneRollDelta = 2014 iCommandPlaneRudderDelta = 2015 iCommandPlaneThrustCommonDelta = 2016 iCommandPlaneThrustLeftDelta = 2017 iCommandPlaneThrustRightDelta = 2018 iCommandPlaneTrimPitch = 2019 iCommandPlaneTrimRoll = 2020 iCommandPlaneTrimRudder = 2021 iCommandPlaneTrimPitchAbs = 2022 iCommandPlaneTrimRollAbs = 2023 iCommandPlaneTrimRudderAbs = 2024 iCommandPlaneRadarHorizontal = 2025 iCommandPlaneRadarVertical = 2026 iCommandPlaneRadarHorizontalAbs = 2027 iCommandPlaneRadarVerticalAbs = 2028 iCommandPlaneMFDZoom = 2029 iCommandPlaneMFDZoomAbs = 2030 iCommandPlaneSelecterHorizontal = 2031 iCommandPlaneSelecterVertical = 2032 iCommandPlaneSelecterHorizontalAbs = 2033 iCommandPlaneSelecterVerticalAbs = 2034 iCommandPlaneFeedbackTrimmer = 2035 iCommandCockpitCursorHorizontal = 2036 iCommandCockpitCursorVertical = 2037 iCommandCockpitCursorHorizontalAbs = 2038 iCommandCockpitCursorVerticalAbs = 2039 iCommandPlaneBase_Distance = 2040 iCommandPlaneBase_DistanceAbs = 2041 iCommandViewAWACSMapMouseMove = 2042 iCommandViewCameraAltitude = 2043 iCommandViewAWACSObjectIdLow = 2044 iCommandViewAWACSObjectIdHigh = 2045 iCommandViewRoll = 2046 iCommandViewRollAbs = 2047 iCommandViewHorTrans = 2048 iCommandViewHorTransAbs = 2049 iCommandViewVertTrans = 2050 iCommandViewVertTransAbs = 2051 iCommandViewLongitudeTrans = 2052 iCommandViewLongitudeTransAbs = 2053 iCommandViewAWACSDistanceToolDistance = 2054 iCommandViewAWACSDistanceToolAngle = 2055 iCommandViewAWACSMouseMoveX = 2056 iCommandViewAWACSMouseMoveY = 2057 iCommandViewAWACSLastZoomX1 = 2058 iCommandViewAWACSLastZoomX2 = 2059 iCommandViewAWACSLastZoomY1 = 2060 iCommandViewAWACSLastZoomY2 = 2061 iCommandViewAWACSZoom100 = 2062 iCommandViewAWACSZoomIn = 2063 iCommandViewAWACSZoomOut = 2064 iCommandViewAWACSDistance = 2065 iCommandViewAWACSLabels = 2066 iCommandViewAWACSDetectionAreas = 2067 iCommandViewAWACSDangerousAreas = 2068 iCommandViewAWACSCenterOnPlane = 2069 iCommandViewAWACSDistanceX1 = 2070 iCommandViewAWACSDistanceY1 = 2071 iCommandViewAWACSDistanceX2 = 2072 iCommandViewAWACSDistanceY2 = 2073 iCommandCockpitVirtualAxis = 2074 iCommandCockpitVirtualAxisAbs = 2075 iCommandViewAWACSTargetPointerX = 2076 iCommandViewAWACSTargetPointerY = 2077 iCommandViewAWACSApplyTargetPointer = 2078 iCommandViewAWACSInfoTargetButton = 2079 iCommandViewAWACSInfoCloseButton = 2080 iCommandViewAWACSTargetFireButton = 2081 iCommandViewAWACSTargetRemoveButton = 2082 iCommandViewAWACSTargetCloseButton = 2083 iCommandViewAWACSTargetStartTime = 2084 iCommandViewAWACSTargetUnits = 2085 iCommandViewAWACSTargetRounds = 2086 iCommandPlaneCollective = 2087 iCommandDebugAxis1 = 2088 iCommandDebugAxis2 = 2089 iCommandDebugAxis3 = 2090 iCommandDebugAxis4 = 2091 iCommandDebugAxis5 = 2092 iCommandDebugAxis6 = 2093 iCommandDebugAxis7 = 2094 iCommandDebugAxis8 = 2095 iCommandDebugAxis9 = 2096 iCommandDebugAxis10 = 2097 iCommandHelicopterLeftEngineBrake_ByAxis = 2098 iCommandHelicopterRightEngineBrake_ByAxis = 2099 iCommandHelicopterRotorEngineBrake_ByAxis = 2100 iCommandWheelBrake = 2101 iCommandViewAWACSSetColumnPath = 2102 iCommandViewAWACSCancelColumnPath = 2103 iCommandViewAWACSInfoPathButton = 2104 iCommandViewAWACSSetPathCloseButton = 2105 iCommandViewAWACSUpdateWOInfoLow = 2106 iCommandViewAWACSUpdateWOInfoHigh = 2107 iCommandViewAWACSVehControlCloseButton = 2108 iCommandViewAWACSSetColumnSpeed = 2109 iCommandViewAWACSChangeColumnState = 2110 iCommandViewAWACSChangeColumnForm = 2111 iCommandLeftWheelBrake = 2112 iCommandRightWheelBrake = 2113 iCommandViewAWACSTargetSetButton = 2114 iCommandRoleCoalitionUpdated = 2115 iCommandViewAWACSMapEventType = 2116 iCommandViewAWACSMapEventX = 2117 iCommandViewAWACSMapEventY = 2118 iCommandViewAWACSMapEventFlags = 2119 iCommandViewAWACSKeyState = 2120 iCommandViewAWACSKeyKey = 2121 iCommandViewAWACSKeyData = 2122 iCommandViewAWACSShowPathes = 2123 iCommandViewAWACSShowTargets = 2124 iCommandViewAWACSRoadPriorChanged = 2125 iCommandViewAWACSBridgesPriorChanged = 2126 iCommandViewAWACSFireEnabledChanged = 2127 iCommandViewAWACSTargetXChanged = 2128 iCommandViewAWACSTargetZChanged = 2129 iCommand_TDC_AbsolutePositionHorizontal = 2130 iCommand_TDC_AbsolutePositionVertical = 2131 iCommandAdjustViewAngleToComfortValue = 2132 iCommandViewAWACSChangeROE = 2133 iCommandViewAWACSChangeAlarmState = 2134 iCommandViewAWACSTargetChangeRadius = 2135 iCommandViewAWACSTargetRadiusSet = 2136 iCommandViewLaserCodeChanged = 2137 iCommandViewAWACSSetColumnAltitude = 2138 iCommandViewAWACSShowHealths = 2139 iCommandViewAWACSInfoAddTargetButton = 2140 iCommandViewAWACSInfoDelTargetButton = 2141 iServiceInformAboutUserHAngle = 2142 iServiceInformAboutUserVAngle = 2143 iOculusRiftYaw = 2144 iOculusRiftPitch = 2145 iOculusRiftRoll = 2146 iOculusRiftHeadPosX = 2147 iOculusRiftHeadPosY = 2148 iOculusRiftHeadPosZ = 2149 iCommandKeyMaximum = 2150 iCommandCockpitDeviceCommandsStart = 3000 iCommandCockpitDeviceCommandsEnd = 3999 iCommandRepKeyBegin = 4000","title":"iCommands"},{"location":"Database/iCommands/#icommands","text":"Heres a list of iCommands for DCS A downloadable lua file to include into your mod can be found here Or use CTRL + F and search this page in the list below to find what you're looking for. ---@diagnostic disable: lowercase-global iCommandNull = 0 iCommandRotatePlus = 1 iCommandRotateMinus = 2 iCommandUpPilon = 3 iCommandDownPilon = 4 iCommandMissileFire = 5 iCommandGunFire = 6 iCommandViewCockpit = 7 iCommandViewAir = 8 iCommandViewTower = 9 iCommandViewGround = 10 iCommandViewMirage = 11 iCommandViewChase = 12 iCommandViewNavy = 13 iCommandViewFight = 14 iCommandViewAWACS = 15 iCommandViewFree = 16 iCommandViewTempCockpitOn = 17 iCommandViewTempCockpitOff = 18 iCommandViewLock = 19 iCommandViewUnlock = 20 iCommandViewMe = 21 iCommandViewPlus = 22 iCommandViewFriends = 23 iCommandViewEnemies = 24 iCommandViewNeutrals = 25 iCommandViewAll = 26 iCommandViewExplosion = 27 iCommandViewLeft = 28 iCommandViewRight = 29 iCommandViewUp = 30 iCommandViewDown = 31 iCommandViewLeftSlow = 32 iCommandViewRightSlow = 33 iCommandViewUpSlow = 34 iCommandViewDownSlow = 35 iCommandViewCenter = 36 iCommandViewForward = 37 iCommandViewBack = 38 iCommandViewForwardSlow = 39 iCommandViewBackSlow = 40 iCommandViewCameraLeft = 41 iCommandViewCameraRight = 42 iCommandViewCameraUp = 43 iCommandViewCameraDown = 44 iCommandViewCameraLeftSlow = 45 iCommandViewCameraRightSlow = 46 iCommandViewCameraUpSlow = 47 iCommandViewCameraDownSlow = 48 iCommandViewCameraCenter = 49 iCommandFriendlyChat = 50 iCommandQuit = 51 iCommandBrakeGo = 52 iCommandAccelerate = 53 iCommandOneFrame = 54 iCommandTrkEsc = 55 iCommandPlayerCntrl = 56 iCommandChat = 57 iCommandPlaneSAUAutomatic = 58 iCommandPlaneSAUHBarometric = 59 iCommandPlaneSAUHRadio = 60 iCommandPlaneSAUHorizon = 61 iCommandPlaneAutopilot = 62 iCommandPlaneAUTOnOff = 63 iCommandPlaneAUTIncrease = 64 iCommandPlaneAUTDecrease = 65 iCommandPlaneAUTIncreaseRegime = 66 iCommandPlaneAUTDecreaseRegime = 67 iCommandPlaneGear = 68 iCommandPlaneHook = 69 iCommandPlanePackWing = 70 iCommandPlaneFonar = 71 iCommandPlaneFlaps = 72 iCommandPlaneAirBrake = 73 iCommandPlaneWheelBrakeOn = 74 iCommandPlaneWheelBrakeOff = 75 iCommandPlaneParachute = 76 iCommandPlaneDropSnar = 77 iCommandPlaneWingtipSmokeOnOff = 78 iCommandPlaneFuelOn = 79 iCommandPlaneFuelOff = 80 iCommandPlaneSalvoOnOff = 81 iCommandPlaneJettisonWeapons = 82 iCommandPlaneEject = 83 iCommandPlaneFire = 84 iCommandPlaneFireOff = 85 iCommandPlaneRadarOnOff = 86 iCommandPlaneEOSOnOff = 87 iCommandPlaneRadarLeft = 88 iCommandPlaneRadarRight = 89 iCommandPlaneRadarUp = 90 iCommandPlaneRadarDown = 91 iCommandPlaneRadarCenter = 92 iCommandPlaneTrimLeft = 93 iCommandPlaneTrimRight = 94 iCommandPlaneTrimUp = 95 iCommandPlaneTrimDown = 96 iCommandPlaneTrimCancel = 97 iCommandPlaneTrimLeftRudder = 98 iCommandPlaneTrimRightRudder = 99 iCommandPlaneChangeLock = 100 iCommandPlaneChangeWeapon = 101 iCommandPlaneChangeTarget = 102 iCommandPlaneZoomIn = 103 iCommandPlaneZoomOut = 104 iCommandPlaneModeNAV = 105 iCommandPlaneModeBVR = 106 iCommandPlaneModeVS = 107 iCommandPlaneModeBore = 108 iCommandPlaneModeHelmet = 109 iCommandPlaneModeFI0 = 110 iCommandPlaneModeGround = 111 iCommandPlaneModeGrid = 112 iCommandPlaneModeCannon = 113 iCommandPlaneDoAndHome = 114 iCommandPlaneDoAndBack = 115 iCommandPlaneFormation = 116 iCommandPlaneJoinUp = 117 iCommandPlaneAttackMyTarget = 118 iCommandPlaneCoverMySix = 119 iCommandPlaneShipTakeOff = 120 iCommandPlaneCobra = 121 iCommandSoundOnOff = 122 iCommandSoundMicOn = 123 iCommandSoundMicOff = 124 iCommandViewRightMirrorOn = 125 iCommandViewRightMirrorOff = 126 iCommandViewLeftMirrorOn = 127 iCommandViewLeftMirrorOff = 128 iCommandNaturalViewCockpitIn = 129 iCommandNaturalViewCockpitOut = 130 iCommandViewLndgOfficer = 131 iCommandViewCaptainBridge = 132 iCommandViewGroundAndPlane = 133 iCommandViewPlaneAndGround = 134 iCommandViewWeaponAndTarget = 135 iCommandActiveJamming = 136 iCommandLandDetailsIncrease = 137 iCommandLandDetailsDecrease = 138 iCommandSelecterLeft = 139 iCommandSelecterRight = 140 iCommandSelecterUp = 141 iCommandSelecterDown = 142 iCommandRefusalTWS = 143 iCommandPlaneResetMasterWarning = 144 iCommandPlaneFlapsOn = 145 iCommandPlaneFlapsOff = 146 iCommandPlaneAirBrakeOn = 147 iCommandPlaneAirBrakeOff = 148 iCommandViewWeapons = 149 iCommandViewStatic = 150 iCommandViewTargets = 151 iCommandInfoOnOff = 152 iCommandInfoTextOnOff = 153 iCommandInfoDataOnOff = 154 iCommandPlaneAirRefuel = 155 iCommandBrightnessILS = 156 iCommandGraphicsFrameRate = 157 iCommandViewFreeJump = 158 iCommandViewSpeedUp = 159 iCommandViewSlowDown = 160 iCommandPlaneAUTIncreaseLeft = 161 iCommandPlaneAUTDecreaseLeft = 162 iCommandPlaneAUTIncreaseRight = 163 iCommandPlaneAUTDecreaseRight = 164 iCommandPlaneAUTIncreaseRegimeLeft = 165 iCommandPlaneAUTDecreaseRegimeLeft = 166 iCommandPlaneAUTIncreaseRegimeRight = 167 iCommandPlaneAUTDecreaseRegimeRight = 168 iCommandPlaneImmortal = 169 iCommandPlaneJettisonFuelTanksUp = 170 iCommandPlaneJettisonWeaponsUp = 171 iCommandPlaneAUTUnlockLeft = 172 iCommandPlaneAUTUnlockRight = 173 iCommandPlaneTrimViewOnOff = 174 iCommandPlaneLightsOnOff = 175 iCommandPlaneDropSnarOnce = 176 iCommandViewAngleDefault = 177 iCommandPlaneJettisonFuelTanks = 178 iCommandToggleCommandMenu = 179 iCommandViewSwitchReverse = 180 iCommandViewSwitchForward = 181 iCommandViewObjectIgnore = 182 iCommandViewObjectsAll = 183 iCommandViewTerrainLock = 184 iCommandViewFromTo = 185 iCommandPlaneDown = 186 iCommandPlaneUp = 187 iCommandPlaneLeft = 188 iCommandPlaneRight = 189 iCommandViewLocal = 190 iCommandDecelerate = 191 iCommandPlaneJump = 192 iCommandPlaneUpStart = 193 iCommandPlaneUpStop = 194 iCommandPlaneDownStart = 195 iCommandPlaneDownStop = 196 iCommandPlaneLeftStart = 197 iCommandPlaneLeftStop = 198 iCommandPlaneRightStart = 199 iCommandPlaneRightStop = 200 iCommandPlaneLeftRudderStart = 201 iCommandPlaneLeftRudderStop = 202 iCommandPlaneRightRudderStart = 203 iCommandPlaneRightRudderStop = 204 iCommandViewUpRight = 205 iCommandViewDownRight = 206 iCommandViewDownLeft = 207 iCommandViewUpLeft = 208 iCommandViewStop = 209 iCommandViewUpRightSlow = 210 iCommandViewDownRightSlow = 211 iCommandViewDownLeftSlow = 212 iCommandViewUpLeftSlow = 213 iCommandViewStopSlow = 214 iCommandPlaneTrimStop = 215 iCommandPointOfViewUp = 216 iCommandPointOfViewUpRight = 217 iCommandPointOfViewRight = 218 iCommandPointOfViewDownRight = 219 iCommandPointOfViewDown = 220 iCommandPointOfViewDownLeft = 221 iCommandPointOfViewLeft = 222 iCommandPointOfViewUpLeft = 223 iCommandPointOfViewCenter = 224 iCommandPointOfViewStop = 225 iCommandSelecterUpRight = 226 iCommandSelecterDownRight = 227 iCommandSelecterDownLeft = 228 iCommandSelecterUpLeft = 229 iCommandSelecterStop = 230 iCommandPlaneRadarUpRight = 231 iCommandPlaneRadarDownRight = 232 iCommandPlaneRadarDownLeft = 233 iCommandPlaneRadarUpLeft = 234 iCommandPlaneRadarStop = 235 iCommandViewSaveAngles = 236 iCommandViewTempCockpitToggle = 237 iCommandViewSaveAngles3 = 238 iCommandViewSaveAngles4 = 239 iCommandViewSaveAngles5 = 240 iCommandViewSaveAngles6 = 241 iCommandViewSaveAngles7 = 242 iCommandViewSaveAngles8 = 243 iCommandViewSaveAngles9 = 244 iCommandViewCoordinatesInLinearUnits = 245 iCommandNoAcceleration = 246 iCommandPlaneHUDFilterOnOff = 247 iCommandCockpitTakeControl = 248 iCommandRollbackSave = 249 iCommandRollBack = 250 iCommandRollForward = 251 iCommandPlaneMasterCaution = 252 iCommandPlaneScalesReject = 253 iCommandPlaneBettyRepeat = 254 iCommandSaveGame = 255 iCommandLoadGame = 256 iCommandScreenShot = 257 iCommandThreatMissilePadlock = 258 iCommandAllMissilePadlock = 259 iCommandFinishTrack = 260 iCommandMarkerState = 261 iCommandDecreaseRadarScanArea = 262 iCommandIncreaseRadarScanArea = 263 iCommandMarkerStatePlane = 264 iCommandMarkerStateRocket = 265 iCommandMarkerStateShip = 266 iCommandAWACSHomeBearing = 267 iCommandAWACSTankerBearing = 268 iCommandAWACSBanditBearing = 269 iCommandAWACSDeclare = 270 iCommandEasyRadarOnOff = 271 iCommandAutoLockOnNearestAircraft = 272 iCommandAutoLockOnCenterAircraft = 273 iCommandAutoLockOnNextAircraft = 274 iCommandAutoLockOnPreviousAircraft = 275 iCommandAutoLockOnNearestSurfaceTarget = 276 iCommandAutoLockOnCenterSurfaceTarget = 277 iCommandAutoLockOnNextSurfaceTarget = 278 iCommandAutoLockOnPreviousSurfaceTarget = 279 iCommandChangeGunRateOfFire = 280 iCommandChangeRippleQuantity = 281 iCommandChangeRippleInterval = 282 iCommandSwitchMasterArm = 283 iCommandChangeReleaseMode = 284 iCommandPlaneRadarChangeMode = 285 iCommandChangeRWRMode = 286 iCommandPromotePlane = 287 iCommandFlightClockReset = 288 iCommandViewForwardSlowStop = 289 iCommandViewBackSlowStop = 290 iCommandViewForwardStop = 291 iCommandViewBackStop = 292 iCommandFreezeActionSystem = 293 iCommandUnfreezeActionSystem = 294 iCommandViewHorStop = 295 iCommandViewVertStop = 296 iCommandAutopilotEmergOFF_up = 297 iCommandViewTowerJump = 298 iCommandViewCameraJiggle = 299 iCommandPlaneCockpitIllumination = 300 iCommandHelicopter_PPR_button_K_up = 301 iCommandHelicopter_PPR_button_H_up = 302 iCommandHelicopter_PPR_button_T_up = 303 iCommandHelicopter_PPR_button_B_up = 304 iCommandHelicopter_PPR_button_DIR_up = 305 iCommandTransferCursor = 306 iCommandRecordCursorOnOff = 307 iCommandChangeRippleIntervalDown = 308 iCommandEnginesStart = 309 iCommandEnginesStop = 310 iCommandLeftEngineStart = 311 iCommandRightEngineStart = 312 iCommandLeftEngineStop = 313 iCommandRightEngineStop = 314 iCommandPowerOnOff = 315 iCommandAltimeterPressureIncrease = 316 iCommandAltimeterPressureDecrease = 317 iCommandAltimeterPressureStop = 318 iCommandTrackEditReplace = 319 iCommandTrackEditInsert = 320 iCommandViewFastMouse = 321 iCommandViewSlowMouse = 322 iCommandViewNormalMouse = 323 iCommandRecordSubtitleOn = 324 iCommandRecordSubtitleOff = 325 iCommandViewHUDOnlyOnOff = 326 iCommandRecoverHuman = 327 iCommandPlaneHeadLightOnOff = 328 iCommandPlaneLockPadlock = 329 iCommandPlaneUnlockPadlock = 330 iCommandViewFastKeyboard = 331 iCommandViewSlowKeyboard = 332 iCommandViewNormalKeyboard = 333 iCommandViewExternalZoomIn = 334 iCommandViewExternalZoomInStop = 335 iCommandViewExternalZoomOut = 336 iCommandViewExternalZoomOutStop = 337 iCommandViewExternalZoomDefault = 338 iCommandMouseViewOnOff = 339 iCommandViewCameraMoveMode = 340 iCommandViewFightGround = 341 iCommandViewCameraUpLeft = 342 iCommandViewCameraUpRight = 343 iCommandViewCameraDownLeft = 344 iCommandViewCameraDownRight = 345 iCommandViewPanToggle = 346 iCommandViewCameraReturn = 347 iCommandViewLocomotivesToggle = 348 iCommandPlaneLaunchPermissionOverride = 349 iCommandPlanePickleOn = 350 iCommandPlanePickleOff = 351 iCommandViewCameraBaseReturn = 352 iCommandViewCameraUpLeftSlow = 353 iCommandViewCameraUpRightSlow = 354 iCommandViewCameraDownLeftSlow = 355 iCommandViewCameraDownRightSlow = 356 iCommandPlaneDropFlareOnce = 357 iCommandPlaneDropChaffOnce = 358 iCommandViewRear = 359 iCommandScoresWindowToggle = 360 iCommandCockpitClickOn = 361 iCommandCockpitClickOff = 362 iCommandCockpitClickModeOnOff = 363 iCommandPlaneCMDDispence = 364 iCommandPlaneCMDDispenceOff = 365 iCommandPlaneCMDDispenceStop = 366 iCommandPlaneCMDDispenceStopOff = 367 iCommandPlaneCMDChangeRippleQuantity = 368 iCommandPlaneCMDChangeRippleQuantityOff = 369 iCommandPlaneCMDChangeRippleInterval = 370 iCommandPlaneCMDChangeRippleIntervalOff = 371 iCommandPlaneCMDChangeBurstAmount = 372 iCommandPlaneCMDChangeBurstAmountOff = 373 iCommandPlaneCMDCancelCurrentProgram = 374 iCommandPlaneCMDCancelCurrentProgramOff = 375 iCommandPlaneCMDChangeBoard = 376 iCommandPlaneCMDShowAmountOrProgram = 377 iCommandPlaneCancelWeaponsDelivery = 378 iCommandPlaneMasterCautionOff = 379 iCommandPlane_SpotLight_hor_stop = 380 iCommandHelicopter_SelectWeapon_hor_up = 381 iCommandHelicopter_SelectWeapon_vert_up = 382 iCommandViewChaseArcade = 383 iCommandAutoLockOnClear = 384 iCommandHelicopterHover_up = 385 iCommandPlaneStabTangBank = 386 iCommandPlaneStabHbarBank = 387 iCommandPlaneStabHorizon = 388 iCommandPlaneStabHbar = 389 iCommandPlaneStabHrad = 390 iCommandActiveIRJamming = 391 iCommandPlaneLaserRangerOnOff = 392 iCommandPlaneNightTVOnOff = 393 iCommandPlaneChangeRadarPRF = 394 iCommandViewKeepTerrain = 395 iCommandViewSnapView0 = 396 iCommandViewSnapView1 = 397 iCommandViewSnapView2 = 398 iCommandViewSnapView3 = 399 iCommandViewSnapView4 = 400 iCommandViewSnapView5 = 401 iCommandViewSnapView6 = 402 iCommandViewSnapView7 = 403 iCommandViewSnapView8 = 404 iCommandViewSnapView9 = 405 iCommandViewSnapViewStop = 406 iCommandViewBinocular = 407 iCommandPlaneStabCancel = 408 iCommandPlaneThreatWarnSoundVolumeDown = 409 iCommandPlaneThreatWarnSoundVolumeUp = 410 iCommandViewLaserOnOff = 411 iCommandPlaneIncreaseBase_Distance = 412 iCommandPlaneDecreaseBase_Distance = 413 iCommandPlaneStopBase_Distance = 414 iCommandViewIRPointerOnOff = 415 iCommandViewNVGOnOff = 416 iCommandViewAWACSUnitInfoOn = 423 iCommandViewAWACSUnitInfoOff = 424 iCommandViewIR = 425 iCommandViewTargetType = 426 iCommandPlaneAutopilotOverrideOn = 427 iCommandPlaneAutopilotOverrideOff = 428 iCommandPlaneRouteAutopilot = 429 iCommandPlaneGearUp = 430 iCommandPlaneGearDown = 431 iCommandViewAWACSJump = 432 iCommandCockpitSecondClickOn = 433 iCommandCockpitSecondClickOff = 434 iCommandCompassRose = 435 iCommandViewAWACSClearDistance = 436 iCommandViewAWACSOutOfFocus = 437 iCommandViewNightVisionGogglesOn = 438 iCommandPlaneDesignate_CageOn = 439 iCommandPlaneDesignate_CageOff = 440 iCommandPlaneDesignate_CageOn_vertical = 441 iCommandPlaneDesignate_CageOn_horizontal = 442 iCommandPlaneDLK_Target1 = 443 iCommandPlaneDLK_Target2 = 444 iCommandPlaneDLK_Target3 = 445 iCommandPlaneDLK_RefPoint = 446 iCommandPlaneDLK_Wingman1 = 447 iCommandPlaneDLK_Wingman2 = 448 iCommandPlaneDLK_Wingman3 = 449 iCommandPlaneDLK_Wingman4 = 450 iCommandPlaneDLK_All = 451 iCommandPlaneDLK_Erase = 452 iCommandPlaneDLK_Ingress = 453 iCommandPlaneDLK_SendMemory = 454 iCommandPlaneNavChangePanelModeRight = 455 iCommandPlaneNavChangePanelModeLeft = 456 iCommandPlaneNavSetFixtakingMode = 457 iCommandPlaneNav_DLK_OnOff = 458 iCommandPlaneNav_PB0 = 459 iCommandPlaneNav_PB1 = 460 iCommandPlaneNav_PB2 = 461 iCommandPlaneNav_PB3 = 462 iCommandPlaneNav_PB4 = 463 iCommandPlaneNav_PB5 = 464 iCommandPlaneNav_PB6 = 465 iCommandPlaneNav_PB7 = 466 iCommandPlaneNav_PB8 = 467 iCommandPlaneNav_PB9 = 468 iCommandPlaneNav_Steerpoints = 469 iCommandPlaneNav_INU_realign = 470 iCommandPlaneNav_POS_corrMode = 471 iCommandPlaneNav_INU_precise_align = 472 iCommandPlaneNav_Airfields = 473 iCommandPlaneNav_INU_normal_align = 474 iCommandPlaneNav_Targets = 475 iCommandPlaneNav_Enter = 476 iCommandPlaneNav_Cancel = 477 iCommandPlaneNav_POS_init = 478 iCommandPlaneNav_SelfCoord = 479 iCommandPlaneNav_CourseTimeRange = 480 iCommandPlaneNav_Wind = 481 iCommandPlaneNav_THeadingTimeRangeF = 482 iCommandPlaneNav_BearingRangeT = 483 iCommandViewPitCameraMoveUp = 484 iCommandViewPitCameraMoveDown = 485 iCommandViewPitCameraMoveLeft = 486 iCommandViewPitCameraMoveRight = 487 iCommandViewPitCameraMoveForward = 488 iCommandViewPitCameraMoveBack = 489 iCommandViewPitCameraMoveStop = 490 iCommandViewPitCameraMoveCenter = 491 iCommandViewPitHeadOnOff = 492 iCommandPlaneCockpitIlluminationPanels = 493 iCommandPlaneCockpitIlluminationGauges = 494 iCommandPlane_ABRIS_Power = 495 iCommandPlane_ABRIS_BT_1 = 496 iCommandPlane_ABRIS_BT_2 = 497 iCommandPlane_ABRIS_BT_3 = 498 iCommandPlane_ABRIS_BT_4 = 499 iCommandPlane_ABRIS_BT_5 = 500 iCommandPlane_ABRIS_Axis_Increase = 501 iCommandPlane_ABRIS_Axis_Decrease = 502 iCommandPlane_ABRIS_Axis_Push = 503 iCommandPlane_ABRIS_Brightness_Increase = 504 iCommandPlane_ABRIS_Brightness_Decrease = 505 iCommandPlane_RouteMode = 506 iCommandPlane_DescentMode = 507 iCommandPlane_DescentModeOff = 508 iCommandPlane_LockOn_start = 509 iCommandPlane_LockOn_finish = 510 iCommandPlane_SpotLight_left = 511 iCommandPlane_SpotLight_right = 512 iCommandPlane_SpotLight_up = 513 iCommandPlane_SpotLight_down = 514 iCommandPlane_SpotLight_vert_stop = 515 iCommandPlaneRotorTipLights = 516 iCommandPlane_SpotSelect_switch = 517 iCommandPlaneAntiCollisionLights = 518 iCommandPlaneNavLights_CodeModeOn = 519 iCommandPlaneNavLights_CodeModeOff = 520 iCommandPlaneFormationLights = 521 iCommandPlane_EngageAirDefenses = 522 iCommandPlane_EngageGroundTargets = 523 iCommandPlane_AutomaticTracking_Gunsight_switch = 524 iCommandPlane_K041_Power = 525 iCommandPlane_AutomaticTurn = 526 iCommandPlane_GroundMovingTarget = 527 iCommandPlane_AirborneTarget = 528 iCommandPlane_HeadOnAspect = 529 iCommandPlane_ChangeDeliveryMode_right = 530 iCommandPlane_ChangeDeliveryMode_left = 531 iCommandPlane_WeaponMode_Manual_Auto = 532 iCommandPlane_WeaponMode_switch = 533 iCommandPlane_AmmoTypeSelect = 534 iCommandPlane_FireRate = 535 iCommandPlaneDropSnarOnceOff = 536 iCommandHelicopterHover = 537 iCommandAutopilotEmergOFF = 538 iCommandPlane_HOTAS_CoolieUp = 539 iCommandPlane_HOTAS_CoolieDown = 540 iCommandPlane_HOTAS_CoolieLeft = 541 iCommandPlane_HOTAS_CoolieRight = 542 iCommandPlane_HOTAS_CoolieOff = 543 iCommandPlane_HOTAS_TargetManagementSwitchUp = 544 iCommandPlane_HOTAS_TargetManagementSwitchDown = 545 iCommandPlane_HOTAS_TargetManagementSwitchLeft = 546 iCommandPlane_HOTAS_TargetManagementSwitchRight = 547 iCommandPlane_HOTAS_TargetManagementSwitchOff = 548 iCommandPlane_HOTAS_DataManagementSwitchUp = 549 iCommandPlane_HOTAS_DataManagementSwitchDown = 550 iCommandPlane_HOTAS_DataManagementSwitchLeft = 551 iCommandPlane_HOTAS_DataManagementSwitchRight = 552 iCommandPlane_HOTAS_DataManagementSwitchOff = 553 iCommandPlane_HOTAS_TriggerSecondStage = 554 iCommandPlane_HOTAS_TriggerFirstStage = 555 iCommandPlane_HOTAS_CMS_Up = 556 iCommandPlane_HOTAS_CMS_Down = 557 iCommandPlane_HOTAS_CMS_Left = 558 iCommandPlane_HOTAS_CMS_Right = 559 iCommandPlane_HOTAS_CMS_Off = 560 iCommandPlane_HOTAS_MasterModeControlButton = 561 iCommandPlane_HOTAS_NoseWheelSteeringButton = 562 iCommandPlane_HOTAS_BoatSwitchForward = 563 iCommandPlane_HOTAS_BoatSwitchAft = 564 iCommandPlane_HOTAS_BoatSwitchCenter = 565 iCommandPlane_HOTAS_ChinaHatForward = 566 iCommandPlane_HOTAS_ChinaHatAft = 567 iCommandPlane_HOTAS_PinkySwitchForward = 568 iCommandPlane_HOTAS_PinkySwitchAft = 569 iCommandPlane_HOTAS_PinkySwitchCenter = 570 iCommandPlane_HOTAS_LeftThrottleButton = 571 iCommandPlane_HOTAS_MIC_SwitchUp = 572 iCommandPlane_HOTAS_MIC_SwitchDown = 573 iCommandPlane_HOTAS_MIC_SwitchLeft = 574 iCommandPlane_HOTAS_MIC_SwitchRight = 575 iCommandPlane_HOTAS_MIC_SwitchOff = 576 iCommandPlane_HOTAS_SpeedBrakeSwitchForward = 577 iCommandPlane_HOTAS_SpeedBrakeSwitchAft = 578 iCommandPlane_HOTAS_SpeedBrakeSwitchCenter = 579 iCommandPlane_ADF_Homer_change = 580 iCommandPlane_ADF_Channel_next = 581 iCommandPlane_ADF_Channel_prevous = 582 iCommandPlane_ADF_Mode_change = 583 iCommandPlane_ADF_Receiver_Mode_change = 585 iCommandPlane_ADF_Volume_up = 586 iCommandPlane_ADF_Volume_down = 587 iCommandPlane_ADF_Test = 588 iCommandPlane_HOTAS_ChinaHatOff = 589 iCommandHelicopter_PPR_button_K = 590 iCommandHelicopter_PPR_button_H = 591 iCommandHelicopter_PPR_button_T = 592 iCommandHelicopter_PPR_button_B = 593 iCommandHelicopter_PPR_button_DIR = 594 iCommandHelicopter_PPR_BAR_RV = 595 iCommandHelicopter_Selected_Engine_start = 596 iCommandHelicopter_Selected_Engine_interrupt_start = 597 iCommandHelicopter_APU_stop = 598 iCommandHelicopter_Engine_Select = 599 iCommandHelicopter_Left_Engine_Lock = 600 iCommandHelicopter_Right_Engine_Lock = 601 iCommandHelicopter_Rotor_Lock = 605 iCommandPlane_HOTAS_NoseWheelSteeringButtonOff = 606 iCommandPlane_R_800_1st_wheel_up = 607 iCommandPlane_R_800_1st_wheel_down = 608 iCommandPlane_R_800_2nd_wheel_up = 609 iCommandPlane_R_800_2nd_wheel_down = 610 iCommandPlane_R_800_3rd_wheel_up = 611 iCommandPlane_R_800_3rd_wheel_down = 612 iCommandPlane_R_800_4th_wheel_up = 613 iCommandPlane_R_800_4th_wheel_down = 614 iCommandPlane_R_800_Noise_Reductor_on_off = 615 iCommandPlane_R_800_Modulation_change = 616 iCommandPlane_R_800_50_100_switch = 617 iCommandPlane_R_800_ADF_Sound_switch = 618 iCommandPlane_R_800_Emergency_Radio = 619 iCommandPlane_R_800_Test = 620 iCommandPlane_R_800_Power_on_off = 621 iCommandPlane_R_828_Channel_next = 622 iCommandPlane_R_828_Channel_prevous = 623 iCommandPlane_R_828_Noise_Reductor_on_off = 624 iCommandPlane_R_828_ASU = 625 iCommandPlane_R_828_volume_up = 626 iCommandPlane_R_828_volume_down = 627 iCommandPlane_R_828_Power_on_off = 628 iCommandPlane_SPU9_SPU_9_on_off = 629 iCommandPlane_SPU9_radio_change = 630 iCommandPlaneCollectiveIncrease = 631 iCommandPlaneCollectiveDecrease = 632 iCommandPlane_HOTAS_MasterModeControlButtonUP = 633 iCommandPlane_HOTAS_TDC_depress_on = 634 iCommandPlane_HOTAS_TDC_depress_off = 635 iCommandPlaneStabHbarHeading = 636 iCommandPlaneStabPathHold = 637 iCommandPlane_HOTAS_TriggerSecondStage_Off = 638 iCommandPlane_HOTAS_TriggerFirstStage_Off = 639 iCommandPlaneDLK_Self_ID_change = 640 iCommandPlaneDLK_mode_change = 641 iCommandPlaneLeftMFD_OSB1 = 642 iCommandPlaneLeftMFD_OSB2 = 643 iCommandPlaneLeftMFD_OSB3 = 644 iCommandPlaneLeftMFD_OSB4 = 645 iCommandPlaneLeftMFD_OSB5 = 646 iCommandPlaneLeftMFD_OSB6 = 647 iCommandPlaneLeftMFD_OSB7 = 648 iCommandPlaneLeftMFD_OSB8 = 649 iCommandPlaneLeftMFD_OSB9 = 650 iCommandPlaneLeftMFD_OSB10 = 651 iCommandPlaneLeftMFD_OSB11 = 652 iCommandPlaneLeftMFD_OSB12 = 653 iCommandPlaneLeftMFD_OSB13 = 654 iCommandPlaneLeftMFD_OSB14 = 655 iCommandPlaneLeftMFD_OSB15 = 656 iCommandPlaneLeftMFD_OSB16 = 657 iCommandPlaneLeftMFD_OSB17 = 658 iCommandPlaneLeftMFD_OSB18 = 659 iCommandPlaneLeftMFD_OSB19 = 660 iCommandPlaneLeftMFD_OSB20 = 661 iCommandPlaneLeftMFD_ADJ_Increase = 662 iCommandPlaneLeftMFD_ADJ_Decrease = 663 iCommandPlaneLeftMFD_DSP_Increase = 664 iCommandPlaneLeftMFD_DSP_Decrease = 665 iCommandPlaneLeftMFD_BRT_Increase = 666 iCommandPlaneLeftMFD_BRT_Decrease = 667 iCommandPlaneLeftMFD_CON_Increase = 668 iCommandPlaneLeftMFD_CON_Decrease = 669 iCommandPlaneLeftMFD_SYM_Up = 670 iCommandPlaneLeftMFD_SYM_Dn = 671 iCommandPlaneRightMFD_OSB1 = 672 iCommandPlaneRightMFD_OSB2 = 673 iCommandPlaneRightMFD_OSB3 = 674 iCommandPlaneRightMFD_OSB4 = 675 iCommandPlaneRightMFD_OSB5 = 676 iCommandPlaneRightMFD_OSB6 = 677 iCommandPlaneRightMFD_OSB7 = 678 iCommandPlaneRightMFD_OSB8 = 679 iCommandPlaneRightMFD_OSB9 = 680 iCommandPlaneRightMFD_OSB10 = 681 iCommandPlaneRightMFD_OSB11 = 682 iCommandPlaneRightMFD_OSB12 = 683 iCommandPlaneRightMFD_OSB13 = 684 iCommandPlaneRightMFD_OSB14 = 685 iCommandPlaneRightMFD_OSB15 = 686 iCommandPlaneRightMFD_OSB16 = 687 iCommandPlaneRightMFD_OSB17 = 688 iCommandPlaneRightMFD_OSB18 = 689 iCommandPlaneRightMFD_OSB19 = 690 iCommandPlaneRightMFD_OSB20 = 691 iCommandPlaneRightMFD_ADJ_Increase = 692 iCommandPlaneRightMFD_ADJ_Decrease = 693 iCommandPlaneRightMFD_DSP_Increase = 694 iCommandPlaneRightMFD_DSP_Decrease = 695 iCommandPlaneRightMFD_BRT_Increase = 696 iCommandPlaneRightMFD_BRT_Decrease = 697 iCommandPlaneRightMFD_CON_Increase = 698 iCommandPlaneRightMFD_CON_Decrease = 699 iCommandPlaneRightMFD_SYM_Up = 700 iCommandPlaneRightMFD_SYM_Dn = 701 iCommandPlaneLeftMFD_OSB_OFF = 702 iCommandPlaneRightMFD_OSB_OFF = 703 iCommandGroundPowerDC = 704 iCommandGroundPowerDC_Cover = 705 iCommandPowerBattery1 = 706 iCommandPowerBattery1_Cover = 707 iCommandPowerBattery2 = 708 iCommandPowerBattery2_Cover = 709 iCommandGroundPowerAC = 710 iCommandPowerGeneratorLeft = 711 iCommandPowerGeneratorRight = 712 iCommandElectricalPowerInverter = 713 iCommandDatalinkTLK = 714 iCommandDatalinkUHF_TLK = 715 iCommandDatalinkUHF_SA = 716 iCommandFuelPumpsTankForward = 717 iCommandFuelPumpsTankRear = 718 iCommandFuelExternalPumpsTanksInner = 719 iCommandFuelExternalPumpsTanksOuter = 720 iCommandFuelmeterPower = 721 iCommandLeftEngineFuelValveShutOff = 722 iCommandLeftEngineFuelValveShutOffCover = 723 iCommandRightEngineFuelValveShutOff = 724 iCommandRightEngineFuelValveShutOffCover = 725 iCommandAPUFuelValveShutOff = 726 iCommandAPUFuelValveShutOffCover = 727 iCommandFuelBypassValve = 728 iCommandFuelBypassValveCover = 729 iCommandEjectingSystemPower1 = 730 iCommandEjectingSystemPower1Cover = 731 iCommandEjectingSystemPower2 = 732 iCommandEjectingSystemPower3 = 733 iCommandWeaponsControlSystem = 734 iCommandWeaponsControlSystemCover = 735 iCommandMainHydraulics = 736 iCommandMainHydraulicsCover = 737 iCommandIFF_Power = 738 iCommandIFF_PowerCover = 739 iCommandTargetingNavigationSystemsPower = 740 iCommandElectronicControlSystemLeftEngine = 741 iCommandElectronicControlSystemLeftEngineCover = 742 iCommandElectronicControlSystemRightEngine = 743 iCommandElectronicControlSystemRightEngineCover = 744 iCommandHeadingMethodSwitch = 745 iCommandHUDBrightnessUp = 746 iCommandHUDBrightnessDown = 747 iCommandHUDTest = 748 iCommandHUDTest_up = 749 iCommandEmergencyGear = 750 iCommandEmergencyGearCover = 751 iCommandMechClock_LeftLever_Down = 752 iCommandMechClock_LeftLever_Down_up = 753 iCommandMechClock_LeftLever_Up = 754 iCommandMechClock_LeftLever_TurnLeft = 755 iCommandMechClock_LeftLever_TurnRight = 756 iCommandMechClock_RightLever_Down = 757 iCommandMechClock_RightLever_Down_up = 758 iCommandMechClock_RightLever_Rotate_left = 759 iCommandMechClock_RightLever_Rotate_right = 760 iCommandBKOMode = 761 iCommandLampsControl = 762 iCommandRotorRPMHigh = 763 iCommandHSI_CourseRotaryLeft = 764 iCommandHSI_CourseRotaryRight = 765 iCommandHSI_HeadingRotaryLeft = 766 iCommandHSI_HeadingRotaryRight = 767 iCommandHSI_Test = 768 iCommandHSI_Test_up = 769 iCommandHSI_SteeringSelection = 770 iCommandADI_ZeroPitchTrimLeft = 771 iCommandADI_ZeroPitchTrimRight = 772 iCommandADI_Test = 773 iCommandADI_Test_up = 774 iCommandADI_TestCover = 775 iCommandRALT_DangerousAltitudeRotaryLeft = 776 iCommandRALT_DangerousAltitudeRotaryRight = 777 iCommandRALT_Test = 778 iCommandRALT_Test_up = 779 iCommandPlaneDLK_Target1_up = 780 iCommandPlaneDLK_Target2_up = 781 iCommandPlaneDLK_Target3_up = 782 iCommandPlaneDLK_RefPoint_up = 783 iCommandPlaneDLK_Wingman1_up = 784 iCommandPlaneDLK_Wingman2_up = 785 iCommandPlaneDLK_Wingman3_up = 786 iCommandPlaneDLK_Wingman4_up = 787 iCommandPlaneDLK_All_up = 788 iCommandPlaneDLK_Erase_up = 789 iCommandPlaneDLK_Ingress_up = 790 iCommandPlaneDLK_SendMemory_up = 791 iCommandPlane_ADF_Test_up = 792 iCommandPlane_R_800_Test_up = 793 iCommandPlane_R_828_ASU_up = 794 iCommandPlane_AutomaticTurn_up = 795 iCommandPlane_GroundMovingTarget_up = 796 iCommandPlane_AirborneTarget_up = 797 iCommandPlane_HeadOnAspect_up = 798 iCommandPlaneCancelWeaponsDelivery_up = 799 iCommandLampsControl_up = 800 iCommandRotorRPMHigh_up = 801 iCommandHelicopter_Selected_Engine_start_up = 802 iCommandHelicopter_Selected_Engine_interrupt_start_up = 803 iCommandHelicopter_APU_stop_up = 804 iCommandPlane_ABRIS_BT_1_up = 805 iCommandPlane_ABRIS_BT_2_up = 806 iCommandPlane_ABRIS_BT_3_up = 807 iCommandPlane_ABRIS_BT_4_up = 808 iCommandPlane_ABRIS_BT_5_up = 809 iCommandPlane_ABRIS_Axis_Increase_up = 810 iCommandPlane_ABRIS_Axis_Decrease_up = 811 iCommandPlane_ABRIS_Axis_Push_up = 812 iCommandPlaneADIAHRIllumination = 813 iCommandControlPanelIllumination = 814 iCommandCockpitIllumination = 815 iCommandActivePauseOnOff = 816 iCommandHelicopter_Engine_Launch_method = 817 iCommandHelicopter_Rotor_Anti_Icing_System = 818 iCommandHelicopter_Engines_Anti_Icing_Dust_Protection_System = 819 iCommandHelicopter_TC_RPM = 820 iCommandHelicopter_TC_RPM_Cover = 821 iCommandHelicopter_Engine_Temperature_Control = 822 iCommandHelicopter_Engine_Temperature_Control_Cover = 823 iCommandHelicopter_SelectWeapon_Internal = 824 iCommandHelicopter_SelectWeapon_External = 825 iCommandHelicopter_SelectWeapon_ALL = 826 iCommandHelicopter_SelectWeapon_AA = 827 iCommandHelicopter_SignalFlares_switch_OnOff = 828 iCommandHelicopter_SignalFlares_GREEN = 829 iCommandHelicopter_SignalFlares_RED = 830 iCommandHelicopter_SignalFlares_WHITE = 831 iCommandHelicopter_SignalFlares_YELLOW = 832 iCommandHelicopter_PanelsIlluminationButtonDown = 833 iCommandHelicopter_PanelsIlluminationButtonUp = 834 iCommandCockpitShowPilotOnOff = 835 iCommandEasyRadarScaleUp = 836 iCommandEasyRadarScaleOut = 837 iCommandEngineLaunchMethod = 838 iCommandPlaneCollectiveStop = 839 iCommandPlane_Helmet_Brightess_Up = 840 iCommandPlane_Helmet_Brightess_Down = 841 iCommandPlane_I251_Brightness_Up = 842 iCommandPlane_I251_Brightness_Down = 843 iCommandPlane_I251_Contrast_Up = 844 iCommandPlane_I251_Contrast_Down = 845 iCommandPlane_I251_Background_WhiteBlack = 846 iCommandPlane_LaserCode_Next = 847 iCommandPlane_LaserCode_Previous = 848 iCommandReloadTables = 849 iCommandPlane_JettisonMode_explosion = 850 iCommandPlane_ShowControls = 851 iCommandPlane_CallHelpWindow = 852 iCommandPlane_ReadjustFreeTurbineRPM_Up = 853 iCommandPlane_ReadjustFreeTurbineRPM_Down = 854 iCommandPlaneWheelParkingBrake = 855 iCommandHelicopter_CollectiveStopper_Up = 856 iCommandHelicopter_CollectiveStopper_Down = 857 iCommandPlaneNav_PB0_off = 858 iCommandPlaneNav_PB1_off = 859 iCommandPlaneNav_PB2_off = 860 iCommandPlaneNav_PB3_off = 861 iCommandPlaneNav_PB4_off = 862 iCommandPlaneNav_PB5_off = 863 iCommandPlaneNav_PB6_off = 864 iCommandPlaneNav_PB7_off = 865 iCommandPlaneNav_PB8_off = 866 iCommandPlaneNav_PB9_off = 867 iCommandPlaneNav_Steerpoints_off = 868 iCommandPlaneNav_INU_realign_off = 869 iCommandPlaneNav_POS_corrMode_off = 870 iCommandPlaneNav_INU_precise_align_off = 871 iCommandPlaneNav_Airfields_off = 872 iCommandPlaneNav_INU_normal_align_off = 873 iCommandPlaneNav_Targets_off = 874 iCommandPlaneNav_Enter_off = 875 iCommandPlaneNav_Cancel_off = 876 iCommandPlaneNav_POS_init_off = 877 iCommandPlaneNav_SelfCoord_off = 878 iCommandPlaneNav_CourseTimeRange_off = 879 iCommandPlaneNav_Wind_off = 880 iCommandPlaneNav_THeadingTimeRangeF_off = 881 iCommandPlaneNav_BearingRangeT_off = 882 iCommand_CPT_MECH_WindscreenWiper_Speed = 883 iCommandAccelReset = 884 iCommand_LWS_Reset = 885 iCommandLaserRangeModeSwitchCover = 886 iCommandLaserRangeModeSwitch = 887 iCommandLaserRangeReset = 888 iCommand_AGR_Power = 889 iCommand_WEAP_INTERF_MasterSimulate = 890 iCommand_CPT_MECH_VMG_HYDRO_EKRAN_Cover = 891 iCommand_CPT_MECH_VMG_HYDRO_EKRAN = 892 iCommand_LWS_BIT_On = 893 iCommand_IlluminationInterf_Control_Panel_Illumination = 894 iCommand_LWS_Power = 895 iCommand_UV26_PowerCover = 896 iCommand_UV26_Power = 897 iCommand_UV26_BITCover = 898 iCommand_UV26_BIT = 899 iCommand_C061K_power = 900 iCommand_C061K_heat = 901 iCommand_VMS_ALMAZ_UP_Check = 902 iCommand_EjectInterface_Circuit_Test = 903 iCommand_ENG_INTERF_Right_Engine_RT_12_6 = 904 iCommand_ENG_INTERF_Left_Engine_RT_12_6 = 905 iCommand_ENG_INTERF_EngVibrDetectorBIT = 906 iCommand_ENG_INTERF_TempIndTestwRunningEng = 907 iCommand_ENG_INTERF_TempIndTestwStoppedEng = 908 iCommand_FuelSysInterf_FuelQuantityIndTestOn = 909 iCommandPitotAoAHeat = 910 iCommandPitotRam = 911 iCommandHelicopter_Rotor_Anti_Icing_Dust_Protection_System = 912 iCommand_VMS_ALMAZ_UP_EmergencyOn = 913 iCommand_VMS_ALMAZ_UP_SpeechInfoOff = 914 iCommand_VMS_ALMAZ_UP_Repeat = 915 iCommand_SHKVAL_scan_vel_up = 916 iCommand_SHKVAL_scan_vel_down = 917 iCommand_SHKVAL_windscreen_wiper = 918 iCommand_PVI_BRIGHTNESS_LEVER_up = 919 iCommand_PVI_BRIGHTNESS_LEVER_down = 920 iCommand_FireExting_LeftEngineExting = 921 iCommand_FireExting_APUExting = 922 iCommand_FireExting_RightEngineExting = 923 iCommand_FireExting_VentilatorExting = 924 iCommand_FireExting_ExtinguishersToDown = 925 iCommand_FireExting_ExtinguishersCover = 926 iCommand_FireExting_Signals = 927 iCommand_FireExting_Reservoirs = 928 iCommand_FireExting_ReservoirsCover = 929 iCommand_IlluminationInterf_Cockpit_Illumination = 930 iCommand_FireExting_TestGroups = 931 iCommand_AGR_Test = 932 iCommand_AGR_Oriet = 933 iCommand_AGR_axis_left = 934 iCommand_AGR_axis_right = 935 iCommand_IlluminationInterf_Cockpit_Night_Illumination_brightness_up = 936 iCommand_IlluminationInterf_Cockpit_Night_Illumination_brightness_down = 937 iCommand_IlluminationInterf_Panels_Illumination_brightness_up = 938 iCommand_IlluminationInterf_Panels_Illumination_brightness_down = 939 iCommand_IlluminationInterf_ADI_AHR_Illumination_brightness_up = 940 iCommand_IlluminationInterf_ADI_AHR_Illumination_brightness_down = 941 iCommand_IlluminationInterf_Control_Panel_Illumination_brightness_up = 942 iCommand_IlluminationInterf_Control_Panel_Illumination_brightness_down = 943 iCommand_NAVINTERF_HeadingCourse = 944 iCommandPlaneDLK_None = 945 iCommandPlaneDLK_None_up = 946 iCommandWeaponsBallisticSelectorRight = 947 iCommandWeaponsBallisticSelectorLeft = 948 iCommand_ZMS_3_MagVarRotaryRight = 949 iCommand_ZMS_3_MagVarRotaryLeft = 950 iCommand_EjectInterface_Circuit_SelectRight = 951 iCommand_EjectInterface_Circuit_SelectLeft = 952 iCommand_CPT_MECH_PitotSystemHeatTest = 953 iCommand_FireDetectorsTest1stGroup = 954 iCommand_FireDetectorsTest2ndGroup = 955 iCommand_FireDetectorsTest3rdGroup = 956 iCommandPlaneTrimOn = 957 iCommandPlaneTrimOff = 958 iCommandPlaneLevitation = 959 iCommandPlaneEmergencyBrake = 960 iCommandPlaneWheelBrakeLeftOn = 961 iCommandPlaneWheelBrakeLeftOff = 962 iCommandPlaneWheelBrakeRightOn = 963 iCommandPlaneWheelBrakeRightOff = 964 iCommandPlaneEmergencyDisconnectLever = 965 ICommandMenuItem1 = 966 ICommandMenuItem2 = 967 ICommandMenuItem3 = 968 ICommandMenuItem4 = 969 ICommandMenuItem5 = 970 ICommandMenuItem6 = 971 ICommandMenuItem7 = 972 ICommandMenuItem8 = 973 ICommandMenuItem9 = 974 ICommandMenuItem10 = 975 ICommandMenuItem11 = 976 ICommandMenuItem12 = 977 ICommandMenuExit = 978 ICommandSwitchDialog = 979 ICommandSwitchToCommonDialog = 980 ICommandToggleConsole = 981 iCommandPlaneLeftMFD_OSB1_Off = 982 iCommandPlaneLeftMFD_OSB2_Off = 983 iCommandPlaneLeftMFD_OSB3_Off = 984 iCommandPlaneLeftMFD_OSB4_Off = 985 iCommandPlaneLeftMFD_OSB5_Off = 986 iCommandPlaneLeftMFD_OSB6_Off = 987 iCommandPlaneLeftMFD_OSB7_Off = 988 iCommandPlaneLeftMFD_OSB8_Off = 989 iCommandPlaneLeftMFD_OSB9_Off = 990 iCommandPlaneLeftMFD_OSB10_Off = 991 iCommandPlaneLeftMFD_OSB11_Off = 992 iCommandPlaneLeftMFD_OSB12_Off = 993 iCommandPlaneLeftMFD_OSB13_Off = 994 iCommandPlaneLeftMFD_OSB14_Off = 995 iCommandPlaneLeftMFD_OSB15_Off = 996 iCommandPlaneLeftMFD_OSB16_Off = 997 iCommandPlaneLeftMFD_OSB17_Off = 998 iCommandPlaneLeftMFD_OSB18_Off = 999 iCommandPlaneLeftMFD_OSB19_Off = 1000 iCommandPlaneLeftMFD_OSB20_Off = 1001 iCommandPlaneLeftMFD_ADJ_Stop = 1002 iCommandPlaneLeftMFD_DSP_Stop = 1003 iCommandPlaneLeftMFD_BRT_Stop = 1004 iCommandPlaneLeftMFD_CON_Stop = 1005 iCommandPlaneLeftMFD_SYM_Stop = 1006 iCommandPlaneRightMFD_OSB1_Off = 1007 iCommandPlaneRightMFD_OSB2_Off = 1008 iCommandPlaneRightMFD_OSB3_Off = 1009 iCommandPlaneRightMFD_OSB4_Off = 1010 iCommandPlaneRightMFD_OSB5_Off = 1011 iCommandPlaneRightMFD_OSB6_Off = 1012 iCommandPlaneRightMFD_OSB7_Off = 1013 iCommandPlaneRightMFD_OSB8_Off = 1014 iCommandPlaneRightMFD_OSB9_Off = 1015 iCommandPlaneRightMFD_OSB10_Off = 1016 iCommandPlaneRightMFD_OSB11_Off = 1017 iCommandPlaneRightMFD_OSB12_Off = 1018 iCommandPlaneRightMFD_OSB13_Off = 1019 iCommandPlaneRightMFD_OSB14_Off = 1020 iCommandPlaneRightMFD_OSB15_Off = 1021 iCommandPlaneRightMFD_OSB16_Off = 1022 iCommandPlaneRightMFD_OSB17_Off = 1023 iCommandPlaneRightMFD_OSB18_Off = 1024 iCommandPlaneRightMFD_OSB19_Off = 1025 iCommandPlaneRightMFD_OSB20_Off = 1026 iCommandPlaneRightMFD_ADJ_Stop = 1027 iCommandPlaneRightMFD_DSP_Stop = 1028 iCommandPlaneRightMFD_BRT_Stop = 1029 iCommandPlaneRightMFD_CON_Stop = 1030 iCommandPlaneRightMFD_SYM_Stop = 1031 iCommandThrottleIncrease = 1032 iCommandThrottleDecrease = 1033 iCommandThrottleStop = 1034 iCommandThrottle1Increase = 1035 iCommandThrottle1Decrease = 1036 iCommandThrottle1Stop = 1037 iCommandThrottle2Increase = 1038 iCommandThrottle2Decrease = 1039 iCommandThrottle2Stop = 1040 iCommandPlane_HOTAS_CMS_Zaxis = 1041 iCommandPlane_HOTAS_CMS_Zaxis_Off = 1042 iCommandViewJFO = 1043 iCommandViewSmoke1 = 1044 iCommandViewSmoke2 = 1045 iCommandViewSmoke3 = 1046 iCommandPlane_FLAPS_UP = 1047 iCommandPlane_FLAPS_MNR = 1048 iCommandPlane_FLAPS_DN = 1049 iCommandPlane_EAC_ARM = 1050 iCommandPlane_EAC_OFF = 1051 iCommandPlane_RDR_ALTM_NRM = 1052 iCommandPlane_RDR_ALTM_DIS = 1053 iCommandPlane_LG_WRN_Silence = 1054 iCommandPlane_APU_Start = 1055 iCommandPlane_APU_Off = 1056 iCommandPlane_L_ENG_OPER_Ign = 1057 iCommandPlane_L_ENG_OPER_Norm = 1058 iCommandPlane_L_ENG_OPER_Motor = 1059 iCommandPlane_R_ENG_OPER_Ign = 1060 iCommandPlane_R_ENG_OPER_Norm = 1061 iCommandPlane_R_ENG_OPER_Motor = 1062 iCommandPlane_L_ENG_FUEL_FLOW_Norm = 1063 iCommandPlane_L_ENG_FUEL_FLOW_Override = 1064 iCommandPlane_R_ENG_FUEL_FLOW_Norm = 1065 iCommandPlane_R_ENG_FUEL_FLOW_Override = 1066 iCommandPlaneQuickPadlockOn = 1067 iCommandPlaneQuickPadlockOff = 1068 iCommandPlaneThrottleFrictionDec = 1069 iCommandPlaneThrottleFrictionInc = 1070 iCommandAPUGeneratorPower = 1071 iCommandEmergencyFlood = 1072 iCommandBatteryPower = 1073 iCommandElectricalPowerInverterSTBY = 1074 iCommandElectricalPowerInverterOFF = 1075 iCommandElectricalPowerInverterTEST = 1076 iCommandPlaneFSExtTanksWingValve = 1077 iCommandPlaneFSExtTanksFuselageValve = 1078 iCommandPlaneFSSigAmplifier = 1079 iCommandPlaneFSLineCheck = 1080 iCommandPlaneFSTankGate = 1081 iCommandPlaneFSTankCrossFeed = 1082 iCommandPlaneFSLeftWingBoostPump = 1083 iCommandPlaneFSRightWingBoostPump = 1084 iCommandPlaneFSLeftWingFillDisable = 1085 iCommandPlaneFSRightWingFillDisable = 1086 iCommandPlaneFSLeftMainBoostPump = 1087 iCommandPlaneFSRightMainBoostPump = 1088 iCommandPlaneFSLeftMainFillDisable = 1089 iCommandPlaneFSRightMainFillDisable = 1090 iCommandPlaneFSReceiverLever = 1091 iCommandPlaneFSQuantityIndicatorSelectorINT = 1092 iCommandPlaneFSQuantityIndicatorSelectorMAIN = 1093 iCommandPlaneFSQuantityIndicatorSelectorWING = 1094 iCommandPlaneFSQuantityIndicatorSelectorEXTWING = 1095 iCommandPlaneFSQuantityIndicatorSelectorEXTCTR = 1096 iCommandPlaneFSQuantityIndicatorTest = 1097 iCommandPlaneFSRefuelLigtingDecrease = 1098 iCommandPlaneFSRefuelLigtingIncrease = 1099 iCommandPlaneEmerSpeedBrakeRetract = 1100 iCommandPlaneEmerPitchRollTrim = 1101 iCommandPlaneEmerTrimNoseDn = 1102 iCommandPlaneEmerTrimLWingDn = 1103 iCommandPlaneEmerTrimRWingDn = 1104 iCommandPlaneEmerTrimNoseUP = 1105 iCommandPlaneEmerTrimNeutral = 1106 iCommandPlaneEmerAileronDisengageL = 1107 iCommandPlaneEmerAileronDisengageOff = 1108 iCommandPlaneEmerAileronDisengageR = 1109 iCommandPlaneEmerElevatorDisengageL = 1110 iCommandPlaneEmerElevatorDisengageOff = 1111 iCommandPlaneEmerElevatorDisengageR = 1112 iCommandPlaneEmerFlapsRetract = 1113 iCommandPlaneEmerFlightControl = 1114 iCommandPlaneCircuitBreaker_1 = 1115 iCommandPlaneCircuitBreaker_2 = 1116 iCommandPlaneCircuitBreaker_3 = 1117 iCommandPlaneCircuitBreaker_4 = 1118 iCommandPlaneCircuitBreaker_5 = 1119 iCommandPlaneCircuitBreaker_6 = 1120 iCommandPlaneCircuitBreaker_7 = 1121 iCommandPlaneCircuitBreaker_8 = 1122 iCommandPlaneCircuitBreaker_9 = 1123 iCommandPlaneCircuitBreaker_10 = 1124 iCommandPlaneCircuitBreaker_11 = 1125 iCommandPlaneCircuitBreaker_12 = 1126 iCommandPlaneCircuitBreaker_13 = 1127 iCommandPlaneCircuitBreaker_14 = 1128 iCommandPlaneCircuitBreaker_15 = 1129 iCommandPlaneCircuitBreaker_16 = 1130 iCommandPlaneCircuitBreaker_17 = 1131 iCommandPlaneCircuitBreaker_18 = 1132 iCommandPlaneCircuitBreaker_19 = 1133 iCommandPlaneCircuitBreaker_20 = 1134 iCommandPlaneCircuitBreaker_21 = 1135 iCommandPlaneCircuitBreaker_22 = 1136 iCommandPlaneCircuitBreaker_23 = 1137 iCommandPlaneCircuitBreaker_24 = 1138 iCommandPlaneCircuitBreaker_25 = 1139 iCommandPlaneCircuitBreaker_26 = 1140 iCommandPlaneCircuitBreaker_27 = 1141 iCommandPlaneCircuitBreaker_28 = 1142 iCommandPlaneCircuitBreaker_29 = 1143 iCommandPlaneCircuitBreaker_30 = 1144 iCommandPlaneCircuitBreaker_31 = 1145 iCommandPlaneCircuitBreaker_32 = 1146 iCommandPlaneCircuitBreaker_33 = 1147 iCommandPlaneCircuitBreaker_34 = 1148 iCommandPlaneCircuitBreaker_35 = 1149 iCommandPlaneCircuitBreaker_36 = 1150 iCommandPlaneCircuitBreaker_37 = 1151 iCommandPlaneCircuitBreaker_38 = 1152 iCommandPlaneYawSASEngageL = 1153 iCommandPlaneYawSASEngageR = 1154 iCommandPlanePitchSASEngageL = 1155 iCommandPlanePitchSASEngageR = 1156 iCommandPlaneSASMonitorTestLeft = 1157 iCommandPlaneSASMonitorTestOff = 1158 iCommandPlaneSASMonitorTestRight = 1159 iCommandPlaneSASTakeOffTrim = 1160 iCommandPlaneIntercomINTDecrease = 1161 iCommandPlaneIntercomINTIncrease = 1162 iCommandPlaneIntercomINTPress = 1163 iCommandPlaneIntercomFMDecrease = 1164 iCommandPlaneIntercomFMIncrease = 1165 iCommandPlaneIntercomFMPress = 1166 iCommandPlaneIntercomVHFDecrease = 1167 iCommandPlaneIntercomVHFIncrease = 1168 iCommandPlaneIntercomVHFPress = 1169 iCommandPlaneIntercomUHFDecrease = 1170 iCommandPlaneIntercomUHFIncrease = 1171 iCommandPlaneIntercomUHFPress = 1172 iCommandPlaneIntercomAIMDecrease = 1173 iCommandPlaneIntercomAIMIncrease = 1174 iCommandPlaneIntercomAIMPress = 1175 iCommandPlaneIntercomIFFDecrease = 1176 iCommandPlaneIntercomIFFIncrease = 1177 iCommandPlaneIntercomIFFPress = 1178 iCommandPlaneIntercomILSDecrease = 1179 iCommandPlaneIntercomILSIncrease = 1180 iCommandPlaneIntercomILSPress = 1181 iCommandPlaneIntercomTCNDecrease = 1182 iCommandPlaneIntercomTCNIncrease = 1183 iCommandPlaneIntercomTCNPress = 1184 iCommandPlaneIntercomVolumeDecrease = 1185 iCommandPlaneIntercomVolumeIncrease = 1186 iCommandPlaneIntercomHM = 1187 iCommandPlaneIntercomINT = 1188 iCommandPlaneIntercomVHF = 1189 iCommandPlaneIntercomFM = 1190 iCommandPlaneIntercomHF = 1191 iCommandPlaneRefuelStatusIndLTSDecrease = 1192 iCommandPlaneRefuelStatusIndLTSIncrease = 1193 iCommandPlaneNightVisionLTSTCP = 1194 iCommandPlaneNightVisionLTSALL = 1195 iCommandPlaneNightVisionLTSOFF = 1196 iCommandPlaneHarsSasNormOverride = 1197 iCommandPlaneFireDetectBleedAirTest = 1198 iCommandPlaneUHFPresetChannelSelectorInc = 1199 iCommandPlaneUHFPresetChannelSelectorDec = 1200 iCommandPlaneUHF100MhzSelector1 = 1201 iCommandPlaneUHF100MhzSelector2 = 1202 iCommandPlaneUHF100MhzSelector3 = 1203 iCommandPlaneUHF100MhzSelectorA = 1204 iCommandPlaneUHF10MhzSelectorInc = 1205 iCommandPlaneUHF10MhzSelectorDec = 1206 iCommandPlaneUHF1MhzSelectorInc = 1207 iCommandPlaneUHF1MhzSelectorDec = 1208 iCommandPlaneUHF01MhzSelectorInc = 1209 iCommandPlaneUHF01MhzSelectorDec = 1210 iCommandPlaneUHF0025MhzSelectorInc = 1211 iCommandPlaneUHF0025MhzSelectorDec = 1212 iCommandPlaneUHFTestDisplay = 1213 iCommandPlaneUHFStatus = 1214 iCommandPlaneUHFLoad = 1215 iCommandPlaneUHFVolumeDec = 1216 iCommandPlaneUHFVolumeInc = 1217 iCommandPlaneUHFFunctionDialOFF = 1218 iCommandPlaneUHFFunctionDialMAIN = 1219 iCommandPlaneUHFFunctionDialBOTH = 1220 iCommandPlaneUHFFunctionDialADF = 1221 iCommandPlaneUHFFreqModeDialMNL = 1222 iCommandPlaneUHFFreqModeDialPRESET = 1223 iCommandPlaneUHFFreqModeDialGRD = 1224 iCommandPlaneUHFTTone = 1225 iCommandPlaneUHFSquelch = 1226 iCommandPlaneUHFPanelCover = 1227 iCommandPlaneCDU_LSK_3L = 1228 iCommandPlaneCDU_LSK_5L = 1229 iCommandPlaneCDU_LSK_7L = 1230 iCommandPlaneCDU_LSK_9L = 1231 iCommandPlaneCDU_LSK_3R = 1232 iCommandPlaneCDU_LSK_5R = 1233 iCommandPlaneCDU_LSK_7R = 1234 iCommandPlaneCDU_LSK_9R = 1235 iCommandPlaneCDU_SYS = 1236 iCommandPlaneCDU_NAV = 1237 iCommandPlaneCDU_WP = 1238 iCommandPlaneCDU_OSET = 1239 iCommandPlaneCDU_FPM = 1240 iCommandPlaneCDU_PREV = 1241 iCommandPlaneCDU_1 = 1242 iCommandPlaneCDU_2 = 1243 iCommandPlaneCDU_3 = 1244 iCommandPlaneCDU_4 = 1245 iCommandPlaneCDU_5 = 1246 iCommandPlaneCDU_6 = 1247 iCommandPlaneCDU_7 = 1248 iCommandPlaneCDU_8 = 1249 iCommandPlaneCDU_9 = 1250 iCommandPlaneCDU_0 = 1251 iCommandPlaneCDU_PNT = 1252 iCommandPlaneCDU_SLASH = 1253 iCommandPlaneCDU_A = 1254 iCommandPlaneCDU_B = 1255 iCommandPlaneCDU_C = 1256 iCommandPlaneCDU_D = 1257 iCommandPlaneCDU_E = 1258 iCommandPlaneCDU_F = 1259 iCommandPlaneCDU_G = 1260 iCommandPlaneCDU_H = 1261 iCommandPlaneCDU_I = 1262 iCommandPlaneCDU_J = 1263 iCommandPlaneCDU_K = 1264 iCommandPlaneCDU_L = 1265 iCommandPlaneCDU_M = 1266 iCommandPlaneCDU_N = 1267 iCommandPlaneCDU_O = 1268 iCommandPlaneCDU_P = 1269 iCommandPlaneCDU_Q = 1270 iCommandPlaneCDU_R = 1271 iCommandPlaneCDU_S = 1272 iCommandPlaneCDU_T = 1273 iCommandPlaneCDU_U = 1274 iCommandPlaneCDU_V = 1275 iCommandPlaneCDU_W = 1276 iCommandPlaneCDU_X = 1277 iCommandPlaneCDU_Y = 1278 iCommandPlaneCDU_Z = 1279 iCommandPlaneVOID_1 = 1280 iCommandPlaneVOID_2 = 1281 iCommandPlaneCDU_MK = 1282 iCommandPlaneCDU_BCK = 1283 iCommandPlaneCDU_SPC = 1284 iCommandPlaneCDU_CLR = 1285 iCommandPlaneCDU_FA = 1286 iCommandPlaneCDU_DIM = 1287 iCommandPlaneCDU_BRT = 1288 iCommandPlaneCDU_PGUP = 1289 iCommandPlaneCDU_PGDN = 1290 iCommandPlaneCDU_BLANC_L = 1291 iCommandPlaneCDU_BLANC_R = 1292 iCommandPlaneCDU_PLUS = 1293 iCommandPlaneCDU_MINUS = 1294 iCommandPlaneUFC_1 = 1295 iCommandPlaneUFC_2 = 1296 iCommandPlaneUFC_3 = 1297 iCommandPlaneUFC_4 = 1298 iCommandPlaneUFC_5 = 1299 iCommandPlaneUFC_6 = 1300 iCommandPlaneUFC_7 = 1301 iCommandPlaneUFC_8 = 1302 iCommandPlaneUFC_9 = 1303 iCommandPlaneUFC_0 = 1304 iCommandPlaneUFC_SPC = 1305 iCommandPlaneUFC_HACK = 1306 iCommandPlaneUFC_FUNC = 1307 iCommandPlaneUFC_LTR = 1308 iCommandPlaneUFC_CLR = 1309 iCommandPlaneUFC_ENT = 1310 iCommandPlaneUFC_MK = 1311 iCommandPlaneUFC_ALT = 1312 iCommandPlaneUFC_MASTER_WARNING = 1313 iCommandPlaneUFC_STEER_UP = 1314 iCommandPlaneUFC_STEER_DOWN = 1315 iCommandPlaneUFC_DATA_UP = 1316 iCommandPlaneUFC_DATA_DOWN = 1317 iCommandPlaneUFC_SEL_UP = 1318 iCommandPlaneUFC_SEL_DOWN = 1319 iCommandPlaneUFC_DEPR_UP = 1320 iCommandPlaneUFC_DEPR_DOWN = 1321 iCommandPlaneUFC_INTEN_INCREASE = 1322 iCommandPlaneUFC_INTEN_DECREASE = 1323 iCommandPlaneCMSP_OSB_1 = 1324 iCommandPlaneCMSP_OSB_2 = 1325 iCommandPlaneCMSP_OSB_3 = 1326 iCommandPlaneCMSP_OSB_4 = 1327 iCommandPlaneCMSP_NEXT_UP = 1328 iCommandPlaneCMSP_NEXT_DOWN = 1329 iCommandPlaneCMSP_RTN = 1330 iCommandPlaneCMSP_JTSN = 1331 iCommandPlaneCMSP_BRT_DEC = 1332 iCommandPlaneCMSP_BRT_INC = 1333 iCommandPlaneCMSP_MWS_MENU = 1334 iCommandPlaneCMSP_MWS_ON = 1335 iCommandPlaneCMSP_JMR_MENU = 1336 iCommandPlaneCMSP_JMR_ON = 1337 iCommandPlaneCMSP_RWR_MENU = 1338 iCommandPlaneCMSP_RWR_ON = 1339 iCommandPlaneCMSP_DISP_MENU = 1340 iCommandPlaneCMSP_DISP_ON = 1341 iCommandPlaneCMSP_MODE_OFF = 1342 iCommandPlaneCMSP_MODE_STBY = 1343 iCommandPlaneCMSP_MODE_MAN = 1344 iCommandPlaneCMSP_MODE_SEMI = 1345 iCommandPlaneCMSP_MODE_AUTO = 1346 iCommandPlaneCMSC_JMR = 1347 iCommandPlaneCMSC_MWS = 1348 iCommandPlaneCMSC_BRT_DEC = 1349 iCommandPlaneCMSC_BRT_INC = 1350 iCommandPlaneCMSC_AUD_DEC = 1351 iCommandPlaneCMSC_AUD_INC = 1352 iCommandPlaneCMSC_PRI = 1353 iCommandPlaneCMSC_SEP = 1354 iCommandPlaneCMSC_UNK = 1355 iCommandPlanePositionLightsFlash = 1356 iCommandPlanePositionLightsOff = 1357 iCommandPlanePositionLightsSteady = 1358 iCommandPlaneFormationLightsDecrease = 1359 iCommandPlaneFormationLightsIncrease = 1360 iCommandPlaneEngInstLightsDecrease = 1361 iCommandPlaneEngInstLightsIncrease = 1362 iCommandPlaneNoseIllum = 1363 iCommandPlaneAuxInstLightsDecrease = 1364 iCommandPlaneAuxInstLightsIncrease = 1365 iCommandPlaneSignalLTS = 1366 iCommandPlaneFltInstLightsDecrease = 1367 iCommandPlaneFltInstLightsIncrease = 1368 iCommandPlaneAccelCompLights = 1369 iCommandPlaneFloodLightsDecrease = 1370 iCommandPlaneFloodLightsIncrease = 1371 iCommandPlaneConsoleLightsDecrease = 1372 iCommandPlaneConsoleLightsIncrease = 1373 iCommandPlaneAHCPMasterArm = 1374 iCommandPlaneAHCPMasterSafe = 1375 iCommandPlaneAHCPMasterTrain = 1376 iCommandPlaneAHCPGUNPACArm = 1377 iCommandPlaneAHCPGUNSafe = 1378 iCommandPlaneAHCPGUNArm = 1379 iCommandPlaneAHCPLaserArm = 1380 iCommandPlaneAHCPLaserSafe = 1381 iCommandPlaneAHCPLaserTrain = 1382 iCommandPlaneAHCPTGPOnOff = 1383 iCommandPlaneAHCPAltSCEBaro = 1384 iCommandPlaneAHCPAltSCEDelta = 1385 iCommandPlaneAHCPAltSCERadar = 1386 iCommandPlaneAHCPHUDModeDayNight = 1387 iCommandPlaneAHCPHUDModeNormSTBY = 1388 iCommandPlaneAHCPCICUOnOff = 1389 iCommandPlaneAHCPJTRSOnOff = 1390 iCommandPlaneAHCPIFFCCOn = 1391 iCommandPlaneAHCPIFFCCTest = 1392 iCommandPlaneAHCPIFFCCOff = 1393 iCommandPlaneLGPAntiSkid = 1394 iCommandPlaneLGPDownlockOverride = 1395 iCommandPlaneLGPLandLight = 1396 iCommandPlaneLGPLightsOff = 1397 iCommandPlaneLGPTaxiLight = 1398 iCommandPlaneNMSP_HARS = 1399 iCommandPlaneNMSP_EGI = 1400 iCommandPlaneNMSP_TISL = 1401 iCommandPlaneNMSP_STRPT = 1402 iCommandPlaneNMSP_ANCHR = 1403 iCommandPlaneNMSP_TCN = 1404 iCommandPlaneNMSP_ILS = 1405 iCommandPlaneNMSP_PTR_ABLE_STOW = 1406 iCommand_FireExting_Discharge_Left = 1407 iCommand_FireExting_Discharge_Center = 1408 iCommand_FireExting_Discharge_Right = 1409 iCommandPlane_HARS_Fast_Erect = 1410 iCommandPlane_Altimeter_PNEU = 1411 iCommandPlane_Altimeter_ELECT = 1412 iCommandPlane_Altimeter_CENTER = 1413 iCommandPlane_AAP_CDU_Power = 1414 iCommandPlane_AAP_EGI_Power = 1415 iCommandPlane_AAP_PageSel_OTHER = 1416 iCommandPlane_AAP_PageSel_POSITION = 1417 iCommandPlane_AAP_PageSel_STEER = 1418 iCommandPlane_AAP_PageSel_WAYPT = 1419 iCommandPlane_AAP_SteerPt_FLTPLAN = 1420 iCommandPlane_AAP_SteerPt_MARK = 1421 iCommandPlane_AAP_SteerPt_MISSION = 1422 iCommandPlane_AAP_SteerSw_Up = 1423 iCommandPlane_AAP_SteerSw_Down = 1424 iCommandPlane_TACAN_Mode_Off = 1425 iCommandPlane_TACAN_Mode_Rec = 1426 iCommandPlane_TACAN_Mode_TR = 1427 iCommandPlane_TACAN_Mode_AAREC = 1428 iCommandPlane_TACAN_Mode_AATR = 1429 iCommandPlane_TACAN_Volume_Decrease = 1430 iCommandPlane_TACAN_Volume_Increase = 1431 iCommandPlane_TACAN_Chanel_Ones_Decrease = 1432 iCommandPlane_TACAN_Chanel_Ones_Increase = 1433 iCommandPlane_TACAN_Chanel_Tens_Decrease = 1434 iCommandPlane_TACAN_Chanel_Tens_Increase = 1435 iCommandPlane_TACAN_Chanel_XY_Mode = 1436 iCommandPlane_TACAN_Test = 1437 iCommandPlane_ILS_Power = 1438 iCommandPlane_ILS_MHz_Decrease = 1439 iCommandPlane_ILS_MHz_Increase = 1440 iCommandPlane_ILS_KHz_Decrease = 1441 iCommandPlane_ILS_KHz_Increase = 1442 iCommandPlane_ILS_Volume_Decrease = 1443 iCommandPlane_ILS_Volume_Increase = 1444 iCommandPlane_HARS_Mode = 1445 iCommandPlane_HARS_LAT_Correction_Decrease = 1446 iCommandPlane_HARS_LAT_Correction_Increase = 1447 iCommandPlane_HARS_HemisphereSel = 1448 iCommandPlane_HARS_MagneticVar_Min15 = 1449 iCommandPlane_HARS_MagneticVar_Null = 1450 iCommandPlane_HARS_MagneticVar_Plus15 = 1451 iCommandPlane_HARS_SyncButton = 1452 iCommandPlane_HARS_HDG_Decrease = 1453 iCommandPlane_HARS_HDG_Increase = 1454 iCommandPlane_STALL_Vol_Decrease = 1455 iCommandPlane_STALL_Vol_Increase = 1456 iCommandPlane_Peak_Vol_Decrease = 1457 iCommandPlane_Peak_Vol_Increase = 1458 iCommandPlane_VHF_FM_Volume_Dec = 1459 iCommandPlane_VHF_FM_Volume_Inc = 1460 iCommandPlane_VHF_FM_Mode_EMERFM = 1461 iCommandPlane_VHF_FM_Mode_EMERAM = 1462 iCommandPlane_VHF_FM_Mode_MAN = 1463 iCommandPlane_VHF_FM_Mode_PRE = 1464 iCommandPlane_VHF_FM_FreqMode_OFF = 1465 iCommandPlane_VHF_FM_FreqMode_TK = 1466 iCommandPlane_VHF_FM_FreqMode_DN = 1467 iCommandPlane_VHF_FM_Squelch = 1468 iCommandPlane_VHF_FM_Tone = 1469 iCommandPlane_VHF_FM_Load = 1470 iCommandPlane_VHF_FM_Preset_Dec = 1471 iCommandPlane_VHF_FM_Preset_Inc = 1472 iCommandPlane_VHF_FM_10MHz_Dec = 1473 iCommandPlane_VHF_FM_10MHz_Inc = 1474 iCommandPlane_VHF_FM_1MHz_Dec = 1475 iCommandPlane_VHF_FM_1MHz_Inc = 1476 iCommandPlane_VHF_FM_01MHz_Dec = 1477 iCommandPlane_VHF_FM_01MHz_Inc = 1478 iCommandPlane_VHF_FM_025MHz_Dec = 1479 iCommandPlane_VHF_FM_025MHz_Inc = 1480 iCommandPlane_VHF_AM_Volume_Dec = 1481 iCommandPlane_VHF_AM_Volume_Inc = 1482 iCommandPlane_VHF_AM_Mode_EMERFM = 1483 iCommandPlane_VHF_AM_Mode_EMERAM = 1484 iCommandPlane_VHF_AM_Mode_MAN = 1485 iCommandPlane_VHF_AM_Mode_PRE = 1486 iCommandPlane_VHF_AM_FreqMode_OFF = 1487 iCommandPlane_VHF_AM_FreqMode_TK = 1488 iCommandPlane_VHF_AM_FreqMode_DN = 1489 iCommandPlane_VHF_AM_Squelch = 1490 iCommandPlane_VHF_AM_Tone = 1491 iCommandPlane_VHF_AM_Load = 1492 iCommandPlane_VHF_AM_Preset_Dec = 1493 iCommandPlane_VHF_AM_Preset_Inc = 1494 iCommandPlane_VHF_AM_10MHz_Dec = 1495 iCommandPlane_VHF_AM_10MHz_Inc = 1496 iCommandPlane_VHF_AM_1MHz_Dec = 1497 iCommandPlane_VHF_AM_1MHz_Inc = 1498 iCommandPlane_VHF_AM_01MHz_Dec = 1499 iCommandPlane_VHF_AM_01MHz_Inc = 1500 iCommandPlane_VHF_AM_025MHz_Dec = 1501 iCommandPlane_VHF_AM_025MHz_Inc = 1502 iCommandPlane_Oxygen_Emergency = 1503 iCommandPlane_Oxygen_Normal = 1504 iCommandPlane_Oxygen_TestMark = 1505 iCommandPlane_Oxygen_Supply = 1506 iCommandPlane_Oxygen_100Oxygen = 1507 iCommandPlane_Oxygen_Ind_Test = 1508 iCommandPlane_Env_WindshieldDefogDeice = 1509 iCommandPlane_Env_CanopyDefog_Dec = 1510 iCommandPlane_Env_CanopyDefog_Inc = 1511 iCommandPlane_Env_WindshieldRainRemove = 1512 iCommandPlane_Env_WindshieldCenter = 1513 iCommandPlane_Env_WindshieldWash = 1514 iCommandPlane_Env_BleddAir = 1515 iCommandPlane_Env_TempPress_NORM = 1516 iCommandPlane_Env_TempPress_DUMP = 1517 iCommandPlane_Env_TempPress_RAM = 1518 iCommandPlane_Env_MainAirSupply = 1519 iCommandPlane_Env_FlowLevel_Decrease = 1520 iCommandPlane_Env_FlowLevel_Increase = 1521 iCommandPlane_Env_AirConditioner_AUTO = 1522 iCommandPlane_Env_AirConditioner_HOT = 1523 iCommandPlane_Env_AirConditioner_COLD = 1524 iCommandPlane_Env_TempLevel_Decrease = 1525 iCommandPlane_Env_TempLevel_Increase = 1526 iCommandPlaneLeftMFD_BRTMODE_OFF = 1527 iCommandPlaneLeftMFD_BRTMODE_NIGHT = 1528 iCommandPlaneLeftMFD_BRTMODE_DAY = 1529 iCommandPlaneRightMFD_BRTMODE_OFF = 1530 iCommandPlaneRightMFD_BRTMODE_NIGHT = 1531 iCommandPlaneRightMFD_BRTMODE_DAY = 1532 iCommandSeatArmHandle = 1533 iCommandPlaneLockPadlockTerrain = 1534 iCommandTrainingUserResponded = 1535 iCommandViewBriefing = 1536 iCommandDebriefing = 1537 iCommandExtLadderButtonCover = 1538 iCommandExtLadderButton = 1539 iCommandExtLadderRelease = 1540 iCommandArmGroundSafetyCover = 1541 iCommandArmGroundSafetySwitch = 1542 iCommandDVADRFunctionOff = 1543 iCommandDVADRFunctionSTDBY = 1544 iCommandDVADRFunctionREC = 1545 iCommandAntiGSuitTest = 1546 iCommandCanopyActuatorDisengage = 1547 iCommandCanopyJettison = 1548 iCommandCanopyJettisonUnlockButton = 1549 iCommandIFFAntennaUpper = 1550 iCommandIFFAntennaBoth = 1551 iCommandIFFAntennaLower = 1552 iCommandUHFAntennaUpper = 1553 iCommandUHFAntennaAuto = 1554 iCommandUHFAntennaLower = 1555 iCommandEGI_HQ_TOD = 1556 iCommandPlane_HOTAS_LeftThrottleButton_Off = 1557 iCommandRWRIntensityDecrease = 1558 iCommandRWRIntensityIncrease = 1559 iCommandMissionResourcesManagement = 1560 iCommandViewLaserChangeCode = 1561 iCommand_LASTE_from_PATH_to_ALTHDG = 1562 iCommand_LASTE_from_ALT_to_ALTHDG = 1563 iCommandPlane_L_ENG_OPER_Norm_from_Motor = 1564 iCommandPlane_R_ENG_OPER_Norm_from_Motor = 1565 iCommandPlane_L_ENG_OPER_Norm_from_Ign = 1566 iCommandPlane_R_ENG_OPER_Norm_from_Ign = 1567 iCommandPlane_FLAPS_MNR_from_UP = 1568 iCommandPlane_FLAPS_MNR_from_DN = 1569 iCommandGViewAction = 1570 iCommandGChangeWS = 1571 iCommandGChangeLN = 1572 iCommandGReloadWeapon = 1573 iCommandGFire = 1574 iCommandGFireStop = 1575 iCommandGZoomIn = 1576 iCommandGZoomNormal = 1577 iCommandGChangeSpeedH = 1578 iCommandGChangeSpeedV = 1579 iCommandGLockon = 1580 iCommandGLockoff = 1581 iCommandGGroupModeOn = 1582 iCommandGGroupModeOff = 1583 iCommandGHoldCursorModeOn = 1584 iCommandGHoldCursorModeOff = 1585 iCommandViewParticleEffect = 1586 iCommandPlaneShowKneeboard = 1587 iCommandGIsometricView = 1588 iCommandPlane_SPU9_PTT_on = 1589 iCommandPlane_SPU9_PTT_off = 1590 iCommandPlane_P_51_PTT_on = 1591 iCommandPlane_P_51_PTT_off = 1592 iCommandViewTransposeModeOn = 1593 iCommandViewTransposeModeOff = 1594 iCommandViewBtn1Down = 1595 iCommandViewBtn1Up = 1596 iCommandViewBtn2Down = 1597 iCommandViewBtn2Up = 1598 iCommandViewBtn3Down = 1599 iCommandViewBtn3Up = 1600 iCommandPlane_P_51_WarEmergencyPower = 1601 iCommandViewCockpitChangeSeat = 1602 iCommandViewCockpitSetPilotSeat = 1603 iCommandViewCockpitSetOperatorSeat = 1604 iCommandViewCockpitSetGunnerSeat1 = 1605 iCommandViewCockpitSetGunnerSeat2 = 1606 iCommandGViewWSCenter = 1607 iCommandGStabilize = 1608 iCommandViewPauseOnOff = 1609 iCommandSlaveToTanker = 1610 iCommandViewNVG_GainUp = 1611 iCommandViewNVG_GainDown = 1612 iCommandVehicle_LaunchRedFlare = 1613 iCommandVehicle_LaunchGreenFlare = 1614 iCommandVehicle_LaunchWhiteFlare = 1615 iCommand_ExplorationStart = 1616 iCommand_ExplorationTargetSelection = 1617 iCommand_ExplorationCansel = 1618 iCommandViewNVGOff = 1619 iCommandGZoomUpdate = 1620 iCommandTakeControlTrack = 1621 iCommandGSelectFeedSlot1 = 1622 iCommandGSelectFeedSlot2 = 1623 iCommandGEmissionToggle = 1624 iCommandToggleMirrors = 1625 iCommandToggleReceiveMode = 1626 iCommandPlaneChangeLockUp = 1627 iCommandTrainingUserRespondedBack = 1628 iCommandClockElapsedTimeReset = 1629 iCommandGLaserRangerOn = 1630 iCommandGLaserRangerOff = 1631 iCommandGLaserRangerReset = 1632 iCommandExtCargoHook = 1633 iCommandExternalCargoAutounhook = 1634 iCommandSensorReset = 1635 iCommandMissionRestart = 1636 iCommandViewInfoControlPanelOnOff = 1637 iCommandMaximum = 1638 iCommandKeyNull = 2000 iCommandPlanePitch = 2001 iCommandPlaneRoll = 2002 iCommandPlaneRudder = 2003 iCommandPlaneThrustCommon = 2004 iCommandPlaneThrustLeft = 2005 iCommandPlaneThrustRight = 2006 iCommandPlaneViewHorizontal = 2007 iCommandPlaneViewVertical = 2008 iCommandPlaneZoomView = 2009 iCommandViewHorizontalAbs = 2010 iCommandViewVerticalAbs = 2011 iCommandViewZoomAbs = 2012 iCommandPlanePitchDelta = 2013 iCommandPlaneRollDelta = 2014 iCommandPlaneRudderDelta = 2015 iCommandPlaneThrustCommonDelta = 2016 iCommandPlaneThrustLeftDelta = 2017 iCommandPlaneThrustRightDelta = 2018 iCommandPlaneTrimPitch = 2019 iCommandPlaneTrimRoll = 2020 iCommandPlaneTrimRudder = 2021 iCommandPlaneTrimPitchAbs = 2022 iCommandPlaneTrimRollAbs = 2023 iCommandPlaneTrimRudderAbs = 2024 iCommandPlaneRadarHorizontal = 2025 iCommandPlaneRadarVertical = 2026 iCommandPlaneRadarHorizontalAbs = 2027 iCommandPlaneRadarVerticalAbs = 2028 iCommandPlaneMFDZoom = 2029 iCommandPlaneMFDZoomAbs = 2030 iCommandPlaneSelecterHorizontal = 2031 iCommandPlaneSelecterVertical = 2032 iCommandPlaneSelecterHorizontalAbs = 2033 iCommandPlaneSelecterVerticalAbs = 2034 iCommandPlaneFeedbackTrimmer = 2035 iCommandCockpitCursorHorizontal = 2036 iCommandCockpitCursorVertical = 2037 iCommandCockpitCursorHorizontalAbs = 2038 iCommandCockpitCursorVerticalAbs = 2039 iCommandPlaneBase_Distance = 2040 iCommandPlaneBase_DistanceAbs = 2041 iCommandViewAWACSMapMouseMove = 2042 iCommandViewCameraAltitude = 2043 iCommandViewAWACSObjectIdLow = 2044 iCommandViewAWACSObjectIdHigh = 2045 iCommandViewRoll = 2046 iCommandViewRollAbs = 2047 iCommandViewHorTrans = 2048 iCommandViewHorTransAbs = 2049 iCommandViewVertTrans = 2050 iCommandViewVertTransAbs = 2051 iCommandViewLongitudeTrans = 2052 iCommandViewLongitudeTransAbs = 2053 iCommandViewAWACSDistanceToolDistance = 2054 iCommandViewAWACSDistanceToolAngle = 2055 iCommandViewAWACSMouseMoveX = 2056 iCommandViewAWACSMouseMoveY = 2057 iCommandViewAWACSLastZoomX1 = 2058 iCommandViewAWACSLastZoomX2 = 2059 iCommandViewAWACSLastZoomY1 = 2060 iCommandViewAWACSLastZoomY2 = 2061 iCommandViewAWACSZoom100 = 2062 iCommandViewAWACSZoomIn = 2063 iCommandViewAWACSZoomOut = 2064 iCommandViewAWACSDistance = 2065 iCommandViewAWACSLabels = 2066 iCommandViewAWACSDetectionAreas = 2067 iCommandViewAWACSDangerousAreas = 2068 iCommandViewAWACSCenterOnPlane = 2069 iCommandViewAWACSDistanceX1 = 2070 iCommandViewAWACSDistanceY1 = 2071 iCommandViewAWACSDistanceX2 = 2072 iCommandViewAWACSDistanceY2 = 2073 iCommandCockpitVirtualAxis = 2074 iCommandCockpitVirtualAxisAbs = 2075 iCommandViewAWACSTargetPointerX = 2076 iCommandViewAWACSTargetPointerY = 2077 iCommandViewAWACSApplyTargetPointer = 2078 iCommandViewAWACSInfoTargetButton = 2079 iCommandViewAWACSInfoCloseButton = 2080 iCommandViewAWACSTargetFireButton = 2081 iCommandViewAWACSTargetRemoveButton = 2082 iCommandViewAWACSTargetCloseButton = 2083 iCommandViewAWACSTargetStartTime = 2084 iCommandViewAWACSTargetUnits = 2085 iCommandViewAWACSTargetRounds = 2086 iCommandPlaneCollective = 2087 iCommandDebugAxis1 = 2088 iCommandDebugAxis2 = 2089 iCommandDebugAxis3 = 2090 iCommandDebugAxis4 = 2091 iCommandDebugAxis5 = 2092 iCommandDebugAxis6 = 2093 iCommandDebugAxis7 = 2094 iCommandDebugAxis8 = 2095 iCommandDebugAxis9 = 2096 iCommandDebugAxis10 = 2097 iCommandHelicopterLeftEngineBrake_ByAxis = 2098 iCommandHelicopterRightEngineBrake_ByAxis = 2099 iCommandHelicopterRotorEngineBrake_ByAxis = 2100 iCommandWheelBrake = 2101 iCommandViewAWACSSetColumnPath = 2102 iCommandViewAWACSCancelColumnPath = 2103 iCommandViewAWACSInfoPathButton = 2104 iCommandViewAWACSSetPathCloseButton = 2105 iCommandViewAWACSUpdateWOInfoLow = 2106 iCommandViewAWACSUpdateWOInfoHigh = 2107 iCommandViewAWACSVehControlCloseButton = 2108 iCommandViewAWACSSetColumnSpeed = 2109 iCommandViewAWACSChangeColumnState = 2110 iCommandViewAWACSChangeColumnForm = 2111 iCommandLeftWheelBrake = 2112 iCommandRightWheelBrake = 2113 iCommandViewAWACSTargetSetButton = 2114 iCommandRoleCoalitionUpdated = 2115 iCommandViewAWACSMapEventType = 2116 iCommandViewAWACSMapEventX = 2117 iCommandViewAWACSMapEventY = 2118 iCommandViewAWACSMapEventFlags = 2119 iCommandViewAWACSKeyState = 2120 iCommandViewAWACSKeyKey = 2121 iCommandViewAWACSKeyData = 2122 iCommandViewAWACSShowPathes = 2123 iCommandViewAWACSShowTargets = 2124 iCommandViewAWACSRoadPriorChanged = 2125 iCommandViewAWACSBridgesPriorChanged = 2126 iCommandViewAWACSFireEnabledChanged = 2127 iCommandViewAWACSTargetXChanged = 2128 iCommandViewAWACSTargetZChanged = 2129 iCommand_TDC_AbsolutePositionHorizontal = 2130 iCommand_TDC_AbsolutePositionVertical = 2131 iCommandAdjustViewAngleToComfortValue = 2132 iCommandViewAWACSChangeROE = 2133 iCommandViewAWACSChangeAlarmState = 2134 iCommandViewAWACSTargetChangeRadius = 2135 iCommandViewAWACSTargetRadiusSet = 2136 iCommandViewLaserCodeChanged = 2137 iCommandViewAWACSSetColumnAltitude = 2138 iCommandViewAWACSShowHealths = 2139 iCommandViewAWACSInfoAddTargetButton = 2140 iCommandViewAWACSInfoDelTargetButton = 2141 iServiceInformAboutUserHAngle = 2142 iServiceInformAboutUserVAngle = 2143 iOculusRiftYaw = 2144 iOculusRiftPitch = 2145 iOculusRiftRoll = 2146 iOculusRiftHeadPosX = 2147 iOculusRiftHeadPosY = 2148 iOculusRiftHeadPosZ = 2149 iCommandKeyMaximum = 2150 iCommandCockpitDeviceCommandsStart = 3000 iCommandCockpitDeviceCommandsEnd = 3999 iCommandRepKeyBegin = 4000","title":"iCommands"},{"location":"Database/wsTypes/","text":"wsTypes.lua # This file can be found at: \"C:\\Program Files\\Eagle Dynamics\\DCS World\\Scripts\\Database\\wsTypes.lua\" -- **************** 1 level *************** wsType_Air = 1 wsType_Ground = 2 wsType_Navy = 3 wsType_Weapon = 4 wsType_Static = 5 wsType_Destroyed = 6 wsType_Test1 = 200 wsType_Point = 201 -- **************** 2 level *************** -- Air objects (wType_Air) wsType_Airplane = 1 wsType_Helicopter = 2 wsType_Free_Fall = 3 -- Weapon (wsType_Weapon) wsType_Missile = 4 wsType_Bomb = 5 wsType_Shell = 6 wsType_NURS = 7 wsType_Torpedo = 8 -- Ground objects (wsType_Ground) wsType_Moving = 8 wsType_Standing = 9 wsType_Tank = 17 wsType_SAM = 16 wsType_Infantry = 20 -- Navy objects (wsType_Navy) wsType_Ship = 12 -- object (wsType_Static) wsType_Airdrome = 13 wsType_Explosion = 14 wsType_GContainer = 15 wsType_AirdromePart = 18 wsType_WingPart = 19 -- **************** 3 level *************** -- Air objects, wsType_Airplane wsType_Fighter = 1 wsType_F_Bomber = 2 wsType_Intercepter = 3 wsType_Intruder = 4 wsType_Cruiser = 5 wsType_Battleplane = 6 -- Free-fall air objects wsType_Snars = 31 wsType_Parts = 35 wsType_FuelTank = 43 -- wsType_Missile wsType_AA_Missile = 7 wsType_AS_Missile = 8 wsType_SA_Missile = 34 wsType_SS_Missile = 11 wsType_A_Torpedo = 10 wsType_S_Torpedo = 11 wsType_AA_TRAIN_Missile = 100 wsType_AS_TRAIN_Missile = 101 -- wsType_Bomb wsType_Bomb_A = 9 wsType_Bomb_Guided = 36 wsType_Bomb_BetAB = 37 wsType_Bomb_Cluster = 38 wsType_Bomb_Antisubmarine = 39 wsType_Bomb_ODAB = 40 wsType_Bomb_Fire = 41 wsType_Bomb_Nuclear = 42 wsType_Bomb_Lighter = 49 -- wsType_Shell wsType_Shell_A = 10 -- Navy objects (wsType_Navy, wsType_Cruiser) wsType_AirCarrier = 12 wsType_HCarrier = 13 wsType_ArmedShip = 14 wsType_CivilShip = 15 wsType_Submarine = 16 -- wsType_Airdrome wsType_RW1 = 20 wsType_RW2 = 30 wsType_Heliport = 40 -- wsType_Explosion wsType_GroundExp = 29 -- wsType_NURS wsType_Container = 32 wsType_Rocket = 33 -- wsType_GContainer wsType_Control_Cont = 44 wsType_Jam_Cont = 45 wsType_Cannon_Cont = 46 wsType_Support = 47 wsType_Snare_Cont = 48 wsType_Smoke_Cont = 50 wsType_JATO_Cont = 51 -- Ground object (wsType_Moving || wsType_Standing ) wsType_NoWeapon = 25 wsType_Gun = 26 wsType_Miss = 27 wsType_ChildMiss = 28 wsType_MissGun = 104 wsType_Civil = 100 --*************************************************** -- wsType_Radar = 101 wsType_Radar_Miss = 102 wsType_Radar_MissGun = 103 wsType_Radar_Gun = 105 -- **************** 4 level *************** -- Free-fall air objects; parts wsType_OBLOMOK_1 = 1; -- 1-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_2 = 2; -- 2-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_3 = 3; -- 3-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_4 = 4; -- 4-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_5 = 5; -- 5-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_6 = 6; -- 6-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 OBLOMOK_OBSHIWKI_1 = 7; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 OBLOMOK_OBSHIWKI_2 = 8; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 K36 = 9; -- \u041a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u043d. \u043a\u0440\u0435\u0441\u043b\u043e PILOT_K36 = 10; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 K36 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT = 11; -- \u041f\u0438\u043b\u043e\u0442 RUS \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c FONAR_OTK = 12; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c -- Free-fall air objects - snars wsType_Chaff = 13; -- \u0440\u0430\u0434\u0438\u043e-\u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_Flare = 14; -- \u0442\u0435\u043f\u043b\u043e\u0432\u0430\u044f \u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_ShortMTail = 15; -- \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0445\u0432\u043e\u0441\u0442 \u0440\u0430\u043a\u0435\u0442 wsType_SmallBomb = 16; -- \u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b PILOT_ACER = 17; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 ACER \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_F14_SEAT = 18; -- \u041f\u0438\u043b\u043e\u0442 F14 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT_US = 19; -- \u041f\u0438\u043b\u043e\u0442 US \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c A_10_FONAR = 20; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0410-10 F_14A_FONAR = 21; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-14A F_15_FONAR = 22; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15 F_16_FONAR = 23; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 F_18C_FONAR = 24; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18C MIG_23_FONAR = 25; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-23 MIG_25_FONAR = 26; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-25 MIG_27_FONAR = 27; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-27 MIG_29_FONAR = 28; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29K_FONAR = 29; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29\u041a MIG_31_FONAR_P = 30; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_31_FONAR_Z = 31; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u0437\u0430\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_L = 32; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_R = 33; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_25_FONAR = 34; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25 SU_27_FONAR = 35; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-27 SU_30_FONAR = 36; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-30 SU_33_FONAR = 37; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-33 SU_39_FONAR = 38; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-39 TORNADO_FONAR = 39; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 TORNADO Mirage_FONAR = 40; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage F_4_FONAR_P = 41; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 F_4_FONAR_Z = 42; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0437\u0430\u0434\u043d\u0438\u0439 F_5_FONAR = 43; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 SU_17_FONAR = 44; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-17 SU_34_FONAR_L = 45; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_34_FONAR_R = 46; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_29C_FONAR = 47; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29G_FONAR = 48; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 SU_25T_FONAR = 49; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25\u0422 wsType_Flare_GREEN = 50;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0417\u0415\u041b\u0415\u041d\u0410\u042f wsType_Flare_RED = 51;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u041a\u0420\u0410\u0421\u041d\u0410\u042f wsType_Flare_WHITE = 52;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0411\u0415\u041b\u0410\u042f wsType_Flare_YELLOW = 53;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0416\u0415\u041b\u0422\u0410\u042f PILOT_DEAD = 54;-- \u0442\u0440\u0443\u043f \u043f\u0438\u043b\u043e\u0442\u0430 PARACHUTE_ON_GROUND = 55;-- \u043f\u043e\u0433\u0430\u0441\u0448\u0438\u0439 \u043a\u0443\u043f\u043e\u043b -- \u0412\u0437\u0440\u044b\u0432\u044b GROUND_EXP = 1; -- \u041d\u0430\u0437\u0435\u043c\u043d\u044b\u0439 \u0432\u0437\u0440\u044b\u0432 1 Heliport_standart = 100; -- \u0432\u0435\u0440\u0442\u043e\u043b\u0451\u0442\u043e\u0434\u0440\u043e\u043c -- \u0421\u043f\u0438\u0441\u043e\u043a \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 Airdrome_0 = 0; -- \u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c 0 Khersones = 1; -- \u0425\u0435\u0440\u0441\u043e\u043d\u0435\u0441 Saki = 2; -- \u0421\u0430\u043a\u0438 Simpheropol = 3; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Razdolnoe = 4; -- \u0420\u0430\u0437\u0434\u043e\u043b\u044c\u043d\u043e\u0435 Dzhankoy = 5; -- \u0414\u0436\u0430\u043d\u043a\u043e\u0439 Kirovskoe = 6; -- \u041a\u0438\u0440\u043e\u0432\u0441\u043a\u043e\u0435 Kerch = 7; -- \u0411\u0430\u0433\u0435\u0440\u043e\u0432\u043e (\u041a\u0435\u0440\u0447\u044c) Belbek = 8; -- \u0411\u0435\u043b\u044c\u0431\u0435\u043a Krasnogvardeyskoye = 9; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u043e\u0435 Octyabrskoe = 10; -- \u041e\u043a\u0442\u044f\u0431\u0440\u044c\u0441\u043a\u043e\u0435 Gvardeyskoe = 11; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0432\u043e\u0435\u043d\u043d\u044b\u0439 Anapa = 12; -- \u0410\u043d\u0430\u043f\u0430 Krasnodar = 13; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Novorossiysk = 14; -- \u041d\u043e\u0432\u043e\u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a Krymsk = 15; -- \u041a\u0440\u044b\u043c\u0441\u043a Maykop = 16; -- \u041c\u0430\u0439\u043a\u043e\u043f Gelendzhik = 17; -- \u0413\u0435\u043b\u0435\u043d\u0434\u0436\u0438\u043a Sochi = 18; -- \u0421\u043e\u0447\u0438 (\u0410\u0434\u043b\u0435\u0440) Krasnodar_P = 19; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 Sukhumi = 20; -- \u0421\u0443\u0445\u0443\u043c\u0438 Gudauta = 21; -- \u0413\u0443\u0434\u0430\u0443\u0442\u0430 Batumi = 22; -- \u0411\u0430\u0442\u0443\u043c\u0438 Tskhakaya = 23; -- \u0426\u0445\u0430\u043a\u0430\u044f Kobuleti = 24; -- \u041a\u043e\u0431\u0443\u043b\u0435\u0442\u0438 Kutaisi = 25; -- \u041a\u0443\u0442\u0430\u0438\u0441\u0438 MinVody = 26; Nalchick = 27; Mozdok = 28 -- \u041c\u043e\u0437\u0434\u043e\u043a\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c Lochini = 29 -- \u0413\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442 \u0432 \u0422\u0431\u0438\u043b\u0438\u0441\u0438 TbilisiMilitary = 30 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0422\u0431\u0438\u043b\u0438\u0441\u0438 Vaziani = 31 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0412\u0430\u0437\u0438\u0430\u043d\u0438 Beslan = 32 -- \u0412\u043b\u0430\u0434\u0438\u043a\u0430\u0432\u043a\u0430\u0437-\u0411\u0435\u0441\u043b\u0430\u043d --#ifndef DEMO_VERSION LAST_AIRDROME_TYPE = Nalchick; --#else --LAST_AIRDROME_TYPE = Gvardeyskoe; --#endif DEMO_VERSION ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0410\u042d\u0420\u041e\u0414\u0420\u041e\u041c\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LAST_AIRDROME_TYPE !!! -- ------------------------------------------------------------------------/ wsType_RunWay = 100; -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Airplanes list. \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0422\u0418\u041f\u041e\u0412 \u0421\u0410\u041c\u041e\u041b\u0415\u0422\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LastPlaneType !!! -- ------------------------------------------------------------------------/ -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438 \u0438 \u043c\u043d\u043e\u0433\u043e\u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. MiG_23 = 1; -- MiG-23 Flogger MiG_29 = 2; -- MiG-29 Fulcrum Su_27 = 3; -- Su-27 Flanker Su_33 = 4; -- Su-33 F_14 = 5; -- F-14 Tomcat F_15 = 6; -- F-15 Eagle F_16 = 7; -- F-16 Fighting Falcon -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a\u0438. MiG_25 = 8; -- MiG-25 Foxbat MiG_31 = 9; -- MiG-31 Foxhound F_2 = 10; -- Tornado F.2 IDS GR.1A -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_27 = 11; -- MiG-27 Flogger-D Su_24 = 12; -- Su-24 Fencer Su_30 = 13; -- Su-30 FA_18 = 14; -- F/A-18A Hornet F_111 = 15; -- F-111 -- \u0428\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a\u0438. Su_25 = 16; -- Su-25 Frogfoot A_10A = 17; -- A-10A Thunderbolt II -- \u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. Tu_160 = 18; -- Tu-160 Blackjack B_1 = 19; -- B-1 Lancer Su_34 = 20; -- C\u0443-34 \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a Tu_95 = 21; -- Tu-95 Bear Tu_142 = 22; -- Tu-142 Bear B_52 = 23; -- B-52 Stratofortress -- \u0411\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_25P = 24; -- MiG_25P -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a Tu_22M3 = 25; -- Tu-22M3 Backfire -- \u0410\u0412\u0410\u041a\u0421. A_50 = 26; -- \u0410-50 Mainstay E_3 = 27; -- E-3 Sentry -- \u0421\u0430\u043c\u043e\u043b\u0435\u0442\u044b \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a\u0438 IL_78 = 28; -- IL-78 Midas KC_10 = 29; -- KC-10 Extender -- \u0422\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. IL_76 = 30; -- IL-76 Candid C_130 = 31; -- C-130 Hercules MIG_29K = 32; -- MiG-29K - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c S_3R = 33; -- S-3A VICING, \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439, \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a Mirage = 34; -- Mirage 2000 - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c -- \u0411\u0435\u0441\u043f\u0438\u043b\u043e\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b-\u0440\u0430\u0437\u0432\u0435\u0434\u0447\u0438\u043a\u0438. Tu_143 = 35; -- Tu-143 (\u0412\u0420-3) \"\u0420\u0435\u0439\u0441\" Tu_141 = 36; -- Tu-141 (\u0412\u0420-2) \"\u0421\u0442\u0440\u0438\u0436\" F_117 = 37; -- F-117 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a Su_39 = 38; -- SU-39 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AN_26B = 39; -- AN-26B \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 AN_30M = 40; -- AN-30M \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 E_2C = 41; -- E-2C Hawkeye \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 AWACS \u043a\u0430\u043a AN_26B S_3A = 42; -- S-3A Viking \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AV_8B = 43; -- AV-8B Harrier \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c EA_6B = 44; -- EA-6B Prowler \u0440\u0430\u0434\u0438\u043e\u043f\u0440\u043e\u0442\u0438\u0432\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a F_4E = 45; -- F-4E Phantom II \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c F_5E = 46; -- F-5E Tiger \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c C_17 = 47; -- C-17 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 USA SU_17M4 = 48; -- Cy-17M4 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c MiG_29G = 49; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 MiG_29C = 50; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 Su_24MR = 51; -- Su-24MR Fencer F_16A = 52; -- F-16A Fighting Falcon FA_18C = 53; -- F/A-18C Hornet Su_25T = 54; -- Su-25 Frogfoot RQ_1A_Predator = 55;-- Predator UAV TORNADO_IDS = 56; Yak_40 = 57; -- Yak-40 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 A_10C = 58; -- A-10C F_15E = 59; -- F-15E KC_135 = 60; -- KC-135 L_39ZA = 61; -- \u041b-39\u0417\u0410 \u0443\u0447\u0435\u0431\u043d\u043e-\u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 P_51B = 62; -- P-51B P_51D = 63; -- P-51D-25-NA P_51D_30_NA = 64; -- P-51D-30-NA TF_51D = 65; -- TF-51D J_11A = 66; -- chinese licensed variant of base Su-27 -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ LastPlaneType = 150;--\u0432\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u043f\u043e\u0434 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Helicopters list. \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ MI_8MT = 1 + LastPlaneType; -- M\u0438-8\u041c\u0422. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_24W = 2 + LastPlaneType; -- M\u0438-24B. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_26 = 3 + LastPlaneType; -- M\u0438-26. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_27 = 4 + LastPlaneType; -- Ka-27. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_50 = 5 + LastPlaneType; -- Ka-50. \u0420\u043e\u0441\u0441\u0438\u044f KA_52 = 6 + LastPlaneType; -- Ka-52. \u0420\u043e\u0441\u0441\u0438\u044f AH_64A = 7 + LastPlaneType; -- AH-64A Apache. NATO AH_64D = 8 + LastPlaneType; -- AH-64D Apache Longbow. NATO CH_47D = 9 + LastPlaneType; -- CH-47D Chinook. NATO CH_53E = 10 + LastPlaneType; -- CH-53E Super Stallion. NATO SH_60B = 11 + LastPlaneType; -- SH-60B Sea Hawk. NATO UH_60A = 12 + LastPlaneType; -- UH-60A Night Hawk. NATO AH_1W = 13 + LastPlaneType; -- AH-1W Super Cobra. NATO SH_3H = 14 + LastPlaneType; -- SH-3W Sea King. NATO Sea_Lynx= 15 + LastPlaneType; -- Sea Lynx Mk88. NATO AB_212 = 16 + LastPlaneType; -- UH-1H. NATO MI_28N = 17 + LastPlaneType; -- \u041c\u0438-28\u041d OH_58D = 18 + LastPlaneType; -- \u041a\u0430\u0439\u043e\u0432\u0430 NATO -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Air-to-Air Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u0432\u043e\u0437\u0434\u0443\u0445. -- 0 - \u043f\u0443\u0441\u0442\u043e empty R_550 = 1; -- R550 Magic 2 MICA_T = 2; -- MICA, IR MICA_R = 3; -- MICA, AR Super_530D = 4; -- Super 530D P_98 = 5; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-98 == P-98R (AA-3 \u201cAnab\u201d) P_4R = 6; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-4R (AA-5 'Ash') P_40R = 7; -- P-40R (AA-6 'Acrid') --P_23R = 8; -- P-23R (AA-7 'Apex') P_24R = 9; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24R (AA-7 'Apex') P_60 = 10; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-60 (AA-8 'Aphid')\u0431\u043b. \u0431\u043e\u044f P_33E = 11; -- P-33\u042d (AA-9 'Amos') \u0431\u043e\u043b.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27AE = 12; -- P-27A\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27P = 13; -- P-27P (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27PE = 14; -- P-27P\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27T = 15; -- P-27T (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27TE = 16; -- P-27T\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27EM = 17; -- P-27\u042dM (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_73 = 18; -- P-73 (AA-11 'Archer')\u0431\u043b. \u0431\u043e\u044f P_77 = 19; -- P-77 (PBB-AE) (AA-12)c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_37 = 20; -- P-37 AIM_7 = 21; -- AIM-7 'Sparrow' AIM_9 = 22; -- AIM-9 'Sidewinder' AIM_54 = 23; -- AIM-54 'Phoenix' AIM_120= 24; -- AIM-120 'AMRAAM' --P_23T = 25; -- P-23T (AA-7 'Apex') P_24T = 26; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24T (AA-7 'Apex') P_40T = 27; -- P-40T (AA-6 'Acrid') SeaSparrow = 28; -- Sea Sparrow -- Unguided rockets. \u041d\u0435\u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u043d\u0430\u0440\u044f\u0434\u044b. C_8CM = 30; -- C-8CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) C_5 = 31; -- C-5 C_8 = 32; -- C-8 C_13 = 33; -- C-13 C_24 = 34; -- C-24 C_25 = 35; -- C-25 HYDRA_70 = 36; -- HYDRA-70 Zuni_127 = 37; -- Zuni-127 Zuni_127CM = 38; -- Zuni-127CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) -- Air-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c. AGM_114K = 39; -- AGM-114 Hellfire Laser AGM_119= 40; -- Penguin, Norway X_22 = 41; -- X-22 Burya wing,anti-ship (AS-4'Kitchen') X_29TE = 42; -- X_29TE (AS-14 'Kedge' \u044d\u043a\u0441\u043f\u043e\u0440\u0442) X_23 = 43; -- X-23 Grom anti-radar(AS-7 'Kerry') X_28 = 44; -- X-28 anti-radar(AS-9 'Kyle') X_25ML = 45; -- X-25ML laser (AS-10 'Karen') X_58 = 46; -- X-58 anti-radar(AS-11 'Kilter') X_25MP = 47; -- X-25MP anti-radar(AS-12 'Kegler') AT_6 = 48; -- AT_6 (9M114) radio-command anti-tank, STURM X_29L = 49; -- X-29L laser (AS-14 'Kedge') X_55 = 50; -- X-55 wing (AS-15A 'Kent') X_65 = 51; -- X-65 wing (AS-15B 'Kent') X_15 = 52; -- X-15 \u0430nti-ship,ballistic(AS-16 'Kickback') X_31A = 53; -- X-31A \u0430nti-ship(AS-17 'Krypton') X_59M = 54; -- X-59M Ovod (AS-18 Kazoo) X_35 = 55; -- X-35 (AS-20 'Kayak') X_41 = 56; -- X-41 (unknown) \u0430nti-ship Vikhr = 57; -- 9M120 Vikhr laser (AT-12) {air-tank} Vikhr_M= 58; -- 9M120M Vikhr-M (AT-X-16)laser{air-tank} AGM_114= 59; -- AGM-114 Hellfire Radar AGM_45 = 60; -- AGM-45 'Shrike' anti-radar AGM_65K= 61; -- AGM-65K 'Maverick' AGM_84A= 62; -- AGM-84 'Harpoon' AGM_84E= 63; -- AGM-84E 'SLAM' AGM_86 = 64; -- AGM-86 'CALCM' wing AGM_88 = 65; -- AGM-88 'HARM' anti-radar Sea_Eagle = 66; -- Sea_Eagle SAV611 = 67; -- 4K60 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u0441\u0430 \"\u0428\u0442\u043e\u0440\u043c\" \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 AGM_122= 68; -- AGM-122 'Sidearm' anti-radar AGM_123= 69; -- AGM-123 'Skipper' laser AGM_65E= 70; -- AGM-65E AGM_130= 71; -- AGM-130 wing ALARM = 72; -- ALARM X_23L = 73; -- X-23L Grom laser (AS-7 'Kerry') X_25MR = 74; -- X-25MR TV (AS-12 'Kegler') X_29T = 75; -- X-29T TV (AS-14 'Kedge') X_31P = 76; -- X-31\u041f \u0430nti-radar(AS-17 'Krypton') AGM_65D= 77; -- AGM-65D 'Maverick' Kormoran=78; -- Kormoran AS 34 -- Surface-to-Air Missiles and others. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u0432\u043e\u0437\u0434\u0443\u0445 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435. SM_2 = 79; -- SM-2 \u0434\u043b\u044f TICONDEROGA SA5B55 = 80; -- 5B55 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA48H6E2=81; -- 48\u041d6\u04152 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA9M82 = 82; -- 9\u041c82 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA9M83 = 83; -- 9\u041c83 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA3M9M = 84; -- 3\u041c9\u041c \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2\u041a12 \u041a\u0443\u0431 SA9M33 = 85; -- 9\u041c33 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a33 \u041e\u0441\u0430 SA9M31 = 86; -- 9\u041c31 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a31 \u0421\u0442\u0440\u0435\u043b\u0430-1 SA9M38M1=87; -- 9\u041c38\u041c1 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a37 \u0411\u0443\u043a SA9M333= 88; -- 9\u041c333 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a35 \u0421\u0442\u0440\u0435\u043b\u0430-10 SA9M330= 89; -- 9\u041c330 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u0440 \u041c1 SA9M311= 90; -- 9\u041c311 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2C6\u041c \u0422\u0443\u043d\u0433\u0443\u0441\u043a\u0430 Igla_1E= 91; -- Igla-1E \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0417\u0420\u041a \u0418\u0433\u043b\u0430 MIM_104= 92; -- MIM-104 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Patriot FIM_92C= 93; -- FIM_92C STINGER \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Avenger \u0438 \u0440\u0443\u0447\u043d\u0430\u044f. -------------------------------------------------------------------------------- GRAD_9M22U = 94; -- GRAD-RAKETA \u0420\u0421\u0417\u041e \u0413\u0440\u0430\u0434 \u0440\u0430\u043a\u0435\u0442\u0430 URAGAN_9M27F = 179; -- URAGAN-RAKETA \u0420\u0421\u0417\u041e \u0423\u0440\u0430\u0433\u0430\u043d SMERCH_9M55K = 95; -- SMERCH-RAKETA \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 SMERCH_9M55F = 180; -- \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 \u041e\u0424 (HE Rocket) SA5B27 = 97; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0417-\u0412 5B27 \u0434\u043b\u044f \"\u0413\u0440\u043e\u0437\u043d\u043e\u0433\u043e\" HAWK_RAKETA = 98; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0434\u043b\u044f Hawk ROLAND_R = 99; -- \u0420\u0430\u043a\u0435\u0442\u0430 ROLAND SM_1 = 100; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-66B SM_2ER = 101; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-156A SM_6 = 102; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-174 AIM_120C = 106; -------------------------------------------------------------------------------- -- Surface-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c P_35 = 118; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0440\u043e\u0433\u0440\u0435\u0441\u0441-\u041c P_500 = 119; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0411\u0430\u0437\u0430\u043b\u044c\u0442 P_700 = 120; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0440\u0430\u043d\u0438\u0442 P_15U = 121; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u0435\u0440\u043c\u0438\u0442 P_120 = 122; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0430\u043b\u0430\u0445\u0438\u0442 R_85 = 123; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0435\u0442\u0435\u043b\u044c R_85U = 124; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0420\u0430\u0441\u0442\u0440\u0443\u0431 BGM_109B = 125; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u043c\u0430\u0433\u0430\u0432\u043a AGM_84S = 126; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0430\u0440\u043f\u0443\u043d MALUTKA = 127; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041c\u0430\u043b\u044e\u0442\u043a\u0430 \u0411\u041c\u0414-1 \u0438 \u0411\u041c\u041f-1 KONKURS = 128; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041a\u043e\u043d\u043a\u0443\u0440\u0441 \u0411\u041c\u041f-2 P_9M117 = 129; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u0411\u041c\u041f-3 TOW = 130; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u041c-2 M26 = 131; -- \u041d\u0443\u0440\u0441 \u043a MLRS AGM_154 = 132; -- AGM-154 JSOW S_25L = 133; -- S-25L SCUD_RAKETA = 96; -- -------------------------------------------------------------------------------- wsType_Shell_SPPU = 134; -- \u0441\u043d\u0430\u0440\u044f\u0434 \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439. 20 \u043c\u043c -------------------------------------------------------------------------------- -- Added missiles --Air-to-Air AIM_9P = 135; -- AIM-9P 'Sidewinder' rear_aspect IR missile AIM_9X = 136; -- AIM-9X 'Sidewinder' perspective all aspect IR/UV missile MIM_72G = 137; -- M48 Chaparral missile, sidewinder-like AGM_65H = 138; -- new mavericks AGM_65G = 139; TGM_65G = 140; -- training TGM_65D = 141; -- training CATM_65K = 142; -- training -- Air-to-air CATM_9 = 143; -- -- wsType \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u0433\u0438\u0434\u0440 HYDRA_70_MK1 = 144; HYDRA_70_MK5 = 145; HYDRA_70_MK61 = 146; HYDRA_70_M151 = 147; HYDRA_70_M156 = 148; HYDRA_70_WTU1B = 149; HYDRA_70_M274 = 150; HYDRA_70_M257 = 151; HYDRA_70_M278 = 152; P_9M133 = 153; ATGM_Kornet = P_9M133; -- 9M133 --------------------- TGM_65H = 154; --------------------- C_8OFP2 = 155; --------------------- REFLEX = 156; -- ATGM 9M119 Reflex T-80UD SVIR = 157; -- ATGM 9M119 Svir T-72B --------------------- C_8OM = 158; --------------------- HVAR = 159; TOW2 = 160; -- ATGM C_8CM_GN = 181; C_8CM_RD = 182; C_8CM_WH = 183; C_8CM_BU = 184; C_8CM_YE = 185; C_8CM_VT = 186; M26HE = 187; -- HE heavy rocket for MLRS -- Bombs. \u0411\u043e\u043c\u0431\u044b. Bomb_Other = 0; -- \u0412\u0441\u0435-\u0440\u0430\u0432\u043d\u043e-\u043a\u0430\u043a\u0430\u044f \u0431\u043e\u043c\u0431\u0430 (\u0442\u0438\u043f \u0432 \u043a\u043e\u0434\u0435 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f) BetAB_150DS = 1; -- BetAB-150DS, BetAB_250 = 2; -- BetAB-250, BetAB_500 = 3; -- BetAB-500, BetAB_500ShP= 4; -- BetAB-500ShP FAB_100 = 5; -- FAB-100, FAB_250 = 6; -- FAB-250, FAB_500 = 7; -- FAB-500 FAB_1000 = 8; -- FAB-1000 FAB_1500 = 9; -- FAB-1500 FAB_5000 = 10; -- FAB-5000 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 KAB_500 = 11; -- KAB-500 KAB_500Kr = 12; -- KAB-500Kr, KAB_500KrOD = 13; -- KAB-500Kr-OD, KAB_1500Kr = 14; -- KAB-1500Kr ODAB_500PM = 16; -- ODAB-500 PM ODAB_250 = 17; -- ODAB-250 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 RBK_250 = 18; -- RBK-250, RBK_250S = 19; -- RBK-250S, RBK_500AO = 20; -- RBK-500AO, RBK_500SOAB = 21; -- RBK-500SOAB Puma = 22; -- Puma BL_755 = 23; -- BL_755 GluB = 24; -- Glubinaya Bomba NB_1 = 25; -- Nuclear Bomb - 1 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 NB_2 = 26; -- Nuclear Bomb - 2 Torpedo = 27; -- Torpedo XZAB_250 = 28; -- XZAB-250, XZAB_500 = 29; -- XZAB-500 Mk_81 = 30; -- Mk-81 Mk_82 = 31; -- Mk-82 Mk_83 = 32; -- Mk-83 Mk_84 = 33; -- Mk-84 M_117 = 34; -- M-117 CBU_97 = 35; -- CBU-97 GBU_10 = 36; -- GBU-10 GBU_11 = 37; -- GBU-11 GBU_12 = 38; -- GBU-12 GBU_16 = 39; -- GBU-16 GBU_17 = 40; -- GBU-40 GBU_24 = 41; -- GBU-41 GBU_15 = 42; -- GBU-15 GBU_27 = 43; -- GBU-27 GBU_22 = 44; -- GBU-22 ROCKEYE = 45; -- \u0411\u043e\u043c\u0431\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 AGM_62 = 47; -- AGM-62 Walley GBU_28 = 48; -- GBU-28 GBU_29 = 49; -- GBU-29 GBU_30 = 50; -- GBU-30 JDAM FAB_100P = 53; -- FAB-100\u041f FAB_250P = 54; -- FAB-250\u041f FAB_500P = 55; -- FAB-500\u041f FAB_500_3 = 56; -- FAB-500 - 3 MW_1 = 57; -- MW-1 dispenser PB_250 = 58; -- PB-250 c \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c Z_BAK_3 = 59; -- \u0437\u0430\u0436\u0438\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0431\u0430\u043a - 3 \u0442\u0438\u043f Mk_50_Torpedo = 61;-- \u0442\u043e\u0440\u043f\u0435\u0434\u0430 Mk-60 Durandal = 62; -- BLU_107 Durandal SAB_100 = 63; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 LUU_2B = 64; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b SUU_25 AO_2_5RT = 65; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 PTAB_2_5KO = 66; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 -- 67 \u0438 68 - PTAB_2_5RT_void \u0438 AO_2_5RT_void BDU_33 = 69; BDU_50LD = 70; BDU_50HD = 71; BDU_50LGB = 72; BDU_56LD = 73; BDU_56LGB = 74; MK_82AIR = 75; LUU_19 = 76; -- IR-\u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u043e\u043c\u0431\u0430 CBU_87 = 77; CBU_89 = 78; MK_82SNAKEYE = 79; LUU_2AB = 80; LUU_2BB = 81; LUU_1 = 82; LUU_5 = 83; LUU_6 = 84; GBU_31 = 85; GBU_38 = 86; CBU_105 = 87; CBU_103 = 88; CBU_104 = 89; AN_M64 = 90; RBK_500U = 91; GBU_31_V_3B = 92; CBU_52B = 93; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u044b \u0438 \u0431\u0430\u043a\u0438. \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438. UB_13 = 1; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 UB_32_1 = 2; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MBD_3 = 3; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 \u0431\u043e\u043c\u0431\u044b LAU_88 = 4; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 MAVERICK PTB_3000 = 5; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-24 \u043d\u0430 3000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 B_20 = 6; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 S_25_C = 7; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 c \u0440\u0430\u043a\u0435\u0442\u043e\u0439 LAU_10 = 8; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 LAU_61 = 9; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 F_15_PTB =10; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15C 1600 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N1 =11; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 1120 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N2 =12; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_18_PTB =13; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_23_PTB =14; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-23 640 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_25_PTB =15; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-25 4370 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1150 =16; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1500 =17; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 1200 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 SPPU_22 =18; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u041f\u041f\u0423-22 KINGAL =19; -- \u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u0443-39 UPK_23_25 =20; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0423\u041f\u041a-23-25 MBD =21; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 6-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 MBD_4 =22; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 4-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 TU_22_MBD =23; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 \u0434\u043b\u044f \u0422\u0443-22\u041c3 S_25_PU =24; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 \u0431\u0435\u0437 \u0440\u0430\u043a\u0435\u0442\u044b ALQ_131 =25; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0428\u0410) LANTIRN =26; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b.F-16 LANTIRN_F18 =27; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PAVETACK =28; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-111 SORBCIJA =29; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0443-27) SPS_141 =30; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0420\u043e\u0441\u0441\u0438\u044f) PTB_B_1B =31; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 B-1B \u043d\u0430 14915 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_3_LAU_10=32; -- MDB-3 & 3 LAU_10 MBD_3_LAU_61=33; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MDB-3 & 3 LAU_61 AT_9M120 =34; -- Vikhr (AT-12) {air-tank} AT_9M120M =35; -- Vikhr-M (AT-X-16) {air-tank} F_5_PTB =36; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 1000 \u043b \u0442\u043e\u043f\u043b\u0438\u0432\u0430 Sky_Shadow =37; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f, Tornado PTB_F2_1500 =38; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Tornado \u043d\u0430 1500 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 M2000_PTB =39; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage \u043d\u0430 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_A10_2 =40; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f A-10 F4_PTB_WING =41; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043a\u0440\u044b\u043b\u044c\u0435\u0432\u043e\u0439 F4_PTB_FUZ =42; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0444\u044e\u0437\u0435\u043b\u044f\u0436\u043d\u044b\u0439 AGM_114_Pilon = 43; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 4\u0445 \u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 AT_6_9M114 =44; -- SHTURM \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0442\u0438\u043f\u0430 Vikhr-M F4_PILON =45; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f F4 MER_L_P_60 = 46; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043b\u0435\u0432\u044b\u0439 MER_R_P_60 = 47; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043f\u0440\u0430\u0432\u044b\u0439 MER_TOW = 48; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 4 TOW MER_2_F_18 = 49; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 2, F-18 MER_9_B52 = 50; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 9, B-52 MER_12_B52 = 51; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 12, B-52 MBD_6_B52 = 52; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 6, B-52 PTB_2000 = 53; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 2000 \u043b \u0434\u043b\u044f \u0421\u0443-34 PTB_800L_Wing = 54; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 800 \u043b \u0434\u043b\u044f Mig-23 PTB_S_3 = 55; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u0434\u043b\u044f S-3 PTB_367GAL = 56; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 367 gal \u0434\u043b\u044f F-14 SKY_SHADOW = 57; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f BOZ_100 = 58; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 c \u043b\u043e\u0432\u0443\u0448\u043a\u0430\u043c\u0438 LANTIRN_F14 = 59; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-14 FLIR_POD = 60; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PTB_1150_29 = 61; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 1150 l \u0434\u043b\u044f MiG-29 TANGAZH = 62; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 EPHIR = 63; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 SHPIL = 64; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 FANTASM = 65; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. SmokeGenerator_red = 66;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). SmokeGeneratorAIM_red = 67;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). AIM-9S B_20CM = 68; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 \u0430\u043d\u0430\u043b\u043e\u0433 B-20 Whiskey_Pete = 69; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 2.75 SUU_25 = 70; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0430\u043b\u043a\u0430) \u0441 \u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0431\u043e\u043c\u0431\u0430\u043c\u0438 --71,72 is free, use if you want (duplicated F-18 fuel tanks removed) AN_AAS_38_FLIR = 74; -- AN/AAS-38 FLIR MBD_2_67U = 76; -- \u041c\u0411\u0414-2-67\u0423 S_25L_AND_PU = 77; -- \u0421-25\u041b + \u041f\u0423 (\u0431\u043e\u043b\u0432\u0430\u043d\u043a\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430) AN_ASQ_173_LST_CAM = 78; -- AN/ASQ-173 LST/CAM AKU_58 = 80; -- AKU_58 KMGU_2 = 81; -- KMGU-2 SmokeGenerator_green = 82; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). SmokeGenerator_blue = 83; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). SmokeGenerator_white = 84; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). SmokeGenerator_yellow = 85; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). SmokeGenerator_orange = 86; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). SmokeGeneratorAIM_green = 87; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). AIM-9S SmokeGeneratorAIM_blue = 88; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). AIM-9S SmokeGeneratorAIM_white = 89; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). AIM-9S SmokeGeneratorAIM_yellow = 90; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). AIM-9S SmokeGeneratorAIM_orange = 91; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). AIM-9S APU_68 = 92; -- APU-68 APU_73 = 93; -- APU-73 MPS_410 = 94; -- MPS_410 \u041c\u0430\u043b\u043e\u0433\u0430\u0431\u0430\u0440\u0438\u0442\u043d\u0430\u044f \u043f\u043e\u043c\u0435\u0445\u043e\u0432\u0430\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u044f Kopyo = 95; -- \u0420\u0430\u0434\u0430\u0440 \"\u041a\u043e\u043f\u044c\u0435\" \u0432 \u043f\u043e\u0434\u0432\u0435\u0441\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435 APU_170 = 96; -- \u0410\u041f\u0423-170 LAU_117 = 97; -- LAU_117 B_8V20A = 98; -- B_8V20A PTB_KA_50 = 99; -- PTB KA-50 Shturm_9K114 = 100; AN_AAQ_28_LITENING = 101; -- AN/AAQ-28 LITENING TER_LS = 102; -- Triple ejector rack TK600 = 103; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a TRAVEL_POD = 104; -- \u0413\u0438\u0434\u0440\u044b -- \u041d\u0430 LAU_68 LAU_68_HYDRA_70_MK1 = 105; LAU_68_HYDRA_70_MK5 = 106; LAU_68_HYDRA_70_MK61 = 107; LAU_68_HYDRA_70_M151 = 108; LAU_68_HYDRA_70_M156 = 109; LAU_68_HYDRA_70_WTU1B = 110; LAU_68_HYDRA_70_M274 = 111; LAU_68_HYDRA_70_M257 = 112; LAU_68_HYDRA_70_M278 = 113; -- \u041d\u0430 LAU_131 LAU_131_HYDRA_70_MK1 = 114; LAU_131_HYDRA_70_MK5 = 115; LAU_131_HYDRA_70_MK61 = 116; LAU_131_HYDRA_70_M151 = 117; LAU_131_HYDRA_70_M156 = 118; LAU_131_HYDRA_70_WTU1B = 119; LAU_131_HYDRA_70_M274 = 120; LAU_131_HYDRA_70_M257 = 121; LAU_131_HYDRA_70_M278 = 122; -- 3* SUU_25 (\u043d\u0430 TER) SUU_25x3 = 123; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_68 (\u043d\u0430 TER) LAU_68x3_HYDRA_70_MK1 = 124; LAU_68x3_HYDRA_70_MK5 = 125; LAU_68x3_HYDRA_70_MK61 = 126; LAU_68x3_HYDRA_70_M151 = 127; LAU_68x3_HYDRA_70_M156 = 128; LAU_68x3_HYDRA_70_WTU1B = 129; LAU_68x3_HYDRA_70_M274 = 130; LAU_68x3_HYDRA_70_M257 = 131; LAU_68x3_HYDRA_70_M278 = 132; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_131 (\u043d\u0430 TER) LAU_131x3_HYDRA_70_MK1 = 133; LAU_131x3_HYDRA_70_MK5 = 134; LAU_131x3_HYDRA_70_MK61 = 135; LAU_131x3_HYDRA_70_M151 = 136; LAU_131x3_HYDRA_70_M156 = 137; LAU_131x3_HYDRA_70_WTU1B= 138; LAU_131x3_HYDRA_70_M274 = 139; LAU_131x3_HYDRA_70_M257 = 140; LAU_131x3_HYDRA_70_M278 = 141; ALQ_184 = 142; LAU_68 = 143; LAU_131 = 144; OH_58_BRAUNING = 145; LAU_131WP = 146; M279_AGM114 = 147; B_8V20A_WP = 148; B_8V20A_OFP2 = 149; B_8V20A_OM = 150; B_8M1_OFP2 = 151; DROP_TANK_75GAL = 152; M134_L = 160; M134_R = 161; XM_158_HYDRA_70_MK1 = 162; XM_158_HYDRA_70_MK5 = 163; XM_158_HYDRA_70_M151 = 164; XM_158_HYDRA_70_M156 = 165; XM_158_HYDRA_70_M274 = 166; XM_158_HYDRA_70_M257 = 167; M261_HYDRA_70_M151 = 168; M261_HYDRA_70_M156 = 169; GUV_YakB_GSHP = 170; GUV_VOG = 171; HWAR_SMOKE_GENERATOR = 172; M134_SIDE_L = 174; M134_SIDE_R = 175; M60_SIDE_L = 176; M60_SIDE_R = 177; BRU_42_HS = 178; KORD_12_7 = 183; PKT_7_62 = 184; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 ----------------------------------------------------------------------/ Kuznecow = 1; -- \u0410\u0432\u0438\u0430\u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0440\u0435\u0439\u0441\u0435\u0440 \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432 VINSON = 2; -- \u0410\u0432\u0438\u0430\u043d\u043e\u0441\u0435\u0446 VINSON MOSCOW = 3; -- \u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u041c\u043e\u0441\u043a\u0432\u0430\" GROZNY = 4; -- P.\u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u0413\u0440\u043e\u0437\u043d\u044b\u0439\" wsType_GenericCivShip = 5; --ELNYA = 5; -- \u0422\u0430\u043d\u043a\u0435\u0440 \u0415\u043b\u044c\u043d\u044f wsType_GenericLightArmoredShip = 6; --KATER = 6; -- \u0422\u0443\u0440\u0435\u0446\u043a\u0438\u0439 \u043a\u0430\u0442\u0435\u0440 --AKVAMAREN = 7; -- \u0411\u0422\u0429 \u0410\u043a\u0432\u0430\u043c\u0430\u0440\u0438\u043d Natya (NAT\u041e-\u043a\u043e\u0434) AZOV = 8; -- \u0411\u041f\u041a \u0410\u0437\u043e\u0432 Kara BOBRUISK = 9; -- \u0411\u0414\u041a \u0411\u043e\u0431\u0440\u0443\u0439\u0441\u043a Ropucha BORA = 10; -- \u0420\u041a\u0412\u041f \u0411\u043e\u0440\u0430 Sivuch ALBATROS = 11; -- \u0421\u041a\u0420 \u0410\u043b\u044c\u0431\u0430\u0442\u0440\u043e\u0441 Grisha V AMETYST = 12; -- \u0421\u041a\u0420 \u0410\u043c\u0435\u0442\u0438\u0441\u0442 Grisha II OREL = 13; -- \u0411\u0421\u041a\u0420 \u041e\u0440\u0435\u043b Krivak III REZKY = 14; -- \u0411\u0421\u041a\u0420 \u0420\u0435\u0437\u043a\u0438\u0439 Krivak II MOLNIYA = 15; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041c\u043e\u043b\u043d\u0438\u044f Tarantul III --MURENA = 16; -- \u0421\u0412\u041f \u041c\u0443\u0440\u0435\u043d\u0430 Tsaplya PERRY = 17; -- \u0424\u0440\u0435\u0433\u0430\u0442 Oliver Perry OSA = 18; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041e\u0441\u0430 Osa SKORY = 19; -- \u0411\u041f\u041a \u0421\u043a\u043e\u0440\u044b\u0439 Kashin SPRUANCE = 20; -- \u042d\u0441\u043c\u0438\u043d\u0435\u0446 Spruance TICONDEROGA = 21; -- \u0420. \u043a\u0440\u0435\u0439\u0441\u0435\u0440 Ticonderoga --TK = 22; -- \u0422\u043e\u0440\u043f\u0435\u0434\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --wsType_GenericSubmarine = 23; -- Temporary KILO = 23; -- \u041f\u041b \u0412\u0430\u0440\u0448\u0430\u0432\u044f\u043d\u043a\u0430 Kilo TANGO = 24; -- \u041f\u041b \u0421\u043e\u043c Tango VETER = 25; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u0412\u0435\u0442\u0435\u0440 Nanuchka III --ZWEZDNY = 26; -- \u041f\u0440\u043e\u0433\u0443\u043b\u043e\u0447\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --YASTREBOW = 27; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c NEUSTRASH = 28; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c --BARGE_WITH_SAND = 29; --BARGE_WITHOUT_SAND = 30; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastShipType !!! LastShipType = NEUSTRASH; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ wsType_Test4 = 200; -- \u0442\u043e\u0447\u043a\u0430 \u043d\u0430 \u0437\u0435\u043c\u043b\u0435 ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 ----------------------------------------------------------------------/ -- \u041e\u0411\u042a\u0415\u041a\u0422\u042b \u041f\u0412\u041e ----------------------------------------------------------------------/ EWR_1L13 = 1; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 1L13 EWR_55G6 = 2; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 55\u04166 KP_54K6 = 3; -- \u041a\u041f 54K6 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 V_40B6M = 4; -- track radar V_40B6MD = 5; -- search radar RLS_5H63C = 6; -- track radar RLO_64H6E = 7; -- search radar PU_5P85C = 8; -- launcher PU_5P85D = 9; -- launcher RLS_9C32_1 = 10; -- track radar RLO_9C15MT = 11; -- search radar RLO_9C19M2 = 12; -- search radar S300V_9A82 = 13; -- launcher S300V_9A83 = 14; -- launcher S300V_9A84 = 15; -- launcher S300V_9A85 = 16; -- launcher BUK_9C470M1 = 17; -- \u041a\u041f BUK_9C18M1 = 18; -- search radar BUK_PU = 19; -- launcher BUK_LL = 20; -- loader/launcher KUB_1C91 = 21; -- search and track radar (str) KUB_2P25 = 22; -- launcher OSA_9A33BM3 = 23; -- search radar OSA_9T217 = 24; -- loader Strela_9K31 = 25; -- launcher Strela_9K35 = 26; -- launcher (ln) Radar_Dog_Ear = 27; -- search radar Tor_ = 28; -- str, ln Tunguska_ = 29; -- str, ln Shilka_ = 30; -- str, ln Roland_ = 31; -- str, ln Roland_Search_Radar = 32; -- search radar Avenger_ = 33; -- ln Patr_AN_MPQ_53_P = 34; -- str Patr_KP = 36; -- \u041a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u0434\u043b\u044f \"\u041f\u0430\u0442\u0440\u0438\u043e\u0442\u0430\" Patriot_ = 37; -- ln Gepard_ = 38; -- str, ln Hawk_Search_Radar = 39; -- search radar Hawk_Track_Radar = 40; -- track radar Hawk_ = 41; -- ln Hawk_CWAR_Radar = 42; Hawk_CV = 43; --Stinger_ = 44; -- ln --KP_S300V_9C457 = 45; -- \u041f\u0443\u043d\u043a\u0442 \u0431\u043e\u0435\u0432\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0421300 \u0412 wsTypeVulkan = 46; -- ln wsType_GenericAAA = 47; -- Temporary ZU_23 = 47; -- \u0433\u043e\u043b\u0430\u044f \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 ZU_23_OKOP = 48; -- \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u0441 \u043e\u0431\u0432\u0430\u043b\u043e\u0432\u043a\u043e\u0439 ZU_23_URAL = 49; -- \u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u043d\u0430 \u0423\u0440\u0430\u043b\u0435 wsType_Generic_IR_SAM = 50; -- Temporary M48_Chaparral = 50; -- \u0430\u043d\u0430\u043b\u043e\u0433 \u0421\u0442\u0440\u0435\u043b\u0430-1 M6Linebacker = 51; -- M6 Linebacker HumanTypeStart = 52; -- \u0441\u0442\u0430\u0440\u0442 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 IglaRUS_1 = 52; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 IglaRUS_2 = 53; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 IglaGRG_1 = 54; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b IglaGRG_2 = 55; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 Stinger_manpad = 56; -- \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043d\u0433\u0435\u0440\u0438\u0441\u0442 --StingerUSA_1 = 56; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 StingerUSA_2 = 57; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 \u043f\u0430\u0440\u0430 --StingerIZR_1 = 58; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 StingerIZR_2 = 59; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 --StingerGRG_1 = 60; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b --StingerGRG_2 = 61; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 IglaINS_1 = 62; HumanTypeEnd = 62; -- \u043a\u043e\u043d\u0435\u0446 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 ZU_23_insurgent = 70; -- ZU-23 insurgent ZU_23_insurgent_okop = 71; -- ZU-23 insurgent ZU_23_insurgent_ural = 72; -- ZU-23 insurgent SA3_TR = 73; -- S-125 SA3_LN = 74; -- S-125 SA3_SR = 75; -- S-125 -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastSAMType !!! LastSAMType = SA2_SR; ----------------------------------------------------------------------/ -- \u041d\u0430\u0437\u0435\u043c\u043d\u0430\u044f \u0422\u0415\u0425\u041d\u0418\u041a\u0410 ----------------------------------------------------------------------/ wsType_GenericSAU = 1; -- Temporary --wsTypeSAUmsta = 1; --wsTypeSAUakacia = 2; --wsTypeSAU_2C9 = 3; wsTypeTMZ5 = 4; wsTypeTZ10 = 5; wsType_GenericVehicle = 6; --wsTypeUralApa = 6; wsType_GenericIFV = 7; --Temporary --wsTypeBMD1 = 7; --wsTypeBMP1 = 8; --wsTypeBMP2 = 9; wsType_GenericAPC = 10; -- Temporary --wsTypeBRDM2 = 10; --wsTypeBTR70 = 11; --wsTypeGrad = 12; --wsTypeM818 = 13; -- \u0422\u044f\u0433\u0430\u0447 M-818 wsType_Hummer = 14; -- Temporary --wsTypeLAV25 = 15; wsType_GenericTank = 16; --wsTypeLeopard2 = 16; --wsTypeAAV7 = 17; --wsTypeM109 = 18; --wsTypeM113 = 19; --wsTypeM113G = 20; --wsTypeAbrams = 21; --wsTypeMarder = 22; --wsTypeBeregSAU = 23; --wsTypeBeregRLS = 24; wsTypeMAZelektro = 25; wsTypeMAZkaraul = 26; wsTypeMAZobsch = 27; wsTypeMAZstol = 28; --wsTypeSmerch = 29; --wsTypeATZ60 = 30; --wsTypeRLS_PRW11 = 31; wsTypeRLS_RSP7 = 32; --wsTypeReis = 33; -- \u0420\u0430\u0437\u0432\u0435\u0434 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441 \u0420\u0435\u0439\u0441 wsTypeRLS37 = 34; -- \u0420\u041b\u0421-37 --wsTypeT80 = 35; --wsTypeTiagach = 36; -- \u0422\u044f\u0433\u0430\u0447 \u0434\u043b\u044f \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432\u0430 --wsTypeTPZ = 37; wsTypeUAZ469 = 38; --wsTypeUragan = 39; wsTypeUral375 = 40; wsTypeUral375PBU = 41; --wsTypeZapros = 43; wsTypeZIL135 = 44; wsTypeElektrovoz = 45; -- \u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0432\u043e\u0437 wsTypeBus = 46; -- \u0410\u0432\u0442\u043e\u0431\u0443\u0441 wsTypeVAZ = 47; -- \u041b\u0435\u0433\u043a\u043e\u0432\u043e\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c wsTypeTeplowoz = 48; -- \u0422\u0435\u043f\u043b\u043e\u0432\u043e\u0437 wsTypeTrolebus = 49; -- \u0422\u0440\u043e\u043b\u043b\u0435\u0439\u0431\u0443\u0441 wsTypeWCisternaBLUE = 50; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWCisternaYELLOW = 98; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWGruz = 51; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWGruzOtkr = 52; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWagonPlatforma= 53; -- \u0412\u0430\u0433\u043e\u043d-\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 wsTypeWagonPass = 54; -- \u0412\u0430\u0433\u043e\u043d \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 --wsTypeRadioSt = 55; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a wsTypeKAMAZ_Fire = 56; -- \u041f\u043e\u0436\u0430\u0440\u043d\u044b\u0439 \u041a\u0430\u043c\u0410\u0417 wsTypeKAMAZ_Tent = 57; -- \u041a\u0430\u043c\u0410\u0417 \u0441 \u0442\u0435\u043d\u0442\u043e\u043c wsTypeLAZ_695 = 58; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a --wsType2C1 = 59; -- C\u0410\u0423 --wsTypeBMP3 = 60; -- \u0411\u041c\u041f-3 --wsTypeM2Bradley = 61; -- \u0411\u041c\u041f --wsTypeMCV80 = 62; -- \u0411\u041c\u041f wsType_GenericMLRS = 63; -- \u0420\u0421\u0417\u041e --wsTypeM_60 = 64; -- \u0422\u0430\u043d\u043a \u041c-60 --wsTypeLeo1 = 65; -- \u0422\u0430\u043d\u043a Leo1 --wsTypeBTR_D = 66; -- \u0411\u0422\u0420-\u0414 wsTypeGAZ_66 = 67; -- GAZ-66 wsTypeGAZ_3307 = 68; -- GAZ-3307 wsTypeGAZ_3308 = 69; -- GAZ-3308 wsTypeMAZ_6303 = 70; -- MAZ-6303 wsTypeZIL_4334 = 71; -- ZIL-4334 --wsTypePredator_GCS = 72; --\u041a\u041f \u0434\u043b\u044f UAV Predator --wsTypePredator_TrojanSpirit = 73;--\u0421\u0442\u0430\u043d\u0446\u0438\u044f \u0441\u0432\u044f\u0437\u0438 \u0434\u043b\u044f UAV Predator --wsTypeZIL_SKP_11 = 74; --\u0421\u041a\u041f-11 \u041f\u0435\u0440\u0435\u0434\u0432\u0438\u0436\u043d\u043e\u0439 \u041a\u041f \u0434\u043b\u044f \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u043f\u043b\u043e\u0449\u0430\u0434\u043e\u043a \u0438 \u043c\u0430\u043b\u044b\u0445 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 wsTypeURAL_4320T = 75; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320 \u0441 \u0442\u0435\u043d\u0442\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043a\u0443\u0437\u043e\u0432\u043e\u043c --wsTypeURAL_4320_31 = 76; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320-31 \u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0432\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u0431\u0438\u043d\u043e\u0439 --wsTypeURAL_ATsP_6 = 77; --\u041f\u043e\u0436\u0430\u0440\u043d\u0430\u044f \u043c\u0430\u0448\u0438\u043d\u0430 \u0423\u0440\u0430\u043b \u0410\u0426\u041f-6 --wsTypeZIL_APA_80 = 78; --\u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043d\u044b\u0439 \u043f\u0443\u0441\u043a\u043e\u0432\u043e\u0439 \u0430\u0433\u0440\u0435\u0433\u0430\u0442 \u0417\u0438\u041b \u0410\u041f\u0410-80 wsTypeZIL_131_KUNG = 79; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0417\u0438\u041b-131 \u041a\u0423\u041d\u0413 wsType_Stryker = 80; --wsTypeM1126_Stryker_ICV = 80; --\u0411\u0422\u0420 M1126 Stryker ICV --wsTypeM1128_Stryker_MGS = 81; --\u0411\u0422\u0420 M1128 Stryker MGS --wsTypeM1134_Stryker_ATGM = 82; --\u0411\u0422\u0420 M1134 Stryker ATGM --wsTypeMTLB = 83; --wsTypeBTR80 = 84; --wsTypeT72 = 85; --wsTypeT55 = 86; --wsTypeM1043 = 87; -- \u0445\u0430\u043c\u043c\u0435\u0440 + M2 --wsTypeM1045 = 88; -- \u0445\u0430\u043c\u043c\u0435\u0440 + TOW --wsTypeLeClerc = 89; wsType_GenericInfantry = 90; --wsTypeRPG = 90; --wsTypeAutogun = 91; --wsTypeHEMTT_M978 = 92; --wsTypeSoldier_AK = 93; --wsTypeSoldier_RPG = 94; --wsTypeBOMAN = 95; wsType_GenericFort = 96; --wsTypeSandbox = 96; --wsTypeBunker = 97; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastTankType --LastTankType = wsTypeBunker;-- \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e Tank-\u0430 wsTypeSteamLocomotive = 99; ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ --************************************************* -- \u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0434\u043b\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0431\u043b\u0443\u0447\u0435\u043d\u0438\u0438 !!! \u043d\u0435 \u0432\u0445\u043e\u0434\u044f\u0442 \u0432 Level 1,2,3,4--* wsRadarAir = 101;-- wsRadarLongRange = 102;-- wsRadarMidRange = 103;-- wsRadarShrtRange = 104;-- wsRadarEWS = 105;-- wsRadarEngagement = 106;-- wsTypeLauncher = 107; wsTypeComandPost = 108; wsRadarOptical = 109; wsRadarAWACS = 110; wsRadarActiveHoming = 111; -- \u041f\u0443\u0448\u043a\u0438 Gun__ = 241; -- \u043f\u0435\u0440\u0435\u0434\u043d\u044f\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 Gun__1= 242; -- \u043a\u043e\u0440\u043c\u043e\u0432\u0430\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438 \u0441 \u043f\u043e\u0434\u0432\u0435\u0441\u043a\u0430\u043c\u0438 -- wsType_Weapon, wsType_Missile(Bomb), wsType_Container MBD_FAB_100 = 1; -- MDB & 6 FAB-100 MBD_FAB_250 = 2; -- MDB & 6 FAB-250 MBD_FAB_500 = 3; -- MDB & 6 FAB-500 MBD_BETAB_250 = 4; -- MDB & 6 BETAB-250 MBD_ODAB = 5; -- MDB & 6 ODAB MBD_PB_250 = 6; -- MDB & 6 PB-250 MBD_RBK_250 = 7; -- MDB & 6 RBK-250 MBD_RBK_500AO = 8; -- MDB & 6 RBK-500AO MBD_RBK_500SOAB = 9; -- MDB & 6 RBK-500SOAB MBD_ZAB = 10; -- MDB & 6 ZAB MBD_CBU_97 = 11; -- MDB & 6 CBU-97 MBD_M_117 = 12; -- MDB & 6 M-117AB MBD_MK_81 = 13; -- MDB & 6 MK-81 MBD_MK_82 = 14; -- MDB & 6 MK-84 MBD_Rockeye = 15; -- MDB & 6 Rockeye MBD_3_FAB_100 = 16; -- MDB-3 & 3 FAB-100 MBD_3_FAB_250 = 17; -- MDB-3 & 3 FAB-250 MBD_3_FAB_500 = 18; -- MDB-3 & 3 FAB-500 MBD_3_BETAB_250 = 19; -- MDB-3 & 3 BETAB-250 MBD_3_ODAB = 20; -- MDB-3 & 3 ODAB MBD_3_PB_250 = 21; -- MDB-3 & 3 PB-250 MBD_3_RBK_250 = 22; -- MDB-3 & 3 RBK-250 MBD_3_RBK_500AO = 23; -- MDB-3 & 3 RBK-500AO MBD_3_RBK_500SOAB = 24; -- MDB-3 & 3 RBK-500SOAB MBD_3_ZAB = 25; -- MDB-3 & 3 ZAB MBD_3_CBU_97 = 26; -- MDB-3 & 3 CBU-97 MBD_3_M_117 = 27; -- MDB-3 & 3 M-117AB MBD_3_MK_81 = 28; -- MDB-3 & 3 MK-81 MBD_3_MK_82 = 29; -- MDB-3 & 3 MK-84 MBD_3_Rockeye = 30; -- MDB-3 & 3 Rockeye MBD_3_GBU_16 = 31; -- MDB-3 & 3 GBU_16 MBD_4_FAB_100 = 32; -- MDB-4 & 4 FAB-100 LAU_88_AGM_65K = 33; -- LAU_88 & 3 AGM-65K TU_22_FAB_100 = 34; -- TU-22M3-MBD & 9 FAB-100 TU_22_FAB_250 = 35; -- TU-22M3-MBD & 9 FAB-250 TU_22_BETAB_250 = 36; -- TU-22M3-MBD & 9 BETAB-250 TU_22_PB_250 = 37; -- TU-22M3-MBD & 9 PB-250 TU_22_RBK_250 = 38; -- TU-22M3-MBD & 9 RBK_250 TU_22_FAB_500 = 39; -- TU-22M3-MBD & 6 FAB-500 TU_22_BETAB_500 = 40; -- TU-22M3-MBD & 6 BETAB_500 TU_22_BETAB_500SP = 41; -- TU-22M3-MBD & 6 BETAB_500SP TU_22_ODAB = 42; -- TU-22M3-MBD & 6 ODAB TU_22_RBK_500AO = 43; -- TU-22M3-MBD & 6 RBK_500AO TU_22_RBK_500SOAB = 44; -- TU-22M3-MBD & 6 RBK_500SOAB TU_22_ZAB = 45; -- TU-22M3-MBD & 6 ZAB VICHR = 46; -- Vikhr (AT-12) {air-tank} VICHR_M = 47; -- Vikhr-M (AT-X-16) {air-tank} LAU_88_AGM_65D = 48; -- LAU_88 & 3 AGM-65D LAU_88_AGM_65E = 49; -- LAU_88 & 3 AGM-65E MBD_A10_2_AIM_9 = 50; -- MBD_A10_2 & 2 AIM_9 MBD_F2_2_Mk_82 = 51; -- MBD F2_2 & 2 Mk_82 MBD_F2_2_Mk_83 = 52; -- MBD F2_2 & 2 Mk_83 MBD_F2_2_Puma = 53; -- MBD F2_2 & 2 Puma MBD_F2_2_BL_755 = 54; -- MBD F2_2 & 2 BL_755 MBD_F2_2_ROCKEYE = 55; -- MBD F2_2 & 2 ROCKEYE MBD_F2_2_ALARM = 56; -- MBD F2_2 & 2 ALARM MBD_3_GBU_22 = 57; -- MDB-3 & 3 GBU_22 AGM_114_Pilon_4 = 58; -- AGM_114_Pilon & 4 AGM_114 AGM_114K_Pilon_4 = 59; -- AGM_114_Pilon & 4 AGM_114K SHTURM = 60; -- SHTURM MER_AIM_9_2 = 61; -- F4_PILON & 2 AIM-9 MER_L_P_60_2 = 62; -- MER_L_P_60 & 2 P-60 MER_R_P_60_2 = 63; -- MER_R_P_60 & 2 P-60 MER_TOW_4 = 64; -- MER_TOW & 4 TOW LAU_88_AGM_65K_2_LEFT = 65; -- LAU_88 & 2(6) AGM_65K (left) LAU_88_AGM_65D_2_LEFT = 66; -- LAU_88 & 2(6) AGM_65D (left) MER_6_AGM_86C = 67; -- MBD_B52_6 & 6 AGM_86C MBD_FAB_250_2 = 68; -- MDB & 2(6) FAB_250 MBD_RBK_250_2 = 69; -- MDB & 2(6) RBK_250 MBD_BetAB_250_2 = 70; -- MDB & 2(6) BetAB_250 TU_22_FAB_1500_2 = 71; -- TU-22M3-MBD & 2(9) FAB-1500 MBD_3_BetAB_500 = 72; -- MDB-3 & 3 BetAB_500 MER_2_F_18_CBU_97 = 73; -- MER_2_F_18 & 2 CBU_97 MER_12_B52_Mk_82 = 74; -- MER_12_B52 & 12 Mk_82 MER_6_BLU_107 = 75; -- MDB & 6 BLU-107 MER_12_B52_M_117 = 76; -- MER_12_B52 & 12 M_117 MER_9_B52_CBU_97 = 77; -- MER_9_B52 & 9 CBU_97 MER_9_B52_Mk_84 = 78; -- MER_9_B52 & 9 Mk_84 MER_9_B52_Rockeye = 79; -- MER_9_B52 & 9 Rockeye MBD_4_RBK_250 = 80; -- MDB-4 & 4 RBK_250 MBD_4_FAB_250 = 81; -- MDB-4 & 4 FAB_250 MER_6_2_PB_250 = 82; -- MBD & 2 PB_250 MER_6_4_PB_250 = 83; -- MBD & 4 PB_250 MER_6_4_FAB_250 = 84; -- MBD & 4 FAB_250 SUU_25_8_LUU_2 = 85; -- SUU_25 & 8 LUU_2B APU_6_VICHR_M = 86; -- APU_6_VIKHR & 6 Vikhr_M S_25L_PU = 87; -- S_25L & PU MBD_2_67U_FAB_100 = 88; -- MBD_2_67U & FAB_100 AKU_58_X_58 = 91; -- AKU_58 & X_58 AKU_58_X_29T = 92; -- AKU_58 & X_29T AKU_58_X_29L = 93; -- AKU_58 & X_29L KMGU_2_AO_2_5RT = 94; -- KMGU-2 & AO_2_5RT KMGU_2_PTAB_2_5KO = 95; -- KMGU-2 & PTAB_2_5KO AKU_58_X_31A = 96; -- AKU-58 & X-31A AKU_58_X_31P = 97; -- AKU-58 & X-31P AKU_58_X_35 = 98; -- AKU-58 & X-35 APU_68_X_25ML = 99; -- APU-68 & X-25ML APU_68_X_25MP = 100; -- APU-68 & X-25MP APU_68_C_24 = 101; -- APU-68 & C-24 APU_73_P_73 = 102; -- APU-73 & R-73 APU_170_P_77 = 103; -- APU-170 & R-77 LAU_88_AGM_65E_2_LEFT = 104; -- LAU_88 & 2(6) AGM_65E (left) LAU_88_AGM_65K_2_RIGHT = 105; -- LAU_88 & 2(6) AGM_65K (right) LAU_88_AGM_65D_2_RIGHT = 106; -- LAU_88 & 2(6) AGM_65D (right) LAU_88_AGM_65E_2_RIGHT = 107; -- LAU_88 & 2(6) AGM_65E (right) LAU_117_AGM_65K = 108; -- LAU_117 & AGM_65K LAU_117_AGM_65D = 109; -- LAU_117 & AGM_65D LAU_117_AGM_65E = 110; -- LAU_117 & AGM_65E -- A-10C TER_3_BDU_33 = 114; LAU_117_AGM_65H = 125; -- LAU_117 & AGM_65H LAU_117_AGM_65G = 126; -- LAU_117 & AGM_65G TER_3_GBU_12 = 127 ; -- BRU-42 3*GBU_12 LAU_105_1_AIM_9M_L = 128 ; LAU_105_2_CATM_9M = 129 ; LAU_105_1_CATM_9M_L = 130 ; TER_3_MK82AIR = 131 ; TER_FREE = 132; LAU_105_FREE = 133; LAU_88_AGM_65H = 134; LAU_88_AGM_65H_2_L = 135 ; LAU_88_AGM_65H_2_R = 136 ; LAU_88_AGM_65H_3 = 137 ; LAU_117_TGM_65D = 138 ; LAU_117_TGM_65G = 139 ; LAU_117_TGM_65H = 140 ; LAU_117_CATM_65K = 141 ; LAU_105_1_AIM_9M_R = 142 ; LAU_105_1_CATM_9M_R = 143 ; TER_3_SUU_25_8_LUU_2 = 144 ; LAU_88_AGM_65D_ONE = 145 ; APU_68_X_25MR = 170 ; AKU_58_X_59 = 171 ;","title":"wsTypes"},{"location":"Database/wsTypes/#wstypeslua","text":"This file can be found at: \"C:\\Program Files\\Eagle Dynamics\\DCS World\\Scripts\\Database\\wsTypes.lua\" -- **************** 1 level *************** wsType_Air = 1 wsType_Ground = 2 wsType_Navy = 3 wsType_Weapon = 4 wsType_Static = 5 wsType_Destroyed = 6 wsType_Test1 = 200 wsType_Point = 201 -- **************** 2 level *************** -- Air objects (wType_Air) wsType_Airplane = 1 wsType_Helicopter = 2 wsType_Free_Fall = 3 -- Weapon (wsType_Weapon) wsType_Missile = 4 wsType_Bomb = 5 wsType_Shell = 6 wsType_NURS = 7 wsType_Torpedo = 8 -- Ground objects (wsType_Ground) wsType_Moving = 8 wsType_Standing = 9 wsType_Tank = 17 wsType_SAM = 16 wsType_Infantry = 20 -- Navy objects (wsType_Navy) wsType_Ship = 12 -- object (wsType_Static) wsType_Airdrome = 13 wsType_Explosion = 14 wsType_GContainer = 15 wsType_AirdromePart = 18 wsType_WingPart = 19 -- **************** 3 level *************** -- Air objects, wsType_Airplane wsType_Fighter = 1 wsType_F_Bomber = 2 wsType_Intercepter = 3 wsType_Intruder = 4 wsType_Cruiser = 5 wsType_Battleplane = 6 -- Free-fall air objects wsType_Snars = 31 wsType_Parts = 35 wsType_FuelTank = 43 -- wsType_Missile wsType_AA_Missile = 7 wsType_AS_Missile = 8 wsType_SA_Missile = 34 wsType_SS_Missile = 11 wsType_A_Torpedo = 10 wsType_S_Torpedo = 11 wsType_AA_TRAIN_Missile = 100 wsType_AS_TRAIN_Missile = 101 -- wsType_Bomb wsType_Bomb_A = 9 wsType_Bomb_Guided = 36 wsType_Bomb_BetAB = 37 wsType_Bomb_Cluster = 38 wsType_Bomb_Antisubmarine = 39 wsType_Bomb_ODAB = 40 wsType_Bomb_Fire = 41 wsType_Bomb_Nuclear = 42 wsType_Bomb_Lighter = 49 -- wsType_Shell wsType_Shell_A = 10 -- Navy objects (wsType_Navy, wsType_Cruiser) wsType_AirCarrier = 12 wsType_HCarrier = 13 wsType_ArmedShip = 14 wsType_CivilShip = 15 wsType_Submarine = 16 -- wsType_Airdrome wsType_RW1 = 20 wsType_RW2 = 30 wsType_Heliport = 40 -- wsType_Explosion wsType_GroundExp = 29 -- wsType_NURS wsType_Container = 32 wsType_Rocket = 33 -- wsType_GContainer wsType_Control_Cont = 44 wsType_Jam_Cont = 45 wsType_Cannon_Cont = 46 wsType_Support = 47 wsType_Snare_Cont = 48 wsType_Smoke_Cont = 50 wsType_JATO_Cont = 51 -- Ground object (wsType_Moving || wsType_Standing ) wsType_NoWeapon = 25 wsType_Gun = 26 wsType_Miss = 27 wsType_ChildMiss = 28 wsType_MissGun = 104 wsType_Civil = 100 --*************************************************** -- wsType_Radar = 101 wsType_Radar_Miss = 102 wsType_Radar_MissGun = 103 wsType_Radar_Gun = 105 -- **************** 4 level *************** -- Free-fall air objects; parts wsType_OBLOMOK_1 = 1; -- 1-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_2 = 2; -- 2-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_3 = 3; -- 3-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_4 = 4; -- 4-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_5 = 5; -- 5-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_6 = 6; -- 6-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 OBLOMOK_OBSHIWKI_1 = 7; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 OBLOMOK_OBSHIWKI_2 = 8; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 K36 = 9; -- \u041a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u043d. \u043a\u0440\u0435\u0441\u043b\u043e PILOT_K36 = 10; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 K36 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT = 11; -- \u041f\u0438\u043b\u043e\u0442 RUS \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c FONAR_OTK = 12; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c -- Free-fall air objects - snars wsType_Chaff = 13; -- \u0440\u0430\u0434\u0438\u043e-\u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_Flare = 14; -- \u0442\u0435\u043f\u043b\u043e\u0432\u0430\u044f \u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_ShortMTail = 15; -- \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0445\u0432\u043e\u0441\u0442 \u0440\u0430\u043a\u0435\u0442 wsType_SmallBomb = 16; -- \u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b PILOT_ACER = 17; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 ACER \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_F14_SEAT = 18; -- \u041f\u0438\u043b\u043e\u0442 F14 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT_US = 19; -- \u041f\u0438\u043b\u043e\u0442 US \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c A_10_FONAR = 20; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0410-10 F_14A_FONAR = 21; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-14A F_15_FONAR = 22; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15 F_16_FONAR = 23; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 F_18C_FONAR = 24; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18C MIG_23_FONAR = 25; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-23 MIG_25_FONAR = 26; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-25 MIG_27_FONAR = 27; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-27 MIG_29_FONAR = 28; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29K_FONAR = 29; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29\u041a MIG_31_FONAR_P = 30; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_31_FONAR_Z = 31; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u0437\u0430\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_L = 32; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_R = 33; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_25_FONAR = 34; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25 SU_27_FONAR = 35; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-27 SU_30_FONAR = 36; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-30 SU_33_FONAR = 37; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-33 SU_39_FONAR = 38; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-39 TORNADO_FONAR = 39; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 TORNADO Mirage_FONAR = 40; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage F_4_FONAR_P = 41; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 F_4_FONAR_Z = 42; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0437\u0430\u0434\u043d\u0438\u0439 F_5_FONAR = 43; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 SU_17_FONAR = 44; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-17 SU_34_FONAR_L = 45; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_34_FONAR_R = 46; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_29C_FONAR = 47; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29G_FONAR = 48; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 SU_25T_FONAR = 49; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25\u0422 wsType_Flare_GREEN = 50;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0417\u0415\u041b\u0415\u041d\u0410\u042f wsType_Flare_RED = 51;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u041a\u0420\u0410\u0421\u041d\u0410\u042f wsType_Flare_WHITE = 52;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0411\u0415\u041b\u0410\u042f wsType_Flare_YELLOW = 53;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0416\u0415\u041b\u0422\u0410\u042f PILOT_DEAD = 54;-- \u0442\u0440\u0443\u043f \u043f\u0438\u043b\u043e\u0442\u0430 PARACHUTE_ON_GROUND = 55;-- \u043f\u043e\u0433\u0430\u0441\u0448\u0438\u0439 \u043a\u0443\u043f\u043e\u043b -- \u0412\u0437\u0440\u044b\u0432\u044b GROUND_EXP = 1; -- \u041d\u0430\u0437\u0435\u043c\u043d\u044b\u0439 \u0432\u0437\u0440\u044b\u0432 1 Heliport_standart = 100; -- \u0432\u0435\u0440\u0442\u043e\u043b\u0451\u0442\u043e\u0434\u0440\u043e\u043c -- \u0421\u043f\u0438\u0441\u043e\u043a \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 Airdrome_0 = 0; -- \u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c 0 Khersones = 1; -- \u0425\u0435\u0440\u0441\u043e\u043d\u0435\u0441 Saki = 2; -- \u0421\u0430\u043a\u0438 Simpheropol = 3; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Razdolnoe = 4; -- \u0420\u0430\u0437\u0434\u043e\u043b\u044c\u043d\u043e\u0435 Dzhankoy = 5; -- \u0414\u0436\u0430\u043d\u043a\u043e\u0439 Kirovskoe = 6; -- \u041a\u0438\u0440\u043e\u0432\u0441\u043a\u043e\u0435 Kerch = 7; -- \u0411\u0430\u0433\u0435\u0440\u043e\u0432\u043e (\u041a\u0435\u0440\u0447\u044c) Belbek = 8; -- \u0411\u0435\u043b\u044c\u0431\u0435\u043a Krasnogvardeyskoye = 9; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u043e\u0435 Octyabrskoe = 10; -- \u041e\u043a\u0442\u044f\u0431\u0440\u044c\u0441\u043a\u043e\u0435 Gvardeyskoe = 11; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0432\u043e\u0435\u043d\u043d\u044b\u0439 Anapa = 12; -- \u0410\u043d\u0430\u043f\u0430 Krasnodar = 13; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Novorossiysk = 14; -- \u041d\u043e\u0432\u043e\u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a Krymsk = 15; -- \u041a\u0440\u044b\u043c\u0441\u043a Maykop = 16; -- \u041c\u0430\u0439\u043a\u043e\u043f Gelendzhik = 17; -- \u0413\u0435\u043b\u0435\u043d\u0434\u0436\u0438\u043a Sochi = 18; -- \u0421\u043e\u0447\u0438 (\u0410\u0434\u043b\u0435\u0440) Krasnodar_P = 19; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 Sukhumi = 20; -- \u0421\u0443\u0445\u0443\u043c\u0438 Gudauta = 21; -- \u0413\u0443\u0434\u0430\u0443\u0442\u0430 Batumi = 22; -- \u0411\u0430\u0442\u0443\u043c\u0438 Tskhakaya = 23; -- \u0426\u0445\u0430\u043a\u0430\u044f Kobuleti = 24; -- \u041a\u043e\u0431\u0443\u043b\u0435\u0442\u0438 Kutaisi = 25; -- \u041a\u0443\u0442\u0430\u0438\u0441\u0438 MinVody = 26; Nalchick = 27; Mozdok = 28 -- \u041c\u043e\u0437\u0434\u043e\u043a\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c Lochini = 29 -- \u0413\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442 \u0432 \u0422\u0431\u0438\u043b\u0438\u0441\u0438 TbilisiMilitary = 30 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0422\u0431\u0438\u043b\u0438\u0441\u0438 Vaziani = 31 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0412\u0430\u0437\u0438\u0430\u043d\u0438 Beslan = 32 -- \u0412\u043b\u0430\u0434\u0438\u043a\u0430\u0432\u043a\u0430\u0437-\u0411\u0435\u0441\u043b\u0430\u043d --#ifndef DEMO_VERSION LAST_AIRDROME_TYPE = Nalchick; --#else --LAST_AIRDROME_TYPE = Gvardeyskoe; --#endif DEMO_VERSION ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0410\u042d\u0420\u041e\u0414\u0420\u041e\u041c\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LAST_AIRDROME_TYPE !!! -- ------------------------------------------------------------------------/ wsType_RunWay = 100; -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Airplanes list. \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0422\u0418\u041f\u041e\u0412 \u0421\u0410\u041c\u041e\u041b\u0415\u0422\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LastPlaneType !!! -- ------------------------------------------------------------------------/ -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438 \u0438 \u043c\u043d\u043e\u0433\u043e\u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. MiG_23 = 1; -- MiG-23 Flogger MiG_29 = 2; -- MiG-29 Fulcrum Su_27 = 3; -- Su-27 Flanker Su_33 = 4; -- Su-33 F_14 = 5; -- F-14 Tomcat F_15 = 6; -- F-15 Eagle F_16 = 7; -- F-16 Fighting Falcon -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a\u0438. MiG_25 = 8; -- MiG-25 Foxbat MiG_31 = 9; -- MiG-31 Foxhound F_2 = 10; -- Tornado F.2 IDS GR.1A -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_27 = 11; -- MiG-27 Flogger-D Su_24 = 12; -- Su-24 Fencer Su_30 = 13; -- Su-30 FA_18 = 14; -- F/A-18A Hornet F_111 = 15; -- F-111 -- \u0428\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a\u0438. Su_25 = 16; -- Su-25 Frogfoot A_10A = 17; -- A-10A Thunderbolt II -- \u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. Tu_160 = 18; -- Tu-160 Blackjack B_1 = 19; -- B-1 Lancer Su_34 = 20; -- C\u0443-34 \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a Tu_95 = 21; -- Tu-95 Bear Tu_142 = 22; -- Tu-142 Bear B_52 = 23; -- B-52 Stratofortress -- \u0411\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_25P = 24; -- MiG_25P -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a Tu_22M3 = 25; -- Tu-22M3 Backfire -- \u0410\u0412\u0410\u041a\u0421. A_50 = 26; -- \u0410-50 Mainstay E_3 = 27; -- E-3 Sentry -- \u0421\u0430\u043c\u043e\u043b\u0435\u0442\u044b \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a\u0438 IL_78 = 28; -- IL-78 Midas KC_10 = 29; -- KC-10 Extender -- \u0422\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. IL_76 = 30; -- IL-76 Candid C_130 = 31; -- C-130 Hercules MIG_29K = 32; -- MiG-29K - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c S_3R = 33; -- S-3A VICING, \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439, \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a Mirage = 34; -- Mirage 2000 - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c -- \u0411\u0435\u0441\u043f\u0438\u043b\u043e\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b-\u0440\u0430\u0437\u0432\u0435\u0434\u0447\u0438\u043a\u0438. Tu_143 = 35; -- Tu-143 (\u0412\u0420-3) \"\u0420\u0435\u0439\u0441\" Tu_141 = 36; -- Tu-141 (\u0412\u0420-2) \"\u0421\u0442\u0440\u0438\u0436\" F_117 = 37; -- F-117 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a Su_39 = 38; -- SU-39 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AN_26B = 39; -- AN-26B \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 AN_30M = 40; -- AN-30M \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 E_2C = 41; -- E-2C Hawkeye \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 AWACS \u043a\u0430\u043a AN_26B S_3A = 42; -- S-3A Viking \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AV_8B = 43; -- AV-8B Harrier \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c EA_6B = 44; -- EA-6B Prowler \u0440\u0430\u0434\u0438\u043e\u043f\u0440\u043e\u0442\u0438\u0432\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a F_4E = 45; -- F-4E Phantom II \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c F_5E = 46; -- F-5E Tiger \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c C_17 = 47; -- C-17 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 USA SU_17M4 = 48; -- Cy-17M4 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c MiG_29G = 49; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 MiG_29C = 50; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 Su_24MR = 51; -- Su-24MR Fencer F_16A = 52; -- F-16A Fighting Falcon FA_18C = 53; -- F/A-18C Hornet Su_25T = 54; -- Su-25 Frogfoot RQ_1A_Predator = 55;-- Predator UAV TORNADO_IDS = 56; Yak_40 = 57; -- Yak-40 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 A_10C = 58; -- A-10C F_15E = 59; -- F-15E KC_135 = 60; -- KC-135 L_39ZA = 61; -- \u041b-39\u0417\u0410 \u0443\u0447\u0435\u0431\u043d\u043e-\u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 P_51B = 62; -- P-51B P_51D = 63; -- P-51D-25-NA P_51D_30_NA = 64; -- P-51D-30-NA TF_51D = 65; -- TF-51D J_11A = 66; -- chinese licensed variant of base Su-27 -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ LastPlaneType = 150;--\u0432\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u043f\u043e\u0434 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Helicopters list. \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ MI_8MT = 1 + LastPlaneType; -- M\u0438-8\u041c\u0422. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_24W = 2 + LastPlaneType; -- M\u0438-24B. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_26 = 3 + LastPlaneType; -- M\u0438-26. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_27 = 4 + LastPlaneType; -- Ka-27. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_50 = 5 + LastPlaneType; -- Ka-50. \u0420\u043e\u0441\u0441\u0438\u044f KA_52 = 6 + LastPlaneType; -- Ka-52. \u0420\u043e\u0441\u0441\u0438\u044f AH_64A = 7 + LastPlaneType; -- AH-64A Apache. NATO AH_64D = 8 + LastPlaneType; -- AH-64D Apache Longbow. NATO CH_47D = 9 + LastPlaneType; -- CH-47D Chinook. NATO CH_53E = 10 + LastPlaneType; -- CH-53E Super Stallion. NATO SH_60B = 11 + LastPlaneType; -- SH-60B Sea Hawk. NATO UH_60A = 12 + LastPlaneType; -- UH-60A Night Hawk. NATO AH_1W = 13 + LastPlaneType; -- AH-1W Super Cobra. NATO SH_3H = 14 + LastPlaneType; -- SH-3W Sea King. NATO Sea_Lynx= 15 + LastPlaneType; -- Sea Lynx Mk88. NATO AB_212 = 16 + LastPlaneType; -- UH-1H. NATO MI_28N = 17 + LastPlaneType; -- \u041c\u0438-28\u041d OH_58D = 18 + LastPlaneType; -- \u041a\u0430\u0439\u043e\u0432\u0430 NATO -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Air-to-Air Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u0432\u043e\u0437\u0434\u0443\u0445. -- 0 - \u043f\u0443\u0441\u0442\u043e empty R_550 = 1; -- R550 Magic 2 MICA_T = 2; -- MICA, IR MICA_R = 3; -- MICA, AR Super_530D = 4; -- Super 530D P_98 = 5; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-98 == P-98R (AA-3 \u201cAnab\u201d) P_4R = 6; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-4R (AA-5 'Ash') P_40R = 7; -- P-40R (AA-6 'Acrid') --P_23R = 8; -- P-23R (AA-7 'Apex') P_24R = 9; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24R (AA-7 'Apex') P_60 = 10; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-60 (AA-8 'Aphid')\u0431\u043b. \u0431\u043e\u044f P_33E = 11; -- P-33\u042d (AA-9 'Amos') \u0431\u043e\u043b.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27AE = 12; -- P-27A\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27P = 13; -- P-27P (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27PE = 14; -- P-27P\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27T = 15; -- P-27T (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27TE = 16; -- P-27T\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27EM = 17; -- P-27\u042dM (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_73 = 18; -- P-73 (AA-11 'Archer')\u0431\u043b. \u0431\u043e\u044f P_77 = 19; -- P-77 (PBB-AE) (AA-12)c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_37 = 20; -- P-37 AIM_7 = 21; -- AIM-7 'Sparrow' AIM_9 = 22; -- AIM-9 'Sidewinder' AIM_54 = 23; -- AIM-54 'Phoenix' AIM_120= 24; -- AIM-120 'AMRAAM' --P_23T = 25; -- P-23T (AA-7 'Apex') P_24T = 26; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24T (AA-7 'Apex') P_40T = 27; -- P-40T (AA-6 'Acrid') SeaSparrow = 28; -- Sea Sparrow -- Unguided rockets. \u041d\u0435\u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u043d\u0430\u0440\u044f\u0434\u044b. C_8CM = 30; -- C-8CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) C_5 = 31; -- C-5 C_8 = 32; -- C-8 C_13 = 33; -- C-13 C_24 = 34; -- C-24 C_25 = 35; -- C-25 HYDRA_70 = 36; -- HYDRA-70 Zuni_127 = 37; -- Zuni-127 Zuni_127CM = 38; -- Zuni-127CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) -- Air-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c. AGM_114K = 39; -- AGM-114 Hellfire Laser AGM_119= 40; -- Penguin, Norway X_22 = 41; -- X-22 Burya wing,anti-ship (AS-4'Kitchen') X_29TE = 42; -- X_29TE (AS-14 'Kedge' \u044d\u043a\u0441\u043f\u043e\u0440\u0442) X_23 = 43; -- X-23 Grom anti-radar(AS-7 'Kerry') X_28 = 44; -- X-28 anti-radar(AS-9 'Kyle') X_25ML = 45; -- X-25ML laser (AS-10 'Karen') X_58 = 46; -- X-58 anti-radar(AS-11 'Kilter') X_25MP = 47; -- X-25MP anti-radar(AS-12 'Kegler') AT_6 = 48; -- AT_6 (9M114) radio-command anti-tank, STURM X_29L = 49; -- X-29L laser (AS-14 'Kedge') X_55 = 50; -- X-55 wing (AS-15A 'Kent') X_65 = 51; -- X-65 wing (AS-15B 'Kent') X_15 = 52; -- X-15 \u0430nti-ship,ballistic(AS-16 'Kickback') X_31A = 53; -- X-31A \u0430nti-ship(AS-17 'Krypton') X_59M = 54; -- X-59M Ovod (AS-18 Kazoo) X_35 = 55; -- X-35 (AS-20 'Kayak') X_41 = 56; -- X-41 (unknown) \u0430nti-ship Vikhr = 57; -- 9M120 Vikhr laser (AT-12) {air-tank} Vikhr_M= 58; -- 9M120M Vikhr-M (AT-X-16)laser{air-tank} AGM_114= 59; -- AGM-114 Hellfire Radar AGM_45 = 60; -- AGM-45 'Shrike' anti-radar AGM_65K= 61; -- AGM-65K 'Maverick' AGM_84A= 62; -- AGM-84 'Harpoon' AGM_84E= 63; -- AGM-84E 'SLAM' AGM_86 = 64; -- AGM-86 'CALCM' wing AGM_88 = 65; -- AGM-88 'HARM' anti-radar Sea_Eagle = 66; -- Sea_Eagle SAV611 = 67; -- 4K60 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u0441\u0430 \"\u0428\u0442\u043e\u0440\u043c\" \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 AGM_122= 68; -- AGM-122 'Sidearm' anti-radar AGM_123= 69; -- AGM-123 'Skipper' laser AGM_65E= 70; -- AGM-65E AGM_130= 71; -- AGM-130 wing ALARM = 72; -- ALARM X_23L = 73; -- X-23L Grom laser (AS-7 'Kerry') X_25MR = 74; -- X-25MR TV (AS-12 'Kegler') X_29T = 75; -- X-29T TV (AS-14 'Kedge') X_31P = 76; -- X-31\u041f \u0430nti-radar(AS-17 'Krypton') AGM_65D= 77; -- AGM-65D 'Maverick' Kormoran=78; -- Kormoran AS 34 -- Surface-to-Air Missiles and others. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u0432\u043e\u0437\u0434\u0443\u0445 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435. SM_2 = 79; -- SM-2 \u0434\u043b\u044f TICONDEROGA SA5B55 = 80; -- 5B55 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA48H6E2=81; -- 48\u041d6\u04152 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA9M82 = 82; -- 9\u041c82 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA9M83 = 83; -- 9\u041c83 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA3M9M = 84; -- 3\u041c9\u041c \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2\u041a12 \u041a\u0443\u0431 SA9M33 = 85; -- 9\u041c33 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a33 \u041e\u0441\u0430 SA9M31 = 86; -- 9\u041c31 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a31 \u0421\u0442\u0440\u0435\u043b\u0430-1 SA9M38M1=87; -- 9\u041c38\u041c1 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a37 \u0411\u0443\u043a SA9M333= 88; -- 9\u041c333 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a35 \u0421\u0442\u0440\u0435\u043b\u0430-10 SA9M330= 89; -- 9\u041c330 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u0440 \u041c1 SA9M311= 90; -- 9\u041c311 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2C6\u041c \u0422\u0443\u043d\u0433\u0443\u0441\u043a\u0430 Igla_1E= 91; -- Igla-1E \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0417\u0420\u041a \u0418\u0433\u043b\u0430 MIM_104= 92; -- MIM-104 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Patriot FIM_92C= 93; -- FIM_92C STINGER \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Avenger \u0438 \u0440\u0443\u0447\u043d\u0430\u044f. -------------------------------------------------------------------------------- GRAD_9M22U = 94; -- GRAD-RAKETA \u0420\u0421\u0417\u041e \u0413\u0440\u0430\u0434 \u0440\u0430\u043a\u0435\u0442\u0430 URAGAN_9M27F = 179; -- URAGAN-RAKETA \u0420\u0421\u0417\u041e \u0423\u0440\u0430\u0433\u0430\u043d SMERCH_9M55K = 95; -- SMERCH-RAKETA \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 SMERCH_9M55F = 180; -- \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 \u041e\u0424 (HE Rocket) SA5B27 = 97; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0417-\u0412 5B27 \u0434\u043b\u044f \"\u0413\u0440\u043e\u0437\u043d\u043e\u0433\u043e\" HAWK_RAKETA = 98; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0434\u043b\u044f Hawk ROLAND_R = 99; -- \u0420\u0430\u043a\u0435\u0442\u0430 ROLAND SM_1 = 100; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-66B SM_2ER = 101; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-156A SM_6 = 102; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-174 AIM_120C = 106; -------------------------------------------------------------------------------- -- Surface-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c P_35 = 118; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0440\u043e\u0433\u0440\u0435\u0441\u0441-\u041c P_500 = 119; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0411\u0430\u0437\u0430\u043b\u044c\u0442 P_700 = 120; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0440\u0430\u043d\u0438\u0442 P_15U = 121; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u0435\u0440\u043c\u0438\u0442 P_120 = 122; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0430\u043b\u0430\u0445\u0438\u0442 R_85 = 123; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0435\u0442\u0435\u043b\u044c R_85U = 124; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0420\u0430\u0441\u0442\u0440\u0443\u0431 BGM_109B = 125; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u043c\u0430\u0433\u0430\u0432\u043a AGM_84S = 126; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0430\u0440\u043f\u0443\u043d MALUTKA = 127; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041c\u0430\u043b\u044e\u0442\u043a\u0430 \u0411\u041c\u0414-1 \u0438 \u0411\u041c\u041f-1 KONKURS = 128; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041a\u043e\u043d\u043a\u0443\u0440\u0441 \u0411\u041c\u041f-2 P_9M117 = 129; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u0411\u041c\u041f-3 TOW = 130; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u041c-2 M26 = 131; -- \u041d\u0443\u0440\u0441 \u043a MLRS AGM_154 = 132; -- AGM-154 JSOW S_25L = 133; -- S-25L SCUD_RAKETA = 96; -- -------------------------------------------------------------------------------- wsType_Shell_SPPU = 134; -- \u0441\u043d\u0430\u0440\u044f\u0434 \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439. 20 \u043c\u043c -------------------------------------------------------------------------------- -- Added missiles --Air-to-Air AIM_9P = 135; -- AIM-9P 'Sidewinder' rear_aspect IR missile AIM_9X = 136; -- AIM-9X 'Sidewinder' perspective all aspect IR/UV missile MIM_72G = 137; -- M48 Chaparral missile, sidewinder-like AGM_65H = 138; -- new mavericks AGM_65G = 139; TGM_65G = 140; -- training TGM_65D = 141; -- training CATM_65K = 142; -- training -- Air-to-air CATM_9 = 143; -- -- wsType \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u0433\u0438\u0434\u0440 HYDRA_70_MK1 = 144; HYDRA_70_MK5 = 145; HYDRA_70_MK61 = 146; HYDRA_70_M151 = 147; HYDRA_70_M156 = 148; HYDRA_70_WTU1B = 149; HYDRA_70_M274 = 150; HYDRA_70_M257 = 151; HYDRA_70_M278 = 152; P_9M133 = 153; ATGM_Kornet = P_9M133; -- 9M133 --------------------- TGM_65H = 154; --------------------- C_8OFP2 = 155; --------------------- REFLEX = 156; -- ATGM 9M119 Reflex T-80UD SVIR = 157; -- ATGM 9M119 Svir T-72B --------------------- C_8OM = 158; --------------------- HVAR = 159; TOW2 = 160; -- ATGM C_8CM_GN = 181; C_8CM_RD = 182; C_8CM_WH = 183; C_8CM_BU = 184; C_8CM_YE = 185; C_8CM_VT = 186; M26HE = 187; -- HE heavy rocket for MLRS -- Bombs. \u0411\u043e\u043c\u0431\u044b. Bomb_Other = 0; -- \u0412\u0441\u0435-\u0440\u0430\u0432\u043d\u043e-\u043a\u0430\u043a\u0430\u044f \u0431\u043e\u043c\u0431\u0430 (\u0442\u0438\u043f \u0432 \u043a\u043e\u0434\u0435 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f) BetAB_150DS = 1; -- BetAB-150DS, BetAB_250 = 2; -- BetAB-250, BetAB_500 = 3; -- BetAB-500, BetAB_500ShP= 4; -- BetAB-500ShP FAB_100 = 5; -- FAB-100, FAB_250 = 6; -- FAB-250, FAB_500 = 7; -- FAB-500 FAB_1000 = 8; -- FAB-1000 FAB_1500 = 9; -- FAB-1500 FAB_5000 = 10; -- FAB-5000 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 KAB_500 = 11; -- KAB-500 KAB_500Kr = 12; -- KAB-500Kr, KAB_500KrOD = 13; -- KAB-500Kr-OD, KAB_1500Kr = 14; -- KAB-1500Kr ODAB_500PM = 16; -- ODAB-500 PM ODAB_250 = 17; -- ODAB-250 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 RBK_250 = 18; -- RBK-250, RBK_250S = 19; -- RBK-250S, RBK_500AO = 20; -- RBK-500AO, RBK_500SOAB = 21; -- RBK-500SOAB Puma = 22; -- Puma BL_755 = 23; -- BL_755 GluB = 24; -- Glubinaya Bomba NB_1 = 25; -- Nuclear Bomb - 1 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 NB_2 = 26; -- Nuclear Bomb - 2 Torpedo = 27; -- Torpedo XZAB_250 = 28; -- XZAB-250, XZAB_500 = 29; -- XZAB-500 Mk_81 = 30; -- Mk-81 Mk_82 = 31; -- Mk-82 Mk_83 = 32; -- Mk-83 Mk_84 = 33; -- Mk-84 M_117 = 34; -- M-117 CBU_97 = 35; -- CBU-97 GBU_10 = 36; -- GBU-10 GBU_11 = 37; -- GBU-11 GBU_12 = 38; -- GBU-12 GBU_16 = 39; -- GBU-16 GBU_17 = 40; -- GBU-40 GBU_24 = 41; -- GBU-41 GBU_15 = 42; -- GBU-15 GBU_27 = 43; -- GBU-27 GBU_22 = 44; -- GBU-22 ROCKEYE = 45; -- \u0411\u043e\u043c\u0431\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 AGM_62 = 47; -- AGM-62 Walley GBU_28 = 48; -- GBU-28 GBU_29 = 49; -- GBU-29 GBU_30 = 50; -- GBU-30 JDAM FAB_100P = 53; -- FAB-100\u041f FAB_250P = 54; -- FAB-250\u041f FAB_500P = 55; -- FAB-500\u041f FAB_500_3 = 56; -- FAB-500 - 3 MW_1 = 57; -- MW-1 dispenser PB_250 = 58; -- PB-250 c \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c Z_BAK_3 = 59; -- \u0437\u0430\u0436\u0438\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0431\u0430\u043a - 3 \u0442\u0438\u043f Mk_50_Torpedo = 61;-- \u0442\u043e\u0440\u043f\u0435\u0434\u0430 Mk-60 Durandal = 62; -- BLU_107 Durandal SAB_100 = 63; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 LUU_2B = 64; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b SUU_25 AO_2_5RT = 65; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 PTAB_2_5KO = 66; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 -- 67 \u0438 68 - PTAB_2_5RT_void \u0438 AO_2_5RT_void BDU_33 = 69; BDU_50LD = 70; BDU_50HD = 71; BDU_50LGB = 72; BDU_56LD = 73; BDU_56LGB = 74; MK_82AIR = 75; LUU_19 = 76; -- IR-\u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u043e\u043c\u0431\u0430 CBU_87 = 77; CBU_89 = 78; MK_82SNAKEYE = 79; LUU_2AB = 80; LUU_2BB = 81; LUU_1 = 82; LUU_5 = 83; LUU_6 = 84; GBU_31 = 85; GBU_38 = 86; CBU_105 = 87; CBU_103 = 88; CBU_104 = 89; AN_M64 = 90; RBK_500U = 91; GBU_31_V_3B = 92; CBU_52B = 93; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u044b \u0438 \u0431\u0430\u043a\u0438. \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438. UB_13 = 1; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 UB_32_1 = 2; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MBD_3 = 3; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 \u0431\u043e\u043c\u0431\u044b LAU_88 = 4; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 MAVERICK PTB_3000 = 5; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-24 \u043d\u0430 3000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 B_20 = 6; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 S_25_C = 7; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 c \u0440\u0430\u043a\u0435\u0442\u043e\u0439 LAU_10 = 8; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 LAU_61 = 9; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 F_15_PTB =10; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15C 1600 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N1 =11; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 1120 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N2 =12; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_18_PTB =13; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_23_PTB =14; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-23 640 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_25_PTB =15; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-25 4370 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1150 =16; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1500 =17; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 1200 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 SPPU_22 =18; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u041f\u041f\u0423-22 KINGAL =19; -- \u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u0443-39 UPK_23_25 =20; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0423\u041f\u041a-23-25 MBD =21; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 6-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 MBD_4 =22; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 4-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 TU_22_MBD =23; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 \u0434\u043b\u044f \u0422\u0443-22\u041c3 S_25_PU =24; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 \u0431\u0435\u0437 \u0440\u0430\u043a\u0435\u0442\u044b ALQ_131 =25; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0428\u0410) LANTIRN =26; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b.F-16 LANTIRN_F18 =27; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PAVETACK =28; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-111 SORBCIJA =29; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0443-27) SPS_141 =30; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0420\u043e\u0441\u0441\u0438\u044f) PTB_B_1B =31; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 B-1B \u043d\u0430 14915 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_3_LAU_10=32; -- MDB-3 & 3 LAU_10 MBD_3_LAU_61=33; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MDB-3 & 3 LAU_61 AT_9M120 =34; -- Vikhr (AT-12) {air-tank} AT_9M120M =35; -- Vikhr-M (AT-X-16) {air-tank} F_5_PTB =36; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 1000 \u043b \u0442\u043e\u043f\u043b\u0438\u0432\u0430 Sky_Shadow =37; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f, Tornado PTB_F2_1500 =38; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Tornado \u043d\u0430 1500 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 M2000_PTB =39; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage \u043d\u0430 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_A10_2 =40; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f A-10 F4_PTB_WING =41; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043a\u0440\u044b\u043b\u044c\u0435\u0432\u043e\u0439 F4_PTB_FUZ =42; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0444\u044e\u0437\u0435\u043b\u044f\u0436\u043d\u044b\u0439 AGM_114_Pilon = 43; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 4\u0445 \u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 AT_6_9M114 =44; -- SHTURM \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0442\u0438\u043f\u0430 Vikhr-M F4_PILON =45; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f F4 MER_L_P_60 = 46; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043b\u0435\u0432\u044b\u0439 MER_R_P_60 = 47; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043f\u0440\u0430\u0432\u044b\u0439 MER_TOW = 48; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 4 TOW MER_2_F_18 = 49; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 2, F-18 MER_9_B52 = 50; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 9, B-52 MER_12_B52 = 51; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 12, B-52 MBD_6_B52 = 52; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 6, B-52 PTB_2000 = 53; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 2000 \u043b \u0434\u043b\u044f \u0421\u0443-34 PTB_800L_Wing = 54; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 800 \u043b \u0434\u043b\u044f Mig-23 PTB_S_3 = 55; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u0434\u043b\u044f S-3 PTB_367GAL = 56; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 367 gal \u0434\u043b\u044f F-14 SKY_SHADOW = 57; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f BOZ_100 = 58; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 c \u043b\u043e\u0432\u0443\u0448\u043a\u0430\u043c\u0438 LANTIRN_F14 = 59; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-14 FLIR_POD = 60; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PTB_1150_29 = 61; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 1150 l \u0434\u043b\u044f MiG-29 TANGAZH = 62; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 EPHIR = 63; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 SHPIL = 64; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 FANTASM = 65; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. SmokeGenerator_red = 66;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). SmokeGeneratorAIM_red = 67;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). AIM-9S B_20CM = 68; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 \u0430\u043d\u0430\u043b\u043e\u0433 B-20 Whiskey_Pete = 69; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 2.75 SUU_25 = 70; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0430\u043b\u043a\u0430) \u0441 \u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0431\u043e\u043c\u0431\u0430\u043c\u0438 --71,72 is free, use if you want (duplicated F-18 fuel tanks removed) AN_AAS_38_FLIR = 74; -- AN/AAS-38 FLIR MBD_2_67U = 76; -- \u041c\u0411\u0414-2-67\u0423 S_25L_AND_PU = 77; -- \u0421-25\u041b + \u041f\u0423 (\u0431\u043e\u043b\u0432\u0430\u043d\u043a\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430) AN_ASQ_173_LST_CAM = 78; -- AN/ASQ-173 LST/CAM AKU_58 = 80; -- AKU_58 KMGU_2 = 81; -- KMGU-2 SmokeGenerator_green = 82; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). SmokeGenerator_blue = 83; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). SmokeGenerator_white = 84; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). SmokeGenerator_yellow = 85; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). SmokeGenerator_orange = 86; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). SmokeGeneratorAIM_green = 87; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). AIM-9S SmokeGeneratorAIM_blue = 88; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). AIM-9S SmokeGeneratorAIM_white = 89; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). AIM-9S SmokeGeneratorAIM_yellow = 90; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). AIM-9S SmokeGeneratorAIM_orange = 91; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). AIM-9S APU_68 = 92; -- APU-68 APU_73 = 93; -- APU-73 MPS_410 = 94; -- MPS_410 \u041c\u0430\u043b\u043e\u0433\u0430\u0431\u0430\u0440\u0438\u0442\u043d\u0430\u044f \u043f\u043e\u043c\u0435\u0445\u043e\u0432\u0430\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u044f Kopyo = 95; -- \u0420\u0430\u0434\u0430\u0440 \"\u041a\u043e\u043f\u044c\u0435\" \u0432 \u043f\u043e\u0434\u0432\u0435\u0441\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435 APU_170 = 96; -- \u0410\u041f\u0423-170 LAU_117 = 97; -- LAU_117 B_8V20A = 98; -- B_8V20A PTB_KA_50 = 99; -- PTB KA-50 Shturm_9K114 = 100; AN_AAQ_28_LITENING = 101; -- AN/AAQ-28 LITENING TER_LS = 102; -- Triple ejector rack TK600 = 103; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a TRAVEL_POD = 104; -- \u0413\u0438\u0434\u0440\u044b -- \u041d\u0430 LAU_68 LAU_68_HYDRA_70_MK1 = 105; LAU_68_HYDRA_70_MK5 = 106; LAU_68_HYDRA_70_MK61 = 107; LAU_68_HYDRA_70_M151 = 108; LAU_68_HYDRA_70_M156 = 109; LAU_68_HYDRA_70_WTU1B = 110; LAU_68_HYDRA_70_M274 = 111; LAU_68_HYDRA_70_M257 = 112; LAU_68_HYDRA_70_M278 = 113; -- \u041d\u0430 LAU_131 LAU_131_HYDRA_70_MK1 = 114; LAU_131_HYDRA_70_MK5 = 115; LAU_131_HYDRA_70_MK61 = 116; LAU_131_HYDRA_70_M151 = 117; LAU_131_HYDRA_70_M156 = 118; LAU_131_HYDRA_70_WTU1B = 119; LAU_131_HYDRA_70_M274 = 120; LAU_131_HYDRA_70_M257 = 121; LAU_131_HYDRA_70_M278 = 122; -- 3* SUU_25 (\u043d\u0430 TER) SUU_25x3 = 123; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_68 (\u043d\u0430 TER) LAU_68x3_HYDRA_70_MK1 = 124; LAU_68x3_HYDRA_70_MK5 = 125; LAU_68x3_HYDRA_70_MK61 = 126; LAU_68x3_HYDRA_70_M151 = 127; LAU_68x3_HYDRA_70_M156 = 128; LAU_68x3_HYDRA_70_WTU1B = 129; LAU_68x3_HYDRA_70_M274 = 130; LAU_68x3_HYDRA_70_M257 = 131; LAU_68x3_HYDRA_70_M278 = 132; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_131 (\u043d\u0430 TER) LAU_131x3_HYDRA_70_MK1 = 133; LAU_131x3_HYDRA_70_MK5 = 134; LAU_131x3_HYDRA_70_MK61 = 135; LAU_131x3_HYDRA_70_M151 = 136; LAU_131x3_HYDRA_70_M156 = 137; LAU_131x3_HYDRA_70_WTU1B= 138; LAU_131x3_HYDRA_70_M274 = 139; LAU_131x3_HYDRA_70_M257 = 140; LAU_131x3_HYDRA_70_M278 = 141; ALQ_184 = 142; LAU_68 = 143; LAU_131 = 144; OH_58_BRAUNING = 145; LAU_131WP = 146; M279_AGM114 = 147; B_8V20A_WP = 148; B_8V20A_OFP2 = 149; B_8V20A_OM = 150; B_8M1_OFP2 = 151; DROP_TANK_75GAL = 152; M134_L = 160; M134_R = 161; XM_158_HYDRA_70_MK1 = 162; XM_158_HYDRA_70_MK5 = 163; XM_158_HYDRA_70_M151 = 164; XM_158_HYDRA_70_M156 = 165; XM_158_HYDRA_70_M274 = 166; XM_158_HYDRA_70_M257 = 167; M261_HYDRA_70_M151 = 168; M261_HYDRA_70_M156 = 169; GUV_YakB_GSHP = 170; GUV_VOG = 171; HWAR_SMOKE_GENERATOR = 172; M134_SIDE_L = 174; M134_SIDE_R = 175; M60_SIDE_L = 176; M60_SIDE_R = 177; BRU_42_HS = 178; KORD_12_7 = 183; PKT_7_62 = 184; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 ----------------------------------------------------------------------/ Kuznecow = 1; -- \u0410\u0432\u0438\u0430\u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0440\u0435\u0439\u0441\u0435\u0440 \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432 VINSON = 2; -- \u0410\u0432\u0438\u0430\u043d\u043e\u0441\u0435\u0446 VINSON MOSCOW = 3; -- \u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u041c\u043e\u0441\u043a\u0432\u0430\" GROZNY = 4; -- P.\u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u0413\u0440\u043e\u0437\u043d\u044b\u0439\" wsType_GenericCivShip = 5; --ELNYA = 5; -- \u0422\u0430\u043d\u043a\u0435\u0440 \u0415\u043b\u044c\u043d\u044f wsType_GenericLightArmoredShip = 6; --KATER = 6; -- \u0422\u0443\u0440\u0435\u0446\u043a\u0438\u0439 \u043a\u0430\u0442\u0435\u0440 --AKVAMAREN = 7; -- \u0411\u0422\u0429 \u0410\u043a\u0432\u0430\u043c\u0430\u0440\u0438\u043d Natya (NAT\u041e-\u043a\u043e\u0434) AZOV = 8; -- \u0411\u041f\u041a \u0410\u0437\u043e\u0432 Kara BOBRUISK = 9; -- \u0411\u0414\u041a \u0411\u043e\u0431\u0440\u0443\u0439\u0441\u043a Ropucha BORA = 10; -- \u0420\u041a\u0412\u041f \u0411\u043e\u0440\u0430 Sivuch ALBATROS = 11; -- \u0421\u041a\u0420 \u0410\u043b\u044c\u0431\u0430\u0442\u0440\u043e\u0441 Grisha V AMETYST = 12; -- \u0421\u041a\u0420 \u0410\u043c\u0435\u0442\u0438\u0441\u0442 Grisha II OREL = 13; -- \u0411\u0421\u041a\u0420 \u041e\u0440\u0435\u043b Krivak III REZKY = 14; -- \u0411\u0421\u041a\u0420 \u0420\u0435\u0437\u043a\u0438\u0439 Krivak II MOLNIYA = 15; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041c\u043e\u043b\u043d\u0438\u044f Tarantul III --MURENA = 16; -- \u0421\u0412\u041f \u041c\u0443\u0440\u0435\u043d\u0430 Tsaplya PERRY = 17; -- \u0424\u0440\u0435\u0433\u0430\u0442 Oliver Perry OSA = 18; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041e\u0441\u0430 Osa SKORY = 19; -- \u0411\u041f\u041a \u0421\u043a\u043e\u0440\u044b\u0439 Kashin SPRUANCE = 20; -- \u042d\u0441\u043c\u0438\u043d\u0435\u0446 Spruance TICONDEROGA = 21; -- \u0420. \u043a\u0440\u0435\u0439\u0441\u0435\u0440 Ticonderoga --TK = 22; -- \u0422\u043e\u0440\u043f\u0435\u0434\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --wsType_GenericSubmarine = 23; -- Temporary KILO = 23; -- \u041f\u041b \u0412\u0430\u0440\u0448\u0430\u0432\u044f\u043d\u043a\u0430 Kilo TANGO = 24; -- \u041f\u041b \u0421\u043e\u043c Tango VETER = 25; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u0412\u0435\u0442\u0435\u0440 Nanuchka III --ZWEZDNY = 26; -- \u041f\u0440\u043e\u0433\u0443\u043b\u043e\u0447\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --YASTREBOW = 27; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c NEUSTRASH = 28; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c --BARGE_WITH_SAND = 29; --BARGE_WITHOUT_SAND = 30; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastShipType !!! LastShipType = NEUSTRASH; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ wsType_Test4 = 200; -- \u0442\u043e\u0447\u043a\u0430 \u043d\u0430 \u0437\u0435\u043c\u043b\u0435 ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 ----------------------------------------------------------------------/ -- \u041e\u0411\u042a\u0415\u041a\u0422\u042b \u041f\u0412\u041e ----------------------------------------------------------------------/ EWR_1L13 = 1; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 1L13 EWR_55G6 = 2; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 55\u04166 KP_54K6 = 3; -- \u041a\u041f 54K6 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 V_40B6M = 4; -- track radar V_40B6MD = 5; -- search radar RLS_5H63C = 6; -- track radar RLO_64H6E = 7; -- search radar PU_5P85C = 8; -- launcher PU_5P85D = 9; -- launcher RLS_9C32_1 = 10; -- track radar RLO_9C15MT = 11; -- search radar RLO_9C19M2 = 12; -- search radar S300V_9A82 = 13; -- launcher S300V_9A83 = 14; -- launcher S300V_9A84 = 15; -- launcher S300V_9A85 = 16; -- launcher BUK_9C470M1 = 17; -- \u041a\u041f BUK_9C18M1 = 18; -- search radar BUK_PU = 19; -- launcher BUK_LL = 20; -- loader/launcher KUB_1C91 = 21; -- search and track radar (str) KUB_2P25 = 22; -- launcher OSA_9A33BM3 = 23; -- search radar OSA_9T217 = 24; -- loader Strela_9K31 = 25; -- launcher Strela_9K35 = 26; -- launcher (ln) Radar_Dog_Ear = 27; -- search radar Tor_ = 28; -- str, ln Tunguska_ = 29; -- str, ln Shilka_ = 30; -- str, ln Roland_ = 31; -- str, ln Roland_Search_Radar = 32; -- search radar Avenger_ = 33; -- ln Patr_AN_MPQ_53_P = 34; -- str Patr_KP = 36; -- \u041a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u0434\u043b\u044f \"\u041f\u0430\u0442\u0440\u0438\u043e\u0442\u0430\" Patriot_ = 37; -- ln Gepard_ = 38; -- str, ln Hawk_Search_Radar = 39; -- search radar Hawk_Track_Radar = 40; -- track radar Hawk_ = 41; -- ln Hawk_CWAR_Radar = 42; Hawk_CV = 43; --Stinger_ = 44; -- ln --KP_S300V_9C457 = 45; -- \u041f\u0443\u043d\u043a\u0442 \u0431\u043e\u0435\u0432\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0421300 \u0412 wsTypeVulkan = 46; -- ln wsType_GenericAAA = 47; -- Temporary ZU_23 = 47; -- \u0433\u043e\u043b\u0430\u044f \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 ZU_23_OKOP = 48; -- \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u0441 \u043e\u0431\u0432\u0430\u043b\u043e\u0432\u043a\u043e\u0439 ZU_23_URAL = 49; -- \u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u043d\u0430 \u0423\u0440\u0430\u043b\u0435 wsType_Generic_IR_SAM = 50; -- Temporary M48_Chaparral = 50; -- \u0430\u043d\u0430\u043b\u043e\u0433 \u0421\u0442\u0440\u0435\u043b\u0430-1 M6Linebacker = 51; -- M6 Linebacker HumanTypeStart = 52; -- \u0441\u0442\u0430\u0440\u0442 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 IglaRUS_1 = 52; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 IglaRUS_2 = 53; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 IglaGRG_1 = 54; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b IglaGRG_2 = 55; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 Stinger_manpad = 56; -- \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043d\u0433\u0435\u0440\u0438\u0441\u0442 --StingerUSA_1 = 56; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 StingerUSA_2 = 57; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 \u043f\u0430\u0440\u0430 --StingerIZR_1 = 58; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 StingerIZR_2 = 59; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 --StingerGRG_1 = 60; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b --StingerGRG_2 = 61; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 IglaINS_1 = 62; HumanTypeEnd = 62; -- \u043a\u043e\u043d\u0435\u0446 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 ZU_23_insurgent = 70; -- ZU-23 insurgent ZU_23_insurgent_okop = 71; -- ZU-23 insurgent ZU_23_insurgent_ural = 72; -- ZU-23 insurgent SA3_TR = 73; -- S-125 SA3_LN = 74; -- S-125 SA3_SR = 75; -- S-125 -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastSAMType !!! LastSAMType = SA2_SR; ----------------------------------------------------------------------/ -- \u041d\u0430\u0437\u0435\u043c\u043d\u0430\u044f \u0422\u0415\u0425\u041d\u0418\u041a\u0410 ----------------------------------------------------------------------/ wsType_GenericSAU = 1; -- Temporary --wsTypeSAUmsta = 1; --wsTypeSAUakacia = 2; --wsTypeSAU_2C9 = 3; wsTypeTMZ5 = 4; wsTypeTZ10 = 5; wsType_GenericVehicle = 6; --wsTypeUralApa = 6; wsType_GenericIFV = 7; --Temporary --wsTypeBMD1 = 7; --wsTypeBMP1 = 8; --wsTypeBMP2 = 9; wsType_GenericAPC = 10; -- Temporary --wsTypeBRDM2 = 10; --wsTypeBTR70 = 11; --wsTypeGrad = 12; --wsTypeM818 = 13; -- \u0422\u044f\u0433\u0430\u0447 M-818 wsType_Hummer = 14; -- Temporary --wsTypeLAV25 = 15; wsType_GenericTank = 16; --wsTypeLeopard2 = 16; --wsTypeAAV7 = 17; --wsTypeM109 = 18; --wsTypeM113 = 19; --wsTypeM113G = 20; --wsTypeAbrams = 21; --wsTypeMarder = 22; --wsTypeBeregSAU = 23; --wsTypeBeregRLS = 24; wsTypeMAZelektro = 25; wsTypeMAZkaraul = 26; wsTypeMAZobsch = 27; wsTypeMAZstol = 28; --wsTypeSmerch = 29; --wsTypeATZ60 = 30; --wsTypeRLS_PRW11 = 31; wsTypeRLS_RSP7 = 32; --wsTypeReis = 33; -- \u0420\u0430\u0437\u0432\u0435\u0434 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441 \u0420\u0435\u0439\u0441 wsTypeRLS37 = 34; -- \u0420\u041b\u0421-37 --wsTypeT80 = 35; --wsTypeTiagach = 36; -- \u0422\u044f\u0433\u0430\u0447 \u0434\u043b\u044f \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432\u0430 --wsTypeTPZ = 37; wsTypeUAZ469 = 38; --wsTypeUragan = 39; wsTypeUral375 = 40; wsTypeUral375PBU = 41; --wsTypeZapros = 43; wsTypeZIL135 = 44; wsTypeElektrovoz = 45; -- \u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0432\u043e\u0437 wsTypeBus = 46; -- \u0410\u0432\u0442\u043e\u0431\u0443\u0441 wsTypeVAZ = 47; -- \u041b\u0435\u0433\u043a\u043e\u0432\u043e\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c wsTypeTeplowoz = 48; -- \u0422\u0435\u043f\u043b\u043e\u0432\u043e\u0437 wsTypeTrolebus = 49; -- \u0422\u0440\u043e\u043b\u043b\u0435\u0439\u0431\u0443\u0441 wsTypeWCisternaBLUE = 50; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWCisternaYELLOW = 98; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWGruz = 51; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWGruzOtkr = 52; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWagonPlatforma= 53; -- \u0412\u0430\u0433\u043e\u043d-\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 wsTypeWagonPass = 54; -- \u0412\u0430\u0433\u043e\u043d \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 --wsTypeRadioSt = 55; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a wsTypeKAMAZ_Fire = 56; -- \u041f\u043e\u0436\u0430\u0440\u043d\u044b\u0439 \u041a\u0430\u043c\u0410\u0417 wsTypeKAMAZ_Tent = 57; -- \u041a\u0430\u043c\u0410\u0417 \u0441 \u0442\u0435\u043d\u0442\u043e\u043c wsTypeLAZ_695 = 58; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a --wsType2C1 = 59; -- C\u0410\u0423 --wsTypeBMP3 = 60; -- \u0411\u041c\u041f-3 --wsTypeM2Bradley = 61; -- \u0411\u041c\u041f --wsTypeMCV80 = 62; -- \u0411\u041c\u041f wsType_GenericMLRS = 63; -- \u0420\u0421\u0417\u041e --wsTypeM_60 = 64; -- \u0422\u0430\u043d\u043a \u041c-60 --wsTypeLeo1 = 65; -- \u0422\u0430\u043d\u043a Leo1 --wsTypeBTR_D = 66; -- \u0411\u0422\u0420-\u0414 wsTypeGAZ_66 = 67; -- GAZ-66 wsTypeGAZ_3307 = 68; -- GAZ-3307 wsTypeGAZ_3308 = 69; -- GAZ-3308 wsTypeMAZ_6303 = 70; -- MAZ-6303 wsTypeZIL_4334 = 71; -- ZIL-4334 --wsTypePredator_GCS = 72; --\u041a\u041f \u0434\u043b\u044f UAV Predator --wsTypePredator_TrojanSpirit = 73;--\u0421\u0442\u0430\u043d\u0446\u0438\u044f \u0441\u0432\u044f\u0437\u0438 \u0434\u043b\u044f UAV Predator --wsTypeZIL_SKP_11 = 74; --\u0421\u041a\u041f-11 \u041f\u0435\u0440\u0435\u0434\u0432\u0438\u0436\u043d\u043e\u0439 \u041a\u041f \u0434\u043b\u044f \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u043f\u043b\u043e\u0449\u0430\u0434\u043e\u043a \u0438 \u043c\u0430\u043b\u044b\u0445 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 wsTypeURAL_4320T = 75; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320 \u0441 \u0442\u0435\u043d\u0442\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043a\u0443\u0437\u043e\u0432\u043e\u043c --wsTypeURAL_4320_31 = 76; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320-31 \u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0432\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u0431\u0438\u043d\u043e\u0439 --wsTypeURAL_ATsP_6 = 77; --\u041f\u043e\u0436\u0430\u0440\u043d\u0430\u044f \u043c\u0430\u0448\u0438\u043d\u0430 \u0423\u0440\u0430\u043b \u0410\u0426\u041f-6 --wsTypeZIL_APA_80 = 78; --\u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043d\u044b\u0439 \u043f\u0443\u0441\u043a\u043e\u0432\u043e\u0439 \u0430\u0433\u0440\u0435\u0433\u0430\u0442 \u0417\u0438\u041b \u0410\u041f\u0410-80 wsTypeZIL_131_KUNG = 79; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0417\u0438\u041b-131 \u041a\u0423\u041d\u0413 wsType_Stryker = 80; --wsTypeM1126_Stryker_ICV = 80; --\u0411\u0422\u0420 M1126 Stryker ICV --wsTypeM1128_Stryker_MGS = 81; --\u0411\u0422\u0420 M1128 Stryker MGS --wsTypeM1134_Stryker_ATGM = 82; --\u0411\u0422\u0420 M1134 Stryker ATGM --wsTypeMTLB = 83; --wsTypeBTR80 = 84; --wsTypeT72 = 85; --wsTypeT55 = 86; --wsTypeM1043 = 87; -- \u0445\u0430\u043c\u043c\u0435\u0440 + M2 --wsTypeM1045 = 88; -- \u0445\u0430\u043c\u043c\u0435\u0440 + TOW --wsTypeLeClerc = 89; wsType_GenericInfantry = 90; --wsTypeRPG = 90; --wsTypeAutogun = 91; --wsTypeHEMTT_M978 = 92; --wsTypeSoldier_AK = 93; --wsTypeSoldier_RPG = 94; --wsTypeBOMAN = 95; wsType_GenericFort = 96; --wsTypeSandbox = 96; --wsTypeBunker = 97; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastTankType --LastTankType = wsTypeBunker;-- \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e Tank-\u0430 wsTypeSteamLocomotive = 99; ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ --************************************************* -- \u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0434\u043b\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0431\u043b\u0443\u0447\u0435\u043d\u0438\u0438 !!! \u043d\u0435 \u0432\u0445\u043e\u0434\u044f\u0442 \u0432 Level 1,2,3,4--* wsRadarAir = 101;-- wsRadarLongRange = 102;-- wsRadarMidRange = 103;-- wsRadarShrtRange = 104;-- wsRadarEWS = 105;-- wsRadarEngagement = 106;-- wsTypeLauncher = 107; wsTypeComandPost = 108; wsRadarOptical = 109; wsRadarAWACS = 110; wsRadarActiveHoming = 111; -- \u041f\u0443\u0448\u043a\u0438 Gun__ = 241; -- \u043f\u0435\u0440\u0435\u0434\u043d\u044f\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 Gun__1= 242; -- \u043a\u043e\u0440\u043c\u043e\u0432\u0430\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438 \u0441 \u043f\u043e\u0434\u0432\u0435\u0441\u043a\u0430\u043c\u0438 -- wsType_Weapon, wsType_Missile(Bomb), wsType_Container MBD_FAB_100 = 1; -- MDB & 6 FAB-100 MBD_FAB_250 = 2; -- MDB & 6 FAB-250 MBD_FAB_500 = 3; -- MDB & 6 FAB-500 MBD_BETAB_250 = 4; -- MDB & 6 BETAB-250 MBD_ODAB = 5; -- MDB & 6 ODAB MBD_PB_250 = 6; -- MDB & 6 PB-250 MBD_RBK_250 = 7; -- MDB & 6 RBK-250 MBD_RBK_500AO = 8; -- MDB & 6 RBK-500AO MBD_RBK_500SOAB = 9; -- MDB & 6 RBK-500SOAB MBD_ZAB = 10; -- MDB & 6 ZAB MBD_CBU_97 = 11; -- MDB & 6 CBU-97 MBD_M_117 = 12; -- MDB & 6 M-117AB MBD_MK_81 = 13; -- MDB & 6 MK-81 MBD_MK_82 = 14; -- MDB & 6 MK-84 MBD_Rockeye = 15; -- MDB & 6 Rockeye MBD_3_FAB_100 = 16; -- MDB-3 & 3 FAB-100 MBD_3_FAB_250 = 17; -- MDB-3 & 3 FAB-250 MBD_3_FAB_500 = 18; -- MDB-3 & 3 FAB-500 MBD_3_BETAB_250 = 19; -- MDB-3 & 3 BETAB-250 MBD_3_ODAB = 20; -- MDB-3 & 3 ODAB MBD_3_PB_250 = 21; -- MDB-3 & 3 PB-250 MBD_3_RBK_250 = 22; -- MDB-3 & 3 RBK-250 MBD_3_RBK_500AO = 23; -- MDB-3 & 3 RBK-500AO MBD_3_RBK_500SOAB = 24; -- MDB-3 & 3 RBK-500SOAB MBD_3_ZAB = 25; -- MDB-3 & 3 ZAB MBD_3_CBU_97 = 26; -- MDB-3 & 3 CBU-97 MBD_3_M_117 = 27; -- MDB-3 & 3 M-117AB MBD_3_MK_81 = 28; -- MDB-3 & 3 MK-81 MBD_3_MK_82 = 29; -- MDB-3 & 3 MK-84 MBD_3_Rockeye = 30; -- MDB-3 & 3 Rockeye MBD_3_GBU_16 = 31; -- MDB-3 & 3 GBU_16 MBD_4_FAB_100 = 32; -- MDB-4 & 4 FAB-100 LAU_88_AGM_65K = 33; -- LAU_88 & 3 AGM-65K TU_22_FAB_100 = 34; -- TU-22M3-MBD & 9 FAB-100 TU_22_FAB_250 = 35; -- TU-22M3-MBD & 9 FAB-250 TU_22_BETAB_250 = 36; -- TU-22M3-MBD & 9 BETAB-250 TU_22_PB_250 = 37; -- TU-22M3-MBD & 9 PB-250 TU_22_RBK_250 = 38; -- TU-22M3-MBD & 9 RBK_250 TU_22_FAB_500 = 39; -- TU-22M3-MBD & 6 FAB-500 TU_22_BETAB_500 = 40; -- TU-22M3-MBD & 6 BETAB_500 TU_22_BETAB_500SP = 41; -- TU-22M3-MBD & 6 BETAB_500SP TU_22_ODAB = 42; -- TU-22M3-MBD & 6 ODAB TU_22_RBK_500AO = 43; -- TU-22M3-MBD & 6 RBK_500AO TU_22_RBK_500SOAB = 44; -- TU-22M3-MBD & 6 RBK_500SOAB TU_22_ZAB = 45; -- TU-22M3-MBD & 6 ZAB VICHR = 46; -- Vikhr (AT-12) {air-tank} VICHR_M = 47; -- Vikhr-M (AT-X-16) {air-tank} LAU_88_AGM_65D = 48; -- LAU_88 & 3 AGM-65D LAU_88_AGM_65E = 49; -- LAU_88 & 3 AGM-65E MBD_A10_2_AIM_9 = 50; -- MBD_A10_2 & 2 AIM_9 MBD_F2_2_Mk_82 = 51; -- MBD F2_2 & 2 Mk_82 MBD_F2_2_Mk_83 = 52; -- MBD F2_2 & 2 Mk_83 MBD_F2_2_Puma = 53; -- MBD F2_2 & 2 Puma MBD_F2_2_BL_755 = 54; -- MBD F2_2 & 2 BL_755 MBD_F2_2_ROCKEYE = 55; -- MBD F2_2 & 2 ROCKEYE MBD_F2_2_ALARM = 56; -- MBD F2_2 & 2 ALARM MBD_3_GBU_22 = 57; -- MDB-3 & 3 GBU_22 AGM_114_Pilon_4 = 58; -- AGM_114_Pilon & 4 AGM_114 AGM_114K_Pilon_4 = 59; -- AGM_114_Pilon & 4 AGM_114K SHTURM = 60; -- SHTURM MER_AIM_9_2 = 61; -- F4_PILON & 2 AIM-9 MER_L_P_60_2 = 62; -- MER_L_P_60 & 2 P-60 MER_R_P_60_2 = 63; -- MER_R_P_60 & 2 P-60 MER_TOW_4 = 64; -- MER_TOW & 4 TOW LAU_88_AGM_65K_2_LEFT = 65; -- LAU_88 & 2(6) AGM_65K (left) LAU_88_AGM_65D_2_LEFT = 66; -- LAU_88 & 2(6) AGM_65D (left) MER_6_AGM_86C = 67; -- MBD_B52_6 & 6 AGM_86C MBD_FAB_250_2 = 68; -- MDB & 2(6) FAB_250 MBD_RBK_250_2 = 69; -- MDB & 2(6) RBK_250 MBD_BetAB_250_2 = 70; -- MDB & 2(6) BetAB_250 TU_22_FAB_1500_2 = 71; -- TU-22M3-MBD & 2(9) FAB-1500 MBD_3_BetAB_500 = 72; -- MDB-3 & 3 BetAB_500 MER_2_F_18_CBU_97 = 73; -- MER_2_F_18 & 2 CBU_97 MER_12_B52_Mk_82 = 74; -- MER_12_B52 & 12 Mk_82 MER_6_BLU_107 = 75; -- MDB & 6 BLU-107 MER_12_B52_M_117 = 76; -- MER_12_B52 & 12 M_117 MER_9_B52_CBU_97 = 77; -- MER_9_B52 & 9 CBU_97 MER_9_B52_Mk_84 = 78; -- MER_9_B52 & 9 Mk_84 MER_9_B52_Rockeye = 79; -- MER_9_B52 & 9 Rockeye MBD_4_RBK_250 = 80; -- MDB-4 & 4 RBK_250 MBD_4_FAB_250 = 81; -- MDB-4 & 4 FAB_250 MER_6_2_PB_250 = 82; -- MBD & 2 PB_250 MER_6_4_PB_250 = 83; -- MBD & 4 PB_250 MER_6_4_FAB_250 = 84; -- MBD & 4 FAB_250 SUU_25_8_LUU_2 = 85; -- SUU_25 & 8 LUU_2B APU_6_VICHR_M = 86; -- APU_6_VIKHR & 6 Vikhr_M S_25L_PU = 87; -- S_25L & PU MBD_2_67U_FAB_100 = 88; -- MBD_2_67U & FAB_100 AKU_58_X_58 = 91; -- AKU_58 & X_58 AKU_58_X_29T = 92; -- AKU_58 & X_29T AKU_58_X_29L = 93; -- AKU_58 & X_29L KMGU_2_AO_2_5RT = 94; -- KMGU-2 & AO_2_5RT KMGU_2_PTAB_2_5KO = 95; -- KMGU-2 & PTAB_2_5KO AKU_58_X_31A = 96; -- AKU-58 & X-31A AKU_58_X_31P = 97; -- AKU-58 & X-31P AKU_58_X_35 = 98; -- AKU-58 & X-35 APU_68_X_25ML = 99; -- APU-68 & X-25ML APU_68_X_25MP = 100; -- APU-68 & X-25MP APU_68_C_24 = 101; -- APU-68 & C-24 APU_73_P_73 = 102; -- APU-73 & R-73 APU_170_P_77 = 103; -- APU-170 & R-77 LAU_88_AGM_65E_2_LEFT = 104; -- LAU_88 & 2(6) AGM_65E (left) LAU_88_AGM_65K_2_RIGHT = 105; -- LAU_88 & 2(6) AGM_65K (right) LAU_88_AGM_65D_2_RIGHT = 106; -- LAU_88 & 2(6) AGM_65D (right) LAU_88_AGM_65E_2_RIGHT = 107; -- LAU_88 & 2(6) AGM_65E (right) LAU_117_AGM_65K = 108; -- LAU_117 & AGM_65K LAU_117_AGM_65D = 109; -- LAU_117 & AGM_65D LAU_117_AGM_65E = 110; -- LAU_117 & AGM_65E -- A-10C TER_3_BDU_33 = 114; LAU_117_AGM_65H = 125; -- LAU_117 & AGM_65H LAU_117_AGM_65G = 126; -- LAU_117 & AGM_65G TER_3_GBU_12 = 127 ; -- BRU-42 3*GBU_12 LAU_105_1_AIM_9M_L = 128 ; LAU_105_2_CATM_9M = 129 ; LAU_105_1_CATM_9M_L = 130 ; TER_3_MK82AIR = 131 ; TER_FREE = 132; LAU_105_FREE = 133; LAU_88_AGM_65H = 134; LAU_88_AGM_65H_2_L = 135 ; LAU_88_AGM_65H_2_R = 136 ; LAU_88_AGM_65H_3 = 137 ; LAU_117_TGM_65D = 138 ; LAU_117_TGM_65G = 139 ; LAU_117_TGM_65H = 140 ; LAU_117_CATM_65K = 141 ; LAU_105_1_AIM_9M_R = 142 ; LAU_105_1_CATM_9M_R = 143 ; TER_3_SUU_25_8_LUU_2 = 144 ; LAU_88_AGM_65D_ONE = 145 ; APU_68_X_25MR = 170 ; AKU_58_X_59 = 171 ;","title":"wsTypes.lua"},{"location":"EDM-Export/Animations/","text":"Animations # Basic Setup # Timeline # Open the EDM Export Properties Panel, and click the reset button. This will configure blenders timeline into the required format. You should now see the timeline change to a range of 0-200, and the timeline marker snap to 100. For DCS animation, I reccomend the Action editor, which can be found by selecting the dope sheet, then changing the mode to Action Editor. Default Interpolation # The EDM format treats the space between keyframes as linear, although by default, blender does not. To change this, navigate to Edit > Preferences then select Animation then change Default Interpolation to Linear Before you start # It is important to apply rotation and scale before starting animations. Location does not need to be applied. Warning If you don't do this, you may find the resulting export have some strange translations that are not visible in blender. Skin Animations # Warning Max 4 bones per deforming mesh","title":"Animations"},{"location":"EDM-Export/Animations/#animations","text":"","title":"Animations"},{"location":"EDM-Export/Animations/#basic-setup","text":"","title":"Basic Setup"},{"location":"EDM-Export/Animations/#timeline","text":"Open the EDM Export Properties Panel, and click the reset button. This will configure blenders timeline into the required format. You should now see the timeline change to a range of 0-200, and the timeline marker snap to 100. For DCS animation, I reccomend the Action editor, which can be found by selecting the dope sheet, then changing the mode to Action Editor.","title":"Timeline"},{"location":"EDM-Export/Animations/#default-interpolation","text":"The EDM format treats the space between keyframes as linear, although by default, blender does not. To change this, navigate to Edit > Preferences then select Animation then change Default Interpolation to Linear","title":"Default Interpolation"},{"location":"EDM-Export/Animations/#before-you-start","text":"It is important to apply rotation and scale before starting animations. Location does not need to be applied. Warning If you don't do this, you may find the resulting export have some strange translations that are not visible in blender.","title":"Before you start"},{"location":"EDM-Export/Animations/#skin-animations","text":"Warning Max 4 bones per deforming mesh","title":"Skin Animations"},{"location":"EDM-Export/Lights/","text":"Lights # DCS has two types of lights, lights that shine on the ground, and visible light sources Fake Omni # Fake Spot # #","title":"Lights"},{"location":"EDM-Export/Lights/#lights","text":"DCS has two types of lights, lights that shine on the ground, and visible light sources","title":"Lights"},{"location":"EDM-Export/Lights/#fake-omni","text":"","title":"Fake Omni"},{"location":"EDM-Export/Lights/#fake-spot","text":"","title":"Fake Spot"},{"location":"EDM-Export/Lights/#_1","text":"","title":""},{"location":"EDM-Export/Mesh/","text":"Exporting A Mesh to DCS # Preparing the Material # To export your first mesh into the .edm format, start with a blank blender cube, as seen below. The \"Front\" of your model faces positive X, so be sure to face the nose of your vehicle or aircraft towards positive X. Note Make sure your mesh has its Rotation and scale applied, this can be done by selecting your mesh, pressing CTRL + A and selecting Rotation and Scale Switch to the shading tab, if the cube does not have a material by default, create one. Next, We will need to configure the material nodes with the EDM Materials. First, remove the default Principled BSDF node, but leave the Material Output Node. Next, Either by pressing SHIFT + A or by clicking Add in the Node Editor, navigate to EDM Materials > Material - Default. With the EDM_Default_Material Node in place, connect the BSDF point of the EDM material to the Surface point of the Material Output . An example of this can be seen below. Exporting to EDM # We're now ready to export our cube to an .edm file! Navigate to File > Export > Eagle Dynamics Model (.edm) Then Name and save your file in your desired location by clicking export to EDM Opening in ModelViewer # Open ModelViewer, and go to File > Load Model or CTRL + N Navigate to your edm file, select it, then press load You should now see a white cube, very similar to the image below. Multiple Meshes/Materials # Any object with an EDM material assigned will export to DCS, if you add a second mesh, assign either your existing EDM material, or add a new one, and it will export to DCS Multiple Materials per Mesh # The ED Exporter supports multiple materials per mesh, there is nothing special needed to setup, just all materials in the mesh need to be configured to be EDM materials. Adding a Texture # Back in the node editor, go to Add > Texture > Image Texture Then connect the Color and Alpha points on the image texture to the Base Color and Base Alpha points of the EDM Material Select your image in the Image Texture Node. Your project should look similar to the image below. repeat the steps in Exporting to EDM Then close and re-poen modelviewer, and reload your EDM file Warning Textures will not appear in ModelViewer unless they are properly mounted. A typical working directory structure is: (if this doesnt work, send Hayds_93 a DM on discord and I'll update it) Project/ \u251c\u2500 Shapes/ \u2502 \u2514\u2500 cube.edm \u2514\u2500 Textures/ \u2514\u2500 cube.png RoughMets and Normals # Adding RoughMets and Normals is simple. Add two more Image Texture nodes. Connect the color point of one to RoughMet (Non-Color) and the color point on the other to Normal (Non-Color) The result should look like: Export your model, restart modelviewer, then load in your new model. Note Setting the Color Space fields of the RoughMet and Normal nodes to Non-Color will make blender render the textures properly. However not setting this will not affect the resulting edm export, so can be safely ignored Blender Project Structre # While not necessary, you can bake all LODs (Level of Detail) and the collision model into one .edm file. Starting with an EXPORT Collection, then having sub-collections for collision, and LOD_{LOD_NUMBER}_{LOD_DISTANCE_IN_M} (eg. LOD_0_50 ). Each sub collection should have a copy of the mesh, and they should not share animations or parents. Duplicate the animation empties, then re-apply the actions to the new empties. Common Errors # Index out of range error # If you get an error similar to this: This error is likely to do with material corruption from converting blender versions, to resolve: Open the Blender python console and run: for obj in bpy.context.scene.objects: print(\"Processing object:\", obj.name) if obj.type == 'MESH': # Set the active material index on the object obj.active_material_index = 0 # Validate material indices on the mesh data obj.data.validate_material_indices() Re-Export your mesh","title":"Mesh"},{"location":"EDM-Export/Mesh/#exporting-a-mesh-to-dcs","text":"","title":"Exporting A Mesh to DCS"},{"location":"EDM-Export/Mesh/#preparing-the-material","text":"To export your first mesh into the .edm format, start with a blank blender cube, as seen below. The \"Front\" of your model faces positive X, so be sure to face the nose of your vehicle or aircraft towards positive X. Note Make sure your mesh has its Rotation and scale applied, this can be done by selecting your mesh, pressing CTRL + A and selecting Rotation and Scale Switch to the shading tab, if the cube does not have a material by default, create one. Next, We will need to configure the material nodes with the EDM Materials. First, remove the default Principled BSDF node, but leave the Material Output Node. Next, Either by pressing SHIFT + A or by clicking Add in the Node Editor, navigate to EDM Materials > Material - Default. With the EDM_Default_Material Node in place, connect the BSDF point of the EDM material to the Surface point of the Material Output . An example of this can be seen below.","title":"Preparing the Material"},{"location":"EDM-Export/Mesh/#exporting-to-edm","text":"We're now ready to export our cube to an .edm file! Navigate to File > Export > Eagle Dynamics Model (.edm) Then Name and save your file in your desired location by clicking export to EDM","title":"Exporting to EDM"},{"location":"EDM-Export/Mesh/#opening-in-modelviewer","text":"Open ModelViewer, and go to File > Load Model or CTRL + N Navigate to your edm file, select it, then press load You should now see a white cube, very similar to the image below.","title":"Opening in ModelViewer"},{"location":"EDM-Export/Mesh/#multiple-meshesmaterials","text":"Any object with an EDM material assigned will export to DCS, if you add a second mesh, assign either your existing EDM material, or add a new one, and it will export to DCS","title":"Multiple Meshes/Materials"},{"location":"EDM-Export/Mesh/#multiple-materials-per-mesh","text":"The ED Exporter supports multiple materials per mesh, there is nothing special needed to setup, just all materials in the mesh need to be configured to be EDM materials.","title":"Multiple Materials per Mesh"},{"location":"EDM-Export/Mesh/#adding-a-texture","text":"Back in the node editor, go to Add > Texture > Image Texture Then connect the Color and Alpha points on the image texture to the Base Color and Base Alpha points of the EDM Material Select your image in the Image Texture Node. Your project should look similar to the image below. repeat the steps in Exporting to EDM Then close and re-poen modelviewer, and reload your EDM file Warning Textures will not appear in ModelViewer unless they are properly mounted. A typical working directory structure is: (if this doesnt work, send Hayds_93 a DM on discord and I'll update it) Project/ \u251c\u2500 Shapes/ \u2502 \u2514\u2500 cube.edm \u2514\u2500 Textures/ \u2514\u2500 cube.png","title":"Adding a Texture"},{"location":"EDM-Export/Mesh/#roughmets-and-normals","text":"Adding RoughMets and Normals is simple. Add two more Image Texture nodes. Connect the color point of one to RoughMet (Non-Color) and the color point on the other to Normal (Non-Color) The result should look like: Export your model, restart modelviewer, then load in your new model. Note Setting the Color Space fields of the RoughMet and Normal nodes to Non-Color will make blender render the textures properly. However not setting this will not affect the resulting edm export, so can be safely ignored","title":"RoughMets and Normals"},{"location":"EDM-Export/Mesh/#blender-project-structre","text":"While not necessary, you can bake all LODs (Level of Detail) and the collision model into one .edm file. Starting with an EXPORT Collection, then having sub-collections for collision, and LOD_{LOD_NUMBER}_{LOD_DISTANCE_IN_M} (eg. LOD_0_50 ). Each sub collection should have a copy of the mesh, and they should not share animations or parents. Duplicate the animation empties, then re-apply the actions to the new empties.","title":"Blender Project Structre"},{"location":"EDM-Export/Mesh/#common-errors","text":"","title":"Common Errors"},{"location":"EDM-Export/Mesh/#index-out-of-range-error","text":"If you get an error similar to this: This error is likely to do with material corruption from converting blender versions, to resolve: Open the Blender python console and run: for obj in bpy.context.scene.objects: print(\"Processing object:\", obj.name) if obj.type == 'MESH': # Set the active material index on the object obj.active_material_index = 0 # Validate material indices on the mesh data obj.data.validate_material_indices() Re-Export your mesh","title":"Index out of range error"},{"location":"EDM-Export/Overview/","text":"Eagle Dynamics DCS Blender Export Plugin # Intro # I've compiled this documentation since the docs included with the plugin in the manual folder are out of date, and complete, with poor formatting. However the template EDM files are very useful. Note There are no changelogs or any public info about this other than what is included in the downloaded .zip Warning This guide assumes general blender knowledge, including materials, animation. Blender Versions # The exporter works completely on Blender 4.2.3 LTS . It seems to work on Blender 3.6.0 LTS although I have not verified this personally. Blender 4.5.0 LTS Does NOT work, theres an issue with how Blender updated the materials API. Installation # The Blender plugin can be downloaded from here Install the .zip file into blender in edit > preferences. Note At time of writing, the plugin has not been updated since March 11 2025. The plugin is still work in progress, and some features will not work. Download Examples # I have made the files used in this guide available to download from the links below. Cube Example Blender File Texture Animation Test Blender File Skin Animation Test Blender File Help me # Feel free to create a pull request and contribute your findings","title":"Overview"},{"location":"EDM-Export/Overview/#eagle-dynamics-dcs-blender-export-plugin","text":"","title":"Eagle Dynamics DCS Blender Export Plugin"},{"location":"EDM-Export/Overview/#intro","text":"I've compiled this documentation since the docs included with the plugin in the manual folder are out of date, and complete, with poor formatting. However the template EDM files are very useful. Note There are no changelogs or any public info about this other than what is included in the downloaded .zip Warning This guide assumes general blender knowledge, including materials, animation.","title":"Intro"},{"location":"EDM-Export/Overview/#blender-versions","text":"The exporter works completely on Blender 4.2.3 LTS . It seems to work on Blender 3.6.0 LTS although I have not verified this personally. Blender 4.5.0 LTS Does NOT work, theres an issue with how Blender updated the materials API.","title":"Blender Versions"},{"location":"EDM-Export/Overview/#installation","text":"The Blender plugin can be downloaded from here Install the .zip file into blender in edit > preferences. Note At time of writing, the plugin has not been updated since March 11 2025. The plugin is still work in progress, and some features will not work.","title":"Installation"},{"location":"EDM-Export/Overview/#download-examples","text":"I have made the files used in this guide available to download from the links below. Cube Example Blender File Texture Animation Test Blender File Skin Animation Test Blender File","title":"Download Examples"},{"location":"EDM-Export/Overview/#help-me","text":"Feel free to create a pull request and contribute your findings","title":"Help me"},{"location":"UsefulBits/ModelViewer/","text":"ModelViewer # Loading Textures # Some Additional configuration is needed to load textures from your custom EDMs. Navigate to \"C:\\Users\\{YOUR_USERNAME}\\Saved Games\\edModelViewerTrunk\\\" and open the autoexec.lua file, if it doesn't exist, create it. Copy and paste this lua code into the autoexec.lua file. Then edit line 13 to point to your saved games/DCS install. This could look like: local saved_games_path = \"C:/Users/{YOUR_USERNAME}/Saved Games/DCS/\" local saved_games_path = \"C:/Users/{YOUR_USERNAME}/Saved Games/DCS.OpenBeta/\" Leave everything else untouched and you're good to go log.set_output('animator-log', 'ANIMATOR', log.ALL, log.MESSAGE) --autoexecute sample for model viewer --mount_vfs_liveries_path(\"Mods/aircrafts/Wunderluft/Liveries\") --mount_vfs_texture_path(\"Mods/aircrafts/Wunderluft/Textures/base_zip_package\") --LoadModel(\"Bazar/World/Shapes/A-10.edm\") --LoadLivery(\"A-10C\",\"184th FS Arkansas ANG, Fort Smith (FS)\") --SetArgument(0,1) --SetArgument(3,1) --SetArgument(5,0.75) local saved_games_path = \"C:/Users/username/Saved Games/DCS/\" -- Edit me with your Saved games path animator = { statistics_enabled = true; } local lfs = require(\"lfs\") local function service_file(file) return file == \".\" or file == \"..\" or file == \".svn\" or file == \"_svn\" end function scan_for_environment_cubes(path) local lower_case = path:lower() for file in lfs.dir(path) do if not service_file(file) then local fn = path..\"/\"..file local attrMode = lfs.attributes(fn, \"mode\") if attrMode == \"file\" then local ext = string.sub(file,-4) if '.dds' == ext then AddEnvironmentMap(file) end end end end end function scan_for_textures(path) local lower_case = path:lower() if lower_case:find(\"liveries\") then mount_vfs_liveries_path(path) return end local is_texture_path = lower_case:find(\"texture\") ~= nil local mounted_already = false for file in lfs.dir(path) do if not service_file(file) then local fn = path..\"/\"..file local attr = lfs.attributes (fn) if attr.mode == \"directory\" then scan_for_textures(fn) elseif is_texture_path then local ext = string.sub(file,-4) if '.zip' == ext then mount_vfs_texture_path(fn) elseif not mounted_already and ( '.dds' == ext or '.bmp' == ext or '.jpg' == ext or '.png' == ext or '.tga' == ext) then mount_vfs_texture_path(path) mounted_already = false end end end end end function scan_for_environment_cubes(path) local lower_case = path:lower() for file in lfs.dir(path) do if not service_file(file) then local fn = path..\"/\"..file local attrMode = lfs.attributes(fn, \"mode\") if attrMode == \"file\" then local ext = string.sub(file,-4) if '.dds' == ext then AddEnvironmentMap(file) end end end end end print(\"----------------------------------------------------------------\") print(\"scan for environment cubes\") print(\"----------------------------------------------------------------\") scan_for_environment_cubes(\"Bazar/EffectViewer/envcubes\") print(\"scan done\") print(\"----------------------------------------------------------------\") print(\"mount extra stuff\") print(\"----------------------------------------------------------------\") scan_for_textures(saved_games_path .. \"Mods\") -- Your path Check DCS or OpenBeta scan_for_textures(saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta scan_for_textures(saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta scan_for_textures(saved_games_path .. \"Liveries\") -- Your path Check DCS or OpenBeta print(\"scan done\") print(\"----------------------------------------------------------------\") mount_vfs_liveries_path (saved_games_path .. \"Liveries\") -- Your path Check DCS or OpenBeta mount_vfs_textures_path (saved_games_path .. \"Liveries\") -- Your path Check DCS or OpenBeta mount_vfs_liveries_path (\"CoreMods/tech/USS_Nimitz/animations/liveries\") mount_vfs_animations_path (\"CoreMods/tech/USS_Nimitz/animations/animations\") mount_vfs_models_path (\"CoreMods/tech/USS_Nimitz/animations/models\") mount_vfs_textures_path (\"CoreMods/tech/USS_Nimitz/animations/textures\") mount_vfs_liveries_path (\"CoreMods/tech/Animals/Liveries\") mount_vfs_models_path (\"CoreMods/tech/Animals/models\") mount_vfs_textures_path (\"CoreMods/tech/Animals/Textures\") mount_vfs_animations_path (\"CoreMods/tech/Animals/animations\") mount_vfs_models_path (\"CoreMods/characters/models\") mount_vfs_textures_path (\"CoreMods/characters/textures\") mount_vfs_animations_path (\"CoreMods/characters/animations\") mount_vfs_animations_path (\"Mods/tech/WIP/Animations\") mount_vfs_models_path (\"Mods/tech/WIP/Shapes\") mount_vfs_textures_path(\"Mods/terrains/Caucasus/Models/Communication/Communication.texture.zip\") mount_vfs_liveries_path (saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta mount_vfs_models_path (saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta mount_vfs_textures_path (saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta mount_vfs_liveries_path (saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta mount_vfs_models_path (saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta mount_vfs_textures_path (saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta print(\"done\") print(\"----------------------------------------------------------------\")","title":"Modelviewer"},{"location":"UsefulBits/ModelViewer/#modelviewer","text":"","title":"ModelViewer"},{"location":"UsefulBits/ModelViewer/#loading-textures","text":"Some Additional configuration is needed to load textures from your custom EDMs. Navigate to \"C:\\Users\\{YOUR_USERNAME}\\Saved Games\\edModelViewerTrunk\\\" and open the autoexec.lua file, if it doesn't exist, create it. Copy and paste this lua code into the autoexec.lua file. Then edit line 13 to point to your saved games/DCS install. This could look like: local saved_games_path = \"C:/Users/{YOUR_USERNAME}/Saved Games/DCS/\" local saved_games_path = \"C:/Users/{YOUR_USERNAME}/Saved Games/DCS.OpenBeta/\" Leave everything else untouched and you're good to go log.set_output('animator-log', 'ANIMATOR', log.ALL, log.MESSAGE) --autoexecute sample for model viewer --mount_vfs_liveries_path(\"Mods/aircrafts/Wunderluft/Liveries\") --mount_vfs_texture_path(\"Mods/aircrafts/Wunderluft/Textures/base_zip_package\") --LoadModel(\"Bazar/World/Shapes/A-10.edm\") --LoadLivery(\"A-10C\",\"184th FS Arkansas ANG, Fort Smith (FS)\") --SetArgument(0,1) --SetArgument(3,1) --SetArgument(5,0.75) local saved_games_path = \"C:/Users/username/Saved Games/DCS/\" -- Edit me with your Saved games path animator = { statistics_enabled = true; } local lfs = require(\"lfs\") local function service_file(file) return file == \".\" or file == \"..\" or file == \".svn\" or file == \"_svn\" end function scan_for_environment_cubes(path) local lower_case = path:lower() for file in lfs.dir(path) do if not service_file(file) then local fn = path..\"/\"..file local attrMode = lfs.attributes(fn, \"mode\") if attrMode == \"file\" then local ext = string.sub(file,-4) if '.dds' == ext then AddEnvironmentMap(file) end end end end end function scan_for_textures(path) local lower_case = path:lower() if lower_case:find(\"liveries\") then mount_vfs_liveries_path(path) return end local is_texture_path = lower_case:find(\"texture\") ~= nil local mounted_already = false for file in lfs.dir(path) do if not service_file(file) then local fn = path..\"/\"..file local attr = lfs.attributes (fn) if attr.mode == \"directory\" then scan_for_textures(fn) elseif is_texture_path then local ext = string.sub(file,-4) if '.zip' == ext then mount_vfs_texture_path(fn) elseif not mounted_already and ( '.dds' == ext or '.bmp' == ext or '.jpg' == ext or '.png' == ext or '.tga' == ext) then mount_vfs_texture_path(path) mounted_already = false end end end end end function scan_for_environment_cubes(path) local lower_case = path:lower() for file in lfs.dir(path) do if not service_file(file) then local fn = path..\"/\"..file local attrMode = lfs.attributes(fn, \"mode\") if attrMode == \"file\" then local ext = string.sub(file,-4) if '.dds' == ext then AddEnvironmentMap(file) end end end end end print(\"----------------------------------------------------------------\") print(\"scan for environment cubes\") print(\"----------------------------------------------------------------\") scan_for_environment_cubes(\"Bazar/EffectViewer/envcubes\") print(\"scan done\") print(\"----------------------------------------------------------------\") print(\"mount extra stuff\") print(\"----------------------------------------------------------------\") scan_for_textures(saved_games_path .. \"Mods\") -- Your path Check DCS or OpenBeta scan_for_textures(saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta scan_for_textures(saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta scan_for_textures(saved_games_path .. \"Liveries\") -- Your path Check DCS or OpenBeta print(\"scan done\") print(\"----------------------------------------------------------------\") mount_vfs_liveries_path (saved_games_path .. \"Liveries\") -- Your path Check DCS or OpenBeta mount_vfs_textures_path (saved_games_path .. \"Liveries\") -- Your path Check DCS or OpenBeta mount_vfs_liveries_path (\"CoreMods/tech/USS_Nimitz/animations/liveries\") mount_vfs_animations_path (\"CoreMods/tech/USS_Nimitz/animations/animations\") mount_vfs_models_path (\"CoreMods/tech/USS_Nimitz/animations/models\") mount_vfs_textures_path (\"CoreMods/tech/USS_Nimitz/animations/textures\") mount_vfs_liveries_path (\"CoreMods/tech/Animals/Liveries\") mount_vfs_models_path (\"CoreMods/tech/Animals/models\") mount_vfs_textures_path (\"CoreMods/tech/Animals/Textures\") mount_vfs_animations_path (\"CoreMods/tech/Animals/animations\") mount_vfs_models_path (\"CoreMods/characters/models\") mount_vfs_textures_path (\"CoreMods/characters/textures\") mount_vfs_animations_path (\"CoreMods/characters/animations\") mount_vfs_animations_path (\"Mods/tech/WIP/Animations\") mount_vfs_models_path (\"Mods/tech/WIP/Shapes\") mount_vfs_textures_path(\"Mods/terrains/Caucasus/Models/Communication/Communication.texture.zip\") mount_vfs_liveries_path (saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta mount_vfs_models_path (saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta mount_vfs_textures_path (saved_games_path .. \"Mods/Aircraft\") -- Your path Check DCS or OpenBeta mount_vfs_liveries_path (saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta mount_vfs_models_path (saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta mount_vfs_textures_path (saved_games_path .. \"Mods/Tech\") -- Your path Check DCS or OpenBeta print(\"done\") print(\"----------------------------------------------------------------\")","title":"Loading Textures"}]}
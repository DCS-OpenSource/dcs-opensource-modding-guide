{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DCS Modding Docs # Welcome to the DCS OpenSource communities combined knowledge, this document is not meant to be a complete guide for making a mod. Instead, it serves as a lookup and reference for the many available functions DCS provides. This document will be evolving as new things get added, or discovered. Warning Not all functions have been tested, if you find any errors, please let the team know.","title":"Home"},{"location":"#dcs-modding-docs","text":"Welcome to the DCS OpenSource communities combined knowledge, this document is not meant to be a complete guide for making a mod. Instead, it serves as a lookup and reference for the many available functions DCS provides. This document will be evolving as new things get added, or discovered. Warning Not all functions have been tested, if you find any errors, please let the team know.","title":"DCS Modding Docs"},{"location":"Aircraft/Lua/LockOnOptions/","text":"LockOn_Options # The LockOn_Options table provides several useful parameters and values. avionics_language # String representation of avionics language Usage local lang = LockOn_Options.avionics_language cockpit # Table containing cockpit-related options. Usage local cockpitOptions = LockOn_Options.cockpit cockpit_language # String representation of the cockpit language. Usage local cockpitLang = LockOn_Options.cockpit_language common_ground_script_path # String path to the CA (Combined Arms) cockpit scripts. Usage local caPath = LockOn_Options.common_ground_script_path common_script_path # String path to the common cockpit scripts. Usage local commonPath = LockOn_Options.common_script_path date # Table containing the current date (day, month, year). Usage local date = LockOn_Options.date -- date.day, date.month, date.year flight # Table containing flight-related options. Usage local flightOptions = LockOn_Options.flight init_conditions # Get the state of the spawn. Useful for configuring your aircraft depending on the initial state. In Air Hot: string | \"AIR_HOT\" On Ground Hot: string | \"GROUND_HOT\" Cold Start: Unknown (see usage) Usage local birth = LockOn_Options.init_conditions.birth_place if birth == \"GROUND_HOT\" or birth == \"AIR_HOT\" then -- hot start init else -- cold start init end measurement_system # String indicating the measurement system in use. Usage local system = LockOn_Options.measurement_system mission # Table containing mission-related options. Usage local mission = LockOn_Options.mission screen # Table containing screen parameters (aspect, height, width). Usage local screen = LockOn_Options.screen -- screen.aspect, screen.height, screen.width script_path # String path to the cockpit scripts. Usage local scriptPath = LockOn_Options.script_path time # Table containing the current time (hours, minutes, seconds). Usage local time = LockOn_Options.time -- time.hours, time.minutes, time.seconds","title":"LockOn_Options"},{"location":"Aircraft/Lua/LockOnOptions/#lockon_options","text":"The LockOn_Options table provides several useful parameters and values.","title":"LockOn_Options"},{"location":"Aircraft/Lua/LockOnOptions/#avionics_language","text":"String representation of avionics language Usage local lang = LockOn_Options.avionics_language","title":"avionics_language"},{"location":"Aircraft/Lua/LockOnOptions/#cockpit","text":"Table containing cockpit-related options. Usage local cockpitOptions = LockOn_Options.cockpit","title":"cockpit"},{"location":"Aircraft/Lua/LockOnOptions/#cockpit_language","text":"String representation of the cockpit language. Usage local cockpitLang = LockOn_Options.cockpit_language","title":"cockpit_language"},{"location":"Aircraft/Lua/LockOnOptions/#common_ground_script_path","text":"String path to the CA (Combined Arms) cockpit scripts. Usage local caPath = LockOn_Options.common_ground_script_path","title":"common_ground_script_path"},{"location":"Aircraft/Lua/LockOnOptions/#common_script_path","text":"String path to the common cockpit scripts. Usage local commonPath = LockOn_Options.common_script_path","title":"common_script_path"},{"location":"Aircraft/Lua/LockOnOptions/#date","text":"Table containing the current date (day, month, year). Usage local date = LockOn_Options.date -- date.day, date.month, date.year","title":"date"},{"location":"Aircraft/Lua/LockOnOptions/#flight","text":"Table containing flight-related options. Usage local flightOptions = LockOn_Options.flight","title":"flight"},{"location":"Aircraft/Lua/LockOnOptions/#init_conditions","text":"Get the state of the spawn. Useful for configuring your aircraft depending on the initial state. In Air Hot: string | \"AIR_HOT\" On Ground Hot: string | \"GROUND_HOT\" Cold Start: Unknown (see usage) Usage local birth = LockOn_Options.init_conditions.birth_place if birth == \"GROUND_HOT\" or birth == \"AIR_HOT\" then -- hot start init else -- cold start init end","title":"init_conditions"},{"location":"Aircraft/Lua/LockOnOptions/#measurement_system","text":"String indicating the measurement system in use. Usage local system = LockOn_Options.measurement_system","title":"measurement_system"},{"location":"Aircraft/Lua/LockOnOptions/#mission","text":"Table containing mission-related options. Usage local mission = LockOn_Options.mission","title":"mission"},{"location":"Aircraft/Lua/LockOnOptions/#screen","text":"Table containing screen parameters (aspect, height, width). Usage local screen = LockOn_Options.screen -- screen.aspect, screen.height, screen.width","title":"screen"},{"location":"Aircraft/Lua/LockOnOptions/#script_path","text":"String path to the cockpit scripts. Usage local scriptPath = LockOn_Options.script_path","title":"script_path"},{"location":"Aircraft/Lua/LockOnOptions/#time","text":"Table containing the current time (hours, minutes, seconds). Usage local time = LockOn_Options.time -- time.hours, time.minutes, time.seconds","title":"time"},{"location":"Aircraft/Lua/Devices/avLuaDevice/","text":"avLuaDevice # post_initialize() # Called once when you load into your plane, very useful for setting hot/cold start variables. Note Any hot/cold start setup should be put in here. See LockOn_Options.init_conditions for more details. Usage # function post_initalize() print_message_to_user(\"Welcome to your plane\") end update() # Usage # The update function runs once every update_time_step seconds. local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local timer = 0 function update() print_message_to_user(\"Timer: \" .. timer .. \" seconds\") timer = timer + update_time_step end SetCommand() # TODO CockpitEvent() # Usage # The CockpitEvent function can be used to detect certain events happening in game, such as rearming and refueling, wheel chocks and more. Example usage can be seen below local dev = GetSelf() dev:listen_event(\"WheelChocksOn\") function CockpitEvent(event, val) if event == \"WheelChocksOn\" then print_message_to_user(\"Wheel Chocks Equipped\") end end Warning You must use dev:listen_event(eventName) to listen for your event Event List # -- Sourced from a mixture of modding hub and the A-29B -- Rearm/Refuel events dev:listen_event(\"WeaponRearmComplete\") dev:listen_event(\"WeaponRearmFirstStep\") dev:listen_event(\"WeaponRearmSingleStepComplete\") dev:listen_event(\"ReloadDone\") dev:listen_event(\"RefuelDone\") dev:listen_event(\"Repair\") dev:listen_event(\"refuel\") dev:listen_event(\"refuelcomplete\") dev:listen_event(\"refueldone\") dev:listen_event(\"UnlimitedWeaponStationRestore\") dev:listen_event(\"initChaffFlarePayload\") -- Ground Power dev:listen_event(\"GroundPowerOn\") dev:listen_event(\"GroundPowerOff\") -- Ground Air dev:listen_event(\"GroundAirOff\") dev:listen_event(\"GroundAirOn\") dev:listen_event(\"GroundAirFailure\") dev:listen_event(\"GroundAirApplyOn\") dev:listen_event(\"GroundAirApplyOff\") dev:listen_event(\"GroundAirApplyFailure\") -- Wheel Chocks dev:listen_event(\"WheelChocksOn\") dev:listen_event(\"WheelChocksOff\") -- Misc Ground Crew dev:listen_event(\"CanopyOpen\") dev:listen_event(\"CanopyClose\") dev:listen_event(\"setup_HMS\") dev:listen_event(\"setup_NVG\") -- Works the same as release() function as shown in the example device dev:listen_event(\"cockpit_release\") -- Unknown dev:listen_event(\"DisableTurboGear\") dev:listen_event(\"EnableTurboGear\") dev:listen_event(\"switch_datalink\") dev:listen_event(\"LinkNOPtoNet\") dev:listen_event(\"UnlinkNOPfromNet\") dev:listen_event(\"EGI_TurnOff\") dev:listen_event(\"EGI_TurnOn\") dev:listen_event(\"RestoreEGIoperation\") dev:listen_event(\"TISLmodeChange\") dev:listen_event(\"OnNewNetPlane\") release() # The release() function is useful if you need to clean something up that isnt reset by reloading. It is called by DCS when you: Die Reload Return to Menu Change slots Note There isn't really a use for this other than some niche cases, but its available if needed. 99% of the time simply reseting/reloading will be more than enough Usage # function release() print_message_to_user(\"Cleanup\") end Example Device # The below example is a bare bones lua device. This will serve as your primary method of creating systems in lua local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local dev = GetSelf() -- Get the current device object function post_initialize() -- Called once by DCS when you load into the cockpit print_message_to_user(\"Hello from basic device\") end function release() -- Called once by DCS when you die, unload or close the mission end function update() -- Called by DCS one every update_time_step seconds end function SetCommand(command, value) -- Listens for commands from Keybinds or clickables end function CockpitEvent(event,val) -- function called by DCS when event happens end need_to_be_closed = false -- close lua state after initialization Warning You are not able to parse data between different devices as they are seperate global contexts","title":"avLuaDevice"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#avluadevice","text":"","title":"avLuaDevice"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#post_initialize","text":"Called once when you load into your plane, very useful for setting hot/cold start variables. Note Any hot/cold start setup should be put in here. See LockOn_Options.init_conditions for more details.","title":"post_initialize()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage","text":"function post_initalize() print_message_to_user(\"Welcome to your plane\") end","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#update","text":"","title":"update()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage_1","text":"The update function runs once every update_time_step seconds. local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local timer = 0 function update() print_message_to_user(\"Timer: \" .. timer .. \" seconds\") timer = timer + update_time_step end","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#setcommand","text":"TODO","title":"SetCommand()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#cockpitevent","text":"","title":"CockpitEvent()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage_2","text":"The CockpitEvent function can be used to detect certain events happening in game, such as rearming and refueling, wheel chocks and more. Example usage can be seen below local dev = GetSelf() dev:listen_event(\"WheelChocksOn\") function CockpitEvent(event, val) if event == \"WheelChocksOn\" then print_message_to_user(\"Wheel Chocks Equipped\") end end Warning You must use dev:listen_event(eventName) to listen for your event","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#event-list","text":"-- Sourced from a mixture of modding hub and the A-29B -- Rearm/Refuel events dev:listen_event(\"WeaponRearmComplete\") dev:listen_event(\"WeaponRearmFirstStep\") dev:listen_event(\"WeaponRearmSingleStepComplete\") dev:listen_event(\"ReloadDone\") dev:listen_event(\"RefuelDone\") dev:listen_event(\"Repair\") dev:listen_event(\"refuel\") dev:listen_event(\"refuelcomplete\") dev:listen_event(\"refueldone\") dev:listen_event(\"UnlimitedWeaponStationRestore\") dev:listen_event(\"initChaffFlarePayload\") -- Ground Power dev:listen_event(\"GroundPowerOn\") dev:listen_event(\"GroundPowerOff\") -- Ground Air dev:listen_event(\"GroundAirOff\") dev:listen_event(\"GroundAirOn\") dev:listen_event(\"GroundAirFailure\") dev:listen_event(\"GroundAirApplyOn\") dev:listen_event(\"GroundAirApplyOff\") dev:listen_event(\"GroundAirApplyFailure\") -- Wheel Chocks dev:listen_event(\"WheelChocksOn\") dev:listen_event(\"WheelChocksOff\") -- Misc Ground Crew dev:listen_event(\"CanopyOpen\") dev:listen_event(\"CanopyClose\") dev:listen_event(\"setup_HMS\") dev:listen_event(\"setup_NVG\") -- Works the same as release() function as shown in the example device dev:listen_event(\"cockpit_release\") -- Unknown dev:listen_event(\"DisableTurboGear\") dev:listen_event(\"EnableTurboGear\") dev:listen_event(\"switch_datalink\") dev:listen_event(\"LinkNOPtoNet\") dev:listen_event(\"UnlinkNOPfromNet\") dev:listen_event(\"EGI_TurnOff\") dev:listen_event(\"EGI_TurnOn\") dev:listen_event(\"RestoreEGIoperation\") dev:listen_event(\"TISLmodeChange\") dev:listen_event(\"OnNewNetPlane\")","title":"Event List"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#release","text":"The release() function is useful if you need to clean something up that isnt reset by reloading. It is called by DCS when you: Die Reload Return to Menu Change slots Note There isn't really a use for this other than some niche cases, but its available if needed. 99% of the time simply reseting/reloading will be more than enough","title":"release()"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#usage_3","text":"function release() print_message_to_user(\"Cleanup\") end","title":"Usage"},{"location":"Aircraft/Lua/Devices/avLuaDevice/#example-device","text":"The below example is a bare bones lua device. This will serve as your primary method of creating systems in lua local update_time_step = 0.05 make_default_activity(update_time_step) -- sets the device to run every 0.05 seconds local dev = GetSelf() -- Get the current device object function post_initialize() -- Called once by DCS when you load into the cockpit print_message_to_user(\"Hello from basic device\") end function release() -- Called once by DCS when you die, unload or close the mission end function update() -- Called by DCS one every update_time_step seconds end function SetCommand(command, value) -- Listens for commands from Keybinds or clickables end function CockpitEvent(event,val) -- function called by DCS when event happens end need_to_be_closed = false -- close lua state after initialization Warning You are not able to parse data between different devices as they are seperate global contexts","title":"Example Device"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/","text":"avSimpleWeaponSystem # avSimpleWeaponSystem serves as the modders method of interacting with weapons, rearming etc. Note All of the standard functions from avLuaDevice are available in avSimpleWeapon System such as update() or SetCommand() Loading the Device # The device should be configured in device_init.lua as normal, but with \"avSimpleWeaponSystem\" instead of \"avLuaDevice\" creators[devices.WEAPON_SYSTEM] = {\"avSimpleWeaponSystem\" ,LockOn_Options.script_path..\"Systems/weapon_system.lua\"} Warning To use any of the functions listed below, you must add local dev = GetSelf() to the top of your file, this allows you to access the weapon functions from avSimpleWeaponSystem All functions are Zero Indexed, so interacting with Pylon 1 would be done with dev:get_station_info(0) Useful bits # wsTypes # Loading the wsTypes.lua file from the core allows you to reference weapons by type dofile(LockOn_Options.common_script_path..\"../../../Database/wsTypes.lua\") This is useful for determining weapon category in get_station_info() API Reference # Below are the available functions for avSimpleWeaponSystem : Functions marked with [UNVERIFIED] are untested, feel free to contribute fixes. SetDamage() # [UNVERIFIED] drop_chaff() # Dispenses a specified number of chaff cartridges from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED] Parameters # count (number): Number of chaff cartridges to release. dispenser (number): Index of the chaff dispenser to use. drop_flare() # Dispenses a specified number of flares from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED] Parameters # count (number): Number of flares to release. dispenser (number): Index of the flare dispenser to use. get_chaff_count() # Returns the current number of chaff cartridges available. [UNVERIFIED] get_flare_count() # Returns the current number of flares available. [UNVERIFIED] emergency_jettison() # Jettison either all stores, or specific stores if parsed a pylon number Parameters # index (number, optional ): Zero-indexed pylon number to jettison stores from. If omitted, all stores will be jettisoned. emergency_jettison_rack() # Jettisons the entire weapon rack in an emergency. [UNVERIFIED] get_station_info() # Returns a table of information about the indexed pylon See wsTypes above Parameters # index (number): Zero indexed pylon number Returns # -- Rocket pod example -- resulting table station_info = { wsType = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 32, -- wsType_Container level4 = 358, -- ??? }, adapter = { level1 = 0, level2 = 0, level3 = 0, level4 = 0, }, weapon = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 33, -- wsType_Rocket level4 = 276, -- ??? }, CLSID = \"{LAU68_FFAR_MK5HEAT}\" count = 7 -- how many weapons are in the container container = true } Usage # local dev = GetSelf() local pylon = dev:get_station_info(0) -- returns pylon1 info launch_station() # Launches the weapon from the specified station. Parameters # station (number): Zero Indexed station number to launch from. Usage # local dev = GetSelf() local pylon = dev:launch_station(0) -- launch pylon1 select_station() # Selects the specified weapon station. [[UNVERIFIED]] Note As of right now, not sure the use of this, since other functions such as launch or info take an index parameter Parameters # station (number): The station number to select. set_ECM_status() # Sets the status of the ECM system. [[UNVERIFIED]] get_ECM_status() # Returns the current status of the Electronic Countermeasure (ECM) system. [UNVERIFIED] set_target_range() # Sets the target range for the weapon system. [[UNVERIFIED]] set_target_span() # Sets the target span for the weapon system. [[UNVERIFIED]] get_target_range() # Returns the current target range set in the weapon system. [UNVERIFIED] get_target_span() # Returns the current target span set in the weapon system. [UNVERIFIED]","title":"avSimpleWeaponSystem"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#avsimpleweaponsystem","text":"avSimpleWeaponSystem serves as the modders method of interacting with weapons, rearming etc. Note All of the standard functions from avLuaDevice are available in avSimpleWeapon System such as update() or SetCommand()","title":"avSimpleWeaponSystem"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#loading-the-device","text":"The device should be configured in device_init.lua as normal, but with \"avSimpleWeaponSystem\" instead of \"avLuaDevice\" creators[devices.WEAPON_SYSTEM] = {\"avSimpleWeaponSystem\" ,LockOn_Options.script_path..\"Systems/weapon_system.lua\"} Warning To use any of the functions listed below, you must add local dev = GetSelf() to the top of your file, this allows you to access the weapon functions from avSimpleWeaponSystem All functions are Zero Indexed, so interacting with Pylon 1 would be done with dev:get_station_info(0)","title":"Loading the Device"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#useful-bits","text":"","title":"Useful bits"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#wstypes","text":"Loading the wsTypes.lua file from the core allows you to reference weapons by type dofile(LockOn_Options.common_script_path..\"../../../Database/wsTypes.lua\") This is useful for determining weapon category in get_station_info()","title":"wsTypes"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#api-reference","text":"Below are the available functions for avSimpleWeaponSystem : Functions marked with [UNVERIFIED] are untested, feel free to contribute fixes.","title":"API Reference"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#setdamage","text":"[UNVERIFIED]","title":"SetDamage()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#drop_chaff","text":"Dispenses a specified number of chaff cartridges from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED]","title":"drop_chaff()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters","text":"count (number): Number of chaff cartridges to release. dispenser (number): Index of the chaff dispenser to use.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#drop_flare","text":"Dispenses a specified number of flares from a given dispenser. See also : chaff_flare_dispenser in the aircraft definition. [UNVERIFIED]","title":"drop_flare()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_1","text":"count (number): Number of flares to release. dispenser (number): Index of the flare dispenser to use.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_chaff_count","text":"Returns the current number of chaff cartridges available. [UNVERIFIED]","title":"get_chaff_count()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_flare_count","text":"Returns the current number of flares available. [UNVERIFIED]","title":"get_flare_count()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#emergency_jettison","text":"Jettison either all stores, or specific stores if parsed a pylon number","title":"emergency_jettison()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_2","text":"index (number, optional ): Zero-indexed pylon number to jettison stores from. If omitted, all stores will be jettisoned.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#emergency_jettison_rack","text":"Jettisons the entire weapon rack in an emergency. [UNVERIFIED]","title":"emergency_jettison_rack()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_station_info","text":"Returns a table of information about the indexed pylon See wsTypes above","title":"get_station_info()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_3","text":"index (number): Zero indexed pylon number","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#returns","text":"-- Rocket pod example -- resulting table station_info = { wsType = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 32, -- wsType_Container level4 = 358, -- ??? }, adapter = { level1 = 0, level2 = 0, level3 = 0, level4 = 0, }, weapon = { level1 = 4, -- wsType_Weapon level2 = 7, -- wsType_NURS level3 = 33, -- wsType_Rocket level4 = 276, -- ??? }, CLSID = \"{LAU68_FFAR_MK5HEAT}\" count = 7 -- how many weapons are in the container container = true }","title":"Returns"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#usage","text":"local dev = GetSelf() local pylon = dev:get_station_info(0) -- returns pylon1 info","title":"Usage"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#launch_station","text":"Launches the weapon from the specified station.","title":"launch_station()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_4","text":"station (number): Zero Indexed station number to launch from.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#usage_1","text":"local dev = GetSelf() local pylon = dev:launch_station(0) -- launch pylon1","title":"Usage"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#select_station","text":"Selects the specified weapon station. [[UNVERIFIED]] Note As of right now, not sure the use of this, since other functions such as launch or info take an index parameter","title":"select_station()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#parameters_5","text":"station (number): The station number to select.","title":"Parameters"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#set_ecm_status","text":"Sets the status of the ECM system. [[UNVERIFIED]]","title":"set_ECM_status()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_ecm_status","text":"Returns the current status of the Electronic Countermeasure (ECM) system. [UNVERIFIED]","title":"get_ECM_status()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#set_target_range","text":"Sets the target range for the weapon system. [[UNVERIFIED]]","title":"set_target_range()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#set_target_span","text":"Sets the target span for the weapon system. [[UNVERIFIED]]","title":"set_target_span()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_target_range","text":"Returns the current target range set in the weapon system. [UNVERIFIED]","title":"get_target_range()"},{"location":"Aircraft/Lua/Devices/avSimpleWeaponSystem/#get_target_span","text":"Returns the current target span set in the weapon system. [UNVERIFIED]","title":"get_target_span()"},{"location":"Aircraft/Lua/Indicators/controllers/","text":"change texture state does work, see here https://discord.com/channels/319866702840201217/319866817797423104/986595546884087818","title":"Controllers"},{"location":"Aircraft/Lua/Modules/Terrain/","text":"Terrain Module # Loading the module # local Terrain = require(\"terrain\") Warning Non functional or untested functions will be tagged with [UNVERIFIED] TODO: Test functions and verify descriptions Method Params Description Create \u2014 Instantiate or reset the terrain subsystem. FindNearestPoint x, y, range Find the nearest valid point (e.g. on a road) to (x, y) within range . FindOptimalPath x1, y1, x2, y2 Compute the optimal path (e.g. along roads) from (x1, y1) to (x2, y2) . GetHeight x, y Return terrain elevation at (x, y) . GetMGRScoordinates x, y Return the MGRS grid coordinate for (x, y) . GetSeasons \u2014 Return a table of season identifiers or data. GetSurfaceHeightWithSeabed x, y Return both surface elevation and depth of sea bed at (x, y) . GetSurfaceType x, y Return the type of surface (e.g. \u201cwater\u201d, \u201casphalt\u201d) at (x, y) . GetTerrainConfig type Obtain configuration data for terrain subtypes (e.g. \u201cAirdromes\u201d). Init terrain_config, reason, date Initialize terrain data with a config table, reason code, and date. InitLight terrain_config, reason, date Initialize only the lighting component of the terrain system. Release \u2014 Clean up or unload terrain resources. convertLatLonToMeters lat, lon Convert geographic coordinates (latitude, longitude) into simulation meters. convertMGRStoMeters mgrs Convert an MGRS string into simulation meters. convertMetersToLatLon x, y Convert simulation\u2010space meters back to geographic coordinates. findPathOnRoads type, x1, y1, x2, y2 Find a path along \u201croads\u201d or \u201crailroads\u201d between two points. getBeacons \u2014 Retrieve a list of all beacon objects in the terrain. getClosestPointOnRoads type, x, y Find the nearest point on the specified network (\u201croads\u201d or \u201crailroads\u201d) to (x, y) . getClosestValidPoint type, x, y Find the nearest valid point of specified type (e.g. \u201cland\u201d) to (x, y) . getCrossParam \u2014 Retrieve cross\u2010parameter data (undocumented use case). getObjectPosition o Return the map position of a given scene object. getObjectsAtMapPoint mapX, mapY List all objects whose footprint overlaps the map point. getRadio roadnet Get radio frequencies for an airport identified by its road-network string. getRunwayHeading roadnet Return the magnetic heading of the primary runway for the given airport. getRunwayList roadnet Return runway metadata: course, edge names and coordinates. getStandList roadnet Return a list of aircraft stands with locations. getTechSkinByDate day, month Retrieve terrain \u201ctech skin\u201d (appearance) valid on the specified date. getTempratureRangeByDate day, month Return expected temperature range for the given day/month. getTerrainShpare \u2014 (Undocumented\u2014likely returns shape data for terrain meshes.) isVisible x1, alt1, y1, x2, alt2, y2 Raycast LOS check between two points at specified altitudes; returns true if unobstructed. Create # Signature: Terrain.Create() Description: [UNVERIFIED] Instantiate or reset the terrain subsystem. Call this if you need to clear any existing terrain data before re-initializing or running a new mission. Example: -- Start with a fresh terrain state Terrain.Create() FindNearestPoint # Signature: px, py = Terrain.FindNearestPoint(x, y, range) Parameters: - x, y (number): world coordinates from which to search. - range (number): maximum search radius in meters. Returns: - px, py (number): coordinates of the nearest valid point (e.g. on a road). Description: [UNVERIFIED] Searches outward up to range meters and returns the closest point on the specified network. Useful for snapping units to roads or paths. Example: local playerX, playerY = 50000, 75000 local roadX, roadY = Terrain.FindNearestPoint(playerX, playerY, 2000) print(\"Snap to road at:\", roadX, roadY) FindOptimalPath # Signature: pathTable = Terrain.FindOptimalPath(x1, y1, x2, y2) Parameters: - x1, y1 (number): start coordinates. - x2, y2 (number): end coordinates. Returns: - pathTable (table): an array of { x = ..., y = ... } waypoints along the optimal route (e.g. following roads). Description: [UNVERIFIED] Runs a graph search (A or Dijkstra) over the terrain network to produce a drivable path. Example: * local route = Terrain.FindOptimalPath(10000, 20000, 30000, 40000) for i, pt in ipairs(route) do print(i, pt.x, pt.y) end GetHeight # Signature: h = Terrain.GetHeight(x, y) Parameters: - x, y (number): query coordinates. Returns: - h (number): terrain elevation (meters above sea level). Description: Quickly sample the terrain elevation. Example: local elev = Terrain.GetHeight(45000, 82000) print(\"Elevation is\", elev, \"m\") GetMGRScoordinates # Signature: mgrs = Terrain.GetMGRScoordinates(x, y) Parameters: - x, y (number): world coordinates. Returns: - mgrs (string): MGRS grid reference (e.g. \"34TDF1234567890\"). Description: Convert from simulation-space meters to a human-readable MGRS coordinate. Example: local gridRef = Terrain.GetMGRScoordinates(345000, 789000) print(\"Grid:\", gridRef) GetSeasons # Signature: seasons = Terrain.GetSeasons() Returns: - seasons (table): list of available season identifiers (e.g. { \"winter\", \"summer\", ... }). Description: [UNVERIFIED] Fetch the set of seasons for which terrain textures and lighting are defined. Example: for _, season in ipairs(Terrain.GetSeasons()) do print(\"Available season:\", season) end GetSurfaceHeightWithSeabed # Signature: surfaceH, depth = Terrain.GetSurfaceHeightWithSeabed(x, y) Parameters: - x, y (number): coordinates over water. Returns: - surfaceH (number): elevation of the water surface. - depth (number): depth from surface to seabed (positive number). Description: [UNVERIFIED] Useful for amphibious operations to know both water level and bottom depth. Example: local surf, d = Terrain.GetSurfaceHeightWithSeabed(20000, 15000) print(\"Water at\", surf, \"m, seabed\", d, \"m below\") GetSurfaceType # Signature: stype = Terrain.GetSurfaceType(x, y) Parameters: - x, y (number): query location. Returns: - stype (string): surface material. \"land\" , \"sea\" , \"lake\" , \"river\" Description: Detect what kind of surface occupies a coordinate. Example: local mat = Terrain.GetSurfaceType(10200, 20500) print(\"Surface is\", mat) GetTerrainConfig # Signature: cfg = Terrain.GetTerrainConfig(type) Parameters: - type (string): e.g. \"Airdromes\". Returns: - cfg (table): configuration block for that terrain element (bounds, default camera, etc.). Description: [UNVERIFIED] Inspect built-in metadata for things like airfield layout. Example: local airCfg = Terrain.GetTerrainConfig(\"Airdromes\") print(\"Airfield NE bound:\", airCfg.NE_bound.x, airCfg.NE_bound.y) Init # Signature: Terrain.Init(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: local cfg = Terrain.GetTerrainConfig(\"Airdromes\") Terrain.Init(cfg, \"mission_start\", { year=2025, month=7, day=7 }) InitLight # Signature: Terrain.InitLight(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: Terrain.InitLight(airCfg, \"time_change\", { year=2025, month=12, day=1 }) Release # Signature: Terrain.Release() Description: [UNVERIFIED] none. Example: Terrain.Release() convertLatLonToMeters # Signature: x, y = Terrain.convertLatLonToMeters(lat, lon) Parameters: - lat, lon (number): geographic coordinates in degrees. Returns: - x, y (number): simulation meters. Description: Project WGS84 lat/lon into the simulator\u2019s local flat coordinate system. Example: local mx, my = Terrain.convertLatLonToMeters(34.0522, -118.2437) convertMGRStoMeters # Signature: x, y = Terrain.convertMGRStoMeters(mgrs) Parameters: - mgrs (string): MGRS reference. Returns: - x, y (number): simulation meters. Description: Inverse of GetMGRScoordinates. Example: local ux, uy = Terrain.convertMGRStoMeters(\"33TUN1234567890\") convertMetersToLatLon # Signature: lat, lon = Terrain.convertMetersToLatLon(x, y) Parameters: - x, y (number): simulation coordinates. Returns: - lat, lon (number): geographic degrees. Description: Inverse map projection back to WGS84. Example: local \u03c6, \u03bb = Terrain.convertMetersToLatLon(400000, 5000000) findPathOnRoads # Signature: pathTable = Terrain.findPathOnRoads(type, x1, y1, x2, y2) Parameters: - type (string): \"roads\" or \"railroads\". - x1, y1 , x2, y2 (number): endpoints. Returns: - pathTable (table): waypoint array. Description: [UNVERIFIED] none. Example: local trainRoute = Terrain.findPathOnRoads(\"railroads\", 1000, 2000, 8000, 9000) getBeacons # Signature: beacons = Terrain.getBeacons() Returns: - beacons (table): list of beacon objects, each with position and frequency. Description: Enumerate nav-beacons placed in the terrain. Example: for _, b in ipairs(Terrain.getBeacons()) do print(\"Beacon\", b.id, \"at\", b.x, b.y, \"freq\", b.freq) end getClosestPointOnRoads # Signature: px, py = Terrain.getClosestPointOnRoads(type, x, y) Parameters: - type (string): \"roads\" or \"railroads\". - x, y (number): query point. Returns: - px, py (number): on-network coordinates. Description: [UNVERIFIED] none. Example: local rx, ry = Terrain.getClosestPointOnRoads(\"roads\", 12345, 67890) getClosestValidPoint # Signature: px, py = Terrain.getClosestValidPoint(type, x, y) Parameters: - type (string): e.g. \"land\". - x, y (number): input coords. Returns: - px, py (number): nearest valid location of that type. Description: [UNVERIFIED] none. Example: local fx, fy = Terrain.getClosestValidPoint(\"land\", helicopterX, helicopterY) getCrossParam # Signature: param = Terrain.getCrossParam() Returns: - param (any): undocumented cross-parameter data. Description: Only for advanced use\u2014internal terrain tuning. Example: local cp = Terrain.getCrossParam() print(\"Cross param:\", cp) getObjectPosition # Signature: ox, oy = Terrain.getObjectPosition(obj) Parameters: - obj (Object): engine object reference. Returns: - ox, oy (number): its map position. Description: [UNVERIFIED] none. Example: local x, y = Terrain.getObjectPosition(myVehicle) getObjectsAtMapPoint # Signature: list = Terrain.getObjectsAtMapPoint(mapX, mapY) Parameters: - mapX, mapY (number): query location. Returns: - list (table): all objects overlapping that point. Description: [UNVERIFIED] none. Example: local objs = Terrain.getObjectsAtMapPoint(5000, 6000) print(\"Found\", #objs, \"objects\") getRadio # Signature: radios = Terrain.getRadio(roadnet) Parameters: - roadnet (string): airport identifier. Returns: - radios (table): frequency settings for that airfield\u2019s comms. Description: Obtain tower/ground/approach frequencies. Example: local freqs = Terrain.getRadio(\"KSFO_roadnet\") print(freqs.tower, freqs.ground) getRunwayHeading # Signature: hdg = Terrain.getRunwayHeading(roadnet) Parameters: - roadnet (string): airport ID. Returns: - hdg (number): magnetic heading of the primary runway. Description: Useful for HUD wind-correction and runway-alignment cues. Example: local rHdg = Terrain.getRunwayHeading(\"RJTT_roadnet\") print(\"Runway heading:\", rHdg) getRunwayList # Signature: runways = Terrain.getRunwayList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - runways (table): each entry contains: - course (number): runway heading - edge1name (string), edge1x , edge1y (number): name and coordinates of one end - edge2name (string), edge2x , edge2y (number): name and coordinates of the opposite end Description: Enumerate all runways at the specified airfield, returning their endpoints and headings. Example: for _, rw in ipairs(Terrain.getRunwayList(\"EGLL_roadnet\")) do print(\"RW\", rw.edge1name, \"to\", rw.edge2name, \"heading\", rw.course) end getStandList # Signature: stands = Terrain.getStandList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - stands (table): list of parking stands with coordinates. Description: Get gate and parking-spot positions. Example: local gates = Terrain.getStandList(\"KDEN_roadnet\") print(\"First stand at\", gates[1].x, gates[1].y) getTechSkinByDate # Signature: skin = Terrain.getTechSkinByDate(day, month) Parameters: - day, month (number): calendar date. Returns: - skin (any): texture/skin identifier valid on that day. Description: Swap in historical or seasonal terrain skins. Example: local tex = Terrain.getTechSkinByDate(15, 8) -- August 15 getTempratureRangeByDate # Signature: minT, maxT = Terrain.getTempratureRangeByDate(day, month) Parameters: - day, month (number): date. Returns: - minT, maxT (number): expected daily temperature extremes (\u00b0C). Description: Drive weather models or engine performance tables. Example: local lo, hi = Terrain.getTempratureRangeByDate(1, 12) print(\"Dec 1 temps:\", lo, \"to\", hi) getTerrainShpare # Signature: shape = Terrain.getTerrainShpare() Returns: - shape (any): internal terrain mesh data. Description: Undocumented; likely used for low-level mesh queries. Example: local mesh = Terrain.getTerrainShpare() isVisible # Signature: visible = Terrain.isVisible(x1, alt1, y1, x2, alt2, y2) Parameters: - x1, y1, alt1 (number): start point and altitude. - x2, y2, alt2 (number): end point and altitude. Returns: - visible (boolean): true if line-of-sight is unobstructed. Description: Perform a raycast through the terrain to check LOS. Example: if Terrain.isVisible(10000, 50, 20000, 15000, 100, 25000) then print(\"Target in sight!\") end","title":"Terrain"},{"location":"Aircraft/Lua/Modules/Terrain/#terrain-module","text":"","title":"Terrain Module"},{"location":"Aircraft/Lua/Modules/Terrain/#loading-the-module","text":"local Terrain = require(\"terrain\") Warning Non functional or untested functions will be tagged with [UNVERIFIED] TODO: Test functions and verify descriptions Method Params Description Create \u2014 Instantiate or reset the terrain subsystem. FindNearestPoint x, y, range Find the nearest valid point (e.g. on a road) to (x, y) within range . FindOptimalPath x1, y1, x2, y2 Compute the optimal path (e.g. along roads) from (x1, y1) to (x2, y2) . GetHeight x, y Return terrain elevation at (x, y) . GetMGRScoordinates x, y Return the MGRS grid coordinate for (x, y) . GetSeasons \u2014 Return a table of season identifiers or data. GetSurfaceHeightWithSeabed x, y Return both surface elevation and depth of sea bed at (x, y) . GetSurfaceType x, y Return the type of surface (e.g. \u201cwater\u201d, \u201casphalt\u201d) at (x, y) . GetTerrainConfig type Obtain configuration data for terrain subtypes (e.g. \u201cAirdromes\u201d). Init terrain_config, reason, date Initialize terrain data with a config table, reason code, and date. InitLight terrain_config, reason, date Initialize only the lighting component of the terrain system. Release \u2014 Clean up or unload terrain resources. convertLatLonToMeters lat, lon Convert geographic coordinates (latitude, longitude) into simulation meters. convertMGRStoMeters mgrs Convert an MGRS string into simulation meters. convertMetersToLatLon x, y Convert simulation\u2010space meters back to geographic coordinates. findPathOnRoads type, x1, y1, x2, y2 Find a path along \u201croads\u201d or \u201crailroads\u201d between two points. getBeacons \u2014 Retrieve a list of all beacon objects in the terrain. getClosestPointOnRoads type, x, y Find the nearest point on the specified network (\u201croads\u201d or \u201crailroads\u201d) to (x, y) . getClosestValidPoint type, x, y Find the nearest valid point of specified type (e.g. \u201cland\u201d) to (x, y) . getCrossParam \u2014 Retrieve cross\u2010parameter data (undocumented use case). getObjectPosition o Return the map position of a given scene object. getObjectsAtMapPoint mapX, mapY List all objects whose footprint overlaps the map point. getRadio roadnet Get radio frequencies for an airport identified by its road-network string. getRunwayHeading roadnet Return the magnetic heading of the primary runway for the given airport. getRunwayList roadnet Return runway metadata: course, edge names and coordinates. getStandList roadnet Return a list of aircraft stands with locations. getTechSkinByDate day, month Retrieve terrain \u201ctech skin\u201d (appearance) valid on the specified date. getTempratureRangeByDate day, month Return expected temperature range for the given day/month. getTerrainShpare \u2014 (Undocumented\u2014likely returns shape data for terrain meshes.) isVisible x1, alt1, y1, x2, alt2, y2 Raycast LOS check between two points at specified altitudes; returns true if unobstructed.","title":"Loading the module"},{"location":"Aircraft/Lua/Modules/Terrain/#create","text":"Signature: Terrain.Create() Description: [UNVERIFIED] Instantiate or reset the terrain subsystem. Call this if you need to clear any existing terrain data before re-initializing or running a new mission. Example: -- Start with a fresh terrain state Terrain.Create()","title":"Create"},{"location":"Aircraft/Lua/Modules/Terrain/#findnearestpoint","text":"Signature: px, py = Terrain.FindNearestPoint(x, y, range) Parameters: - x, y (number): world coordinates from which to search. - range (number): maximum search radius in meters. Returns: - px, py (number): coordinates of the nearest valid point (e.g. on a road). Description: [UNVERIFIED] Searches outward up to range meters and returns the closest point on the specified network. Useful for snapping units to roads or paths. Example: local playerX, playerY = 50000, 75000 local roadX, roadY = Terrain.FindNearestPoint(playerX, playerY, 2000) print(\"Snap to road at:\", roadX, roadY)","title":"FindNearestPoint"},{"location":"Aircraft/Lua/Modules/Terrain/#findoptimalpath","text":"Signature: pathTable = Terrain.FindOptimalPath(x1, y1, x2, y2) Parameters: - x1, y1 (number): start coordinates. - x2, y2 (number): end coordinates. Returns: - pathTable (table): an array of { x = ..., y = ... } waypoints along the optimal route (e.g. following roads). Description: [UNVERIFIED] Runs a graph search (A or Dijkstra) over the terrain network to produce a drivable path. Example: * local route = Terrain.FindOptimalPath(10000, 20000, 30000, 40000) for i, pt in ipairs(route) do print(i, pt.x, pt.y) end","title":"FindOptimalPath"},{"location":"Aircraft/Lua/Modules/Terrain/#getheight","text":"Signature: h = Terrain.GetHeight(x, y) Parameters: - x, y (number): query coordinates. Returns: - h (number): terrain elevation (meters above sea level). Description: Quickly sample the terrain elevation. Example: local elev = Terrain.GetHeight(45000, 82000) print(\"Elevation is\", elev, \"m\")","title":"GetHeight"},{"location":"Aircraft/Lua/Modules/Terrain/#getmgrscoordinates","text":"Signature: mgrs = Terrain.GetMGRScoordinates(x, y) Parameters: - x, y (number): world coordinates. Returns: - mgrs (string): MGRS grid reference (e.g. \"34TDF1234567890\"). Description: Convert from simulation-space meters to a human-readable MGRS coordinate. Example: local gridRef = Terrain.GetMGRScoordinates(345000, 789000) print(\"Grid:\", gridRef)","title":"GetMGRScoordinates"},{"location":"Aircraft/Lua/Modules/Terrain/#getseasons","text":"Signature: seasons = Terrain.GetSeasons() Returns: - seasons (table): list of available season identifiers (e.g. { \"winter\", \"summer\", ... }). Description: [UNVERIFIED] Fetch the set of seasons for which terrain textures and lighting are defined. Example: for _, season in ipairs(Terrain.GetSeasons()) do print(\"Available season:\", season) end","title":"GetSeasons"},{"location":"Aircraft/Lua/Modules/Terrain/#getsurfaceheightwithseabed","text":"Signature: surfaceH, depth = Terrain.GetSurfaceHeightWithSeabed(x, y) Parameters: - x, y (number): coordinates over water. Returns: - surfaceH (number): elevation of the water surface. - depth (number): depth from surface to seabed (positive number). Description: [UNVERIFIED] Useful for amphibious operations to know both water level and bottom depth. Example: local surf, d = Terrain.GetSurfaceHeightWithSeabed(20000, 15000) print(\"Water at\", surf, \"m, seabed\", d, \"m below\")","title":"GetSurfaceHeightWithSeabed"},{"location":"Aircraft/Lua/Modules/Terrain/#getsurfacetype","text":"Signature: stype = Terrain.GetSurfaceType(x, y) Parameters: - x, y (number): query location. Returns: - stype (string): surface material. \"land\" , \"sea\" , \"lake\" , \"river\" Description: Detect what kind of surface occupies a coordinate. Example: local mat = Terrain.GetSurfaceType(10200, 20500) print(\"Surface is\", mat)","title":"GetSurfaceType"},{"location":"Aircraft/Lua/Modules/Terrain/#getterrainconfig","text":"Signature: cfg = Terrain.GetTerrainConfig(type) Parameters: - type (string): e.g. \"Airdromes\". Returns: - cfg (table): configuration block for that terrain element (bounds, default camera, etc.). Description: [UNVERIFIED] Inspect built-in metadata for things like airfield layout. Example: local airCfg = Terrain.GetTerrainConfig(\"Airdromes\") print(\"Airfield NE bound:\", airCfg.NE_bound.x, airCfg.NE_bound.y)","title":"GetTerrainConfig"},{"location":"Aircraft/Lua/Modules/Terrain/#init","text":"Signature: Terrain.Init(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: local cfg = Terrain.GetTerrainConfig(\"Airdromes\") Terrain.Init(cfg, \"mission_start\", { year=2025, month=7, day=7 })","title":"Init"},{"location":"Aircraft/Lua/Modules/Terrain/#initlight","text":"Signature: Terrain.InitLight(terrain_config, reason, date) Parameters: - terrain_config (table) - reason (any) - date (table): { year=\u2026, month=\u2026, day=\u2026 }. Description: [UNVERIFIED] none. Example: Terrain.InitLight(airCfg, \"time_change\", { year=2025, month=12, day=1 })","title":"InitLight"},{"location":"Aircraft/Lua/Modules/Terrain/#release","text":"Signature: Terrain.Release() Description: [UNVERIFIED] none. Example: Terrain.Release()","title":"Release"},{"location":"Aircraft/Lua/Modules/Terrain/#convertlatlontometers","text":"Signature: x, y = Terrain.convertLatLonToMeters(lat, lon) Parameters: - lat, lon (number): geographic coordinates in degrees. Returns: - x, y (number): simulation meters. Description: Project WGS84 lat/lon into the simulator\u2019s local flat coordinate system. Example: local mx, my = Terrain.convertLatLonToMeters(34.0522, -118.2437)","title":"convertLatLonToMeters"},{"location":"Aircraft/Lua/Modules/Terrain/#convertmgrstometers","text":"Signature: x, y = Terrain.convertMGRStoMeters(mgrs) Parameters: - mgrs (string): MGRS reference. Returns: - x, y (number): simulation meters. Description: Inverse of GetMGRScoordinates. Example: local ux, uy = Terrain.convertMGRStoMeters(\"33TUN1234567890\")","title":"convertMGRStoMeters"},{"location":"Aircraft/Lua/Modules/Terrain/#convertmeterstolatlon","text":"Signature: lat, lon = Terrain.convertMetersToLatLon(x, y) Parameters: - x, y (number): simulation coordinates. Returns: - lat, lon (number): geographic degrees. Description: Inverse map projection back to WGS84. Example: local \u03c6, \u03bb = Terrain.convertMetersToLatLon(400000, 5000000)","title":"convertMetersToLatLon"},{"location":"Aircraft/Lua/Modules/Terrain/#findpathonroads","text":"Signature: pathTable = Terrain.findPathOnRoads(type, x1, y1, x2, y2) Parameters: - type (string): \"roads\" or \"railroads\". - x1, y1 , x2, y2 (number): endpoints. Returns: - pathTable (table): waypoint array. Description: [UNVERIFIED] none. Example: local trainRoute = Terrain.findPathOnRoads(\"railroads\", 1000, 2000, 8000, 9000)","title":"findPathOnRoads"},{"location":"Aircraft/Lua/Modules/Terrain/#getbeacons","text":"Signature: beacons = Terrain.getBeacons() Returns: - beacons (table): list of beacon objects, each with position and frequency. Description: Enumerate nav-beacons placed in the terrain. Example: for _, b in ipairs(Terrain.getBeacons()) do print(\"Beacon\", b.id, \"at\", b.x, b.y, \"freq\", b.freq) end","title":"getBeacons"},{"location":"Aircraft/Lua/Modules/Terrain/#getclosestpointonroads","text":"Signature: px, py = Terrain.getClosestPointOnRoads(type, x, y) Parameters: - type (string): \"roads\" or \"railroads\". - x, y (number): query point. Returns: - px, py (number): on-network coordinates. Description: [UNVERIFIED] none. Example: local rx, ry = Terrain.getClosestPointOnRoads(\"roads\", 12345, 67890)","title":"getClosestPointOnRoads"},{"location":"Aircraft/Lua/Modules/Terrain/#getclosestvalidpoint","text":"Signature: px, py = Terrain.getClosestValidPoint(type, x, y) Parameters: - type (string): e.g. \"land\". - x, y (number): input coords. Returns: - px, py (number): nearest valid location of that type. Description: [UNVERIFIED] none. Example: local fx, fy = Terrain.getClosestValidPoint(\"land\", helicopterX, helicopterY)","title":"getClosestValidPoint"},{"location":"Aircraft/Lua/Modules/Terrain/#getcrossparam","text":"Signature: param = Terrain.getCrossParam() Returns: - param (any): undocumented cross-parameter data. Description: Only for advanced use\u2014internal terrain tuning. Example: local cp = Terrain.getCrossParam() print(\"Cross param:\", cp)","title":"getCrossParam"},{"location":"Aircraft/Lua/Modules/Terrain/#getobjectposition","text":"Signature: ox, oy = Terrain.getObjectPosition(obj) Parameters: - obj (Object): engine object reference. Returns: - ox, oy (number): its map position. Description: [UNVERIFIED] none. Example: local x, y = Terrain.getObjectPosition(myVehicle)","title":"getObjectPosition"},{"location":"Aircraft/Lua/Modules/Terrain/#getobjectsatmappoint","text":"Signature: list = Terrain.getObjectsAtMapPoint(mapX, mapY) Parameters: - mapX, mapY (number): query location. Returns: - list (table): all objects overlapping that point. Description: [UNVERIFIED] none. Example: local objs = Terrain.getObjectsAtMapPoint(5000, 6000) print(\"Found\", #objs, \"objects\")","title":"getObjectsAtMapPoint"},{"location":"Aircraft/Lua/Modules/Terrain/#getradio","text":"Signature: radios = Terrain.getRadio(roadnet) Parameters: - roadnet (string): airport identifier. Returns: - radios (table): frequency settings for that airfield\u2019s comms. Description: Obtain tower/ground/approach frequencies. Example: local freqs = Terrain.getRadio(\"KSFO_roadnet\") print(freqs.tower, freqs.ground)","title":"getRadio"},{"location":"Aircraft/Lua/Modules/Terrain/#getrunwayheading","text":"Signature: hdg = Terrain.getRunwayHeading(roadnet) Parameters: - roadnet (string): airport ID. Returns: - hdg (number): magnetic heading of the primary runway. Description: Useful for HUD wind-correction and runway-alignment cues. Example: local rHdg = Terrain.getRunwayHeading(\"RJTT_roadnet\") print(\"Runway heading:\", rHdg)","title":"getRunwayHeading"},{"location":"Aircraft/Lua/Modules/Terrain/#getrunwaylist","text":"Signature: runways = Terrain.getRunwayList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - runways (table): each entry contains: - course (number): runway heading - edge1name (string), edge1x , edge1y (number): name and coordinates of one end - edge2name (string), edge2x , edge2y (number): name and coordinates of the opposite end Description: Enumerate all runways at the specified airfield, returning their endpoints and headings. Example: for _, rw in ipairs(Terrain.getRunwayList(\"EGLL_roadnet\")) do print(\"RW\", rw.edge1name, \"to\", rw.edge2name, \"heading\", rw.course) end","title":"getRunwayList"},{"location":"Aircraft/Lua/Modules/Terrain/#getstandlist","text":"Signature: stands = Terrain.getStandList(roadnet) Parameters: - roadnet (string): airport ID. Returns: - stands (table): list of parking stands with coordinates. Description: Get gate and parking-spot positions. Example: local gates = Terrain.getStandList(\"KDEN_roadnet\") print(\"First stand at\", gates[1].x, gates[1].y)","title":"getStandList"},{"location":"Aircraft/Lua/Modules/Terrain/#gettechskinbydate","text":"Signature: skin = Terrain.getTechSkinByDate(day, month) Parameters: - day, month (number): calendar date. Returns: - skin (any): texture/skin identifier valid on that day. Description: Swap in historical or seasonal terrain skins. Example: local tex = Terrain.getTechSkinByDate(15, 8) -- August 15","title":"getTechSkinByDate"},{"location":"Aircraft/Lua/Modules/Terrain/#gettempraturerangebydate","text":"Signature: minT, maxT = Terrain.getTempratureRangeByDate(day, month) Parameters: - day, month (number): date. Returns: - minT, maxT (number): expected daily temperature extremes (\u00b0C). Description: Drive weather models or engine performance tables. Example: local lo, hi = Terrain.getTempratureRangeByDate(1, 12) print(\"Dec 1 temps:\", lo, \"to\", hi)","title":"getTempratureRangeByDate"},{"location":"Aircraft/Lua/Modules/Terrain/#getterrainshpare","text":"Signature: shape = Terrain.getTerrainShpare() Returns: - shape (any): internal terrain mesh data. Description: Undocumented; likely used for low-level mesh queries. Example: local mesh = Terrain.getTerrainShpare()","title":"getTerrainShpare"},{"location":"Aircraft/Lua/Modules/Terrain/#isvisible","text":"Signature: visible = Terrain.isVisible(x1, alt1, y1, x2, alt2, y2) Parameters: - x1, y1, alt1 (number): start point and altitude. - x2, y2, alt2 (number): end point and altitude. Returns: - visible (boolean): true if line-of-sight is unobstructed. Description: Perform a raycast through the terrain to check LOS. Example: if Terrain.isVisible(10000, 50, 20000, 15000, 100, 25000) then print(\"Target in sight!\") end","title":"isVisible"},{"location":"Database/wsTypes/","text":"wsTypes.lua # This file can be found at: \"C:\\Program Files\\Eagle Dynamics\\DCS World\\Scripts\\Database\\wsTypes.lua\" -- **************** 1 level *************** wsType_Air = 1 wsType_Ground = 2 wsType_Navy = 3 wsType_Weapon = 4 wsType_Static = 5 wsType_Destroyed = 6 wsType_Test1 = 200 wsType_Point = 201 -- **************** 2 level *************** -- Air objects (wType_Air) wsType_Airplane = 1 wsType_Helicopter = 2 wsType_Free_Fall = 3 -- Weapon (wsType_Weapon) wsType_Missile = 4 wsType_Bomb = 5 wsType_Shell = 6 wsType_NURS = 7 wsType_Torpedo = 8 -- Ground objects (wsType_Ground) wsType_Moving = 8 wsType_Standing = 9 wsType_Tank = 17 wsType_SAM = 16 wsType_Infantry = 20 -- Navy objects (wsType_Navy) wsType_Ship = 12 -- object (wsType_Static) wsType_Airdrome = 13 wsType_Explosion = 14 wsType_GContainer = 15 wsType_AirdromePart = 18 wsType_WingPart = 19 -- **************** 3 level *************** -- Air objects, wsType_Airplane wsType_Fighter = 1 wsType_F_Bomber = 2 wsType_Intercepter = 3 wsType_Intruder = 4 wsType_Cruiser = 5 wsType_Battleplane = 6 -- Free-fall air objects wsType_Snars = 31 wsType_Parts = 35 wsType_FuelTank = 43 -- wsType_Missile wsType_AA_Missile = 7 wsType_AS_Missile = 8 wsType_SA_Missile = 34 wsType_SS_Missile = 11 wsType_A_Torpedo = 10 wsType_S_Torpedo = 11 wsType_AA_TRAIN_Missile = 100 wsType_AS_TRAIN_Missile = 101 -- wsType_Bomb wsType_Bomb_A = 9 wsType_Bomb_Guided = 36 wsType_Bomb_BetAB = 37 wsType_Bomb_Cluster = 38 wsType_Bomb_Antisubmarine = 39 wsType_Bomb_ODAB = 40 wsType_Bomb_Fire = 41 wsType_Bomb_Nuclear = 42 wsType_Bomb_Lighter = 49 -- wsType_Shell wsType_Shell_A = 10 -- Navy objects (wsType_Navy, wsType_Cruiser) wsType_AirCarrier = 12 wsType_HCarrier = 13 wsType_ArmedShip = 14 wsType_CivilShip = 15 wsType_Submarine = 16 -- wsType_Airdrome wsType_RW1 = 20 wsType_RW2 = 30 wsType_Heliport = 40 -- wsType_Explosion wsType_GroundExp = 29 -- wsType_NURS wsType_Container = 32 wsType_Rocket = 33 -- wsType_GContainer wsType_Control_Cont = 44 wsType_Jam_Cont = 45 wsType_Cannon_Cont = 46 wsType_Support = 47 wsType_Snare_Cont = 48 wsType_Smoke_Cont = 50 wsType_JATO_Cont = 51 -- Ground object (wsType_Moving || wsType_Standing ) wsType_NoWeapon = 25 wsType_Gun = 26 wsType_Miss = 27 wsType_ChildMiss = 28 wsType_MissGun = 104 wsType_Civil = 100 --*************************************************** -- wsType_Radar = 101 wsType_Radar_Miss = 102 wsType_Radar_MissGun = 103 wsType_Radar_Gun = 105 -- **************** 4 level *************** -- Free-fall air objects; parts wsType_OBLOMOK_1 = 1; -- 1-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_2 = 2; -- 2-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_3 = 3; -- 3-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_4 = 4; -- 4-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_5 = 5; -- 5-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_6 = 6; -- 6-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 OBLOMOK_OBSHIWKI_1 = 7; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 OBLOMOK_OBSHIWKI_2 = 8; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 K36 = 9; -- \u041a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u043d. \u043a\u0440\u0435\u0441\u043b\u043e PILOT_K36 = 10; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 K36 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT = 11; -- \u041f\u0438\u043b\u043e\u0442 RUS \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c FONAR_OTK = 12; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c -- Free-fall air objects - snars wsType_Chaff = 13; -- \u0440\u0430\u0434\u0438\u043e-\u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_Flare = 14; -- \u0442\u0435\u043f\u043b\u043e\u0432\u0430\u044f \u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_ShortMTail = 15; -- \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0445\u0432\u043e\u0441\u0442 \u0440\u0430\u043a\u0435\u0442 wsType_SmallBomb = 16; -- \u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b PILOT_ACER = 17; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 ACER \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_F14_SEAT = 18; -- \u041f\u0438\u043b\u043e\u0442 F14 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT_US = 19; -- \u041f\u0438\u043b\u043e\u0442 US \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c A_10_FONAR = 20; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0410-10 F_14A_FONAR = 21; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-14A F_15_FONAR = 22; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15 F_16_FONAR = 23; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 F_18C_FONAR = 24; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18C MIG_23_FONAR = 25; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-23 MIG_25_FONAR = 26; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-25 MIG_27_FONAR = 27; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-27 MIG_29_FONAR = 28; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29K_FONAR = 29; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29\u041a MIG_31_FONAR_P = 30; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_31_FONAR_Z = 31; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u0437\u0430\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_L = 32; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_R = 33; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_25_FONAR = 34; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25 SU_27_FONAR = 35; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-27 SU_30_FONAR = 36; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-30 SU_33_FONAR = 37; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-33 SU_39_FONAR = 38; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-39 TORNADO_FONAR = 39; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 TORNADO Mirage_FONAR = 40; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage F_4_FONAR_P = 41; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 F_4_FONAR_Z = 42; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0437\u0430\u0434\u043d\u0438\u0439 F_5_FONAR = 43; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 SU_17_FONAR = 44; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-17 SU_34_FONAR_L = 45; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_34_FONAR_R = 46; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_29C_FONAR = 47; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29G_FONAR = 48; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 SU_25T_FONAR = 49; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25\u0422 wsType_Flare_GREEN = 50;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0417\u0415\u041b\u0415\u041d\u0410\u042f wsType_Flare_RED = 51;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u041a\u0420\u0410\u0421\u041d\u0410\u042f wsType_Flare_WHITE = 52;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0411\u0415\u041b\u0410\u042f wsType_Flare_YELLOW = 53;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0416\u0415\u041b\u0422\u0410\u042f PILOT_DEAD = 54;-- \u0442\u0440\u0443\u043f \u043f\u0438\u043b\u043e\u0442\u0430 PARACHUTE_ON_GROUND = 55;-- \u043f\u043e\u0433\u0430\u0441\u0448\u0438\u0439 \u043a\u0443\u043f\u043e\u043b -- \u0412\u0437\u0440\u044b\u0432\u044b GROUND_EXP = 1; -- \u041d\u0430\u0437\u0435\u043c\u043d\u044b\u0439 \u0432\u0437\u0440\u044b\u0432 1 Heliport_standart = 100; -- \u0432\u0435\u0440\u0442\u043e\u043b\u0451\u0442\u043e\u0434\u0440\u043e\u043c -- \u0421\u043f\u0438\u0441\u043e\u043a \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 Airdrome_0 = 0; -- \u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c 0 Khersones = 1; -- \u0425\u0435\u0440\u0441\u043e\u043d\u0435\u0441 Saki = 2; -- \u0421\u0430\u043a\u0438 Simpheropol = 3; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Razdolnoe = 4; -- \u0420\u0430\u0437\u0434\u043e\u043b\u044c\u043d\u043e\u0435 Dzhankoy = 5; -- \u0414\u0436\u0430\u043d\u043a\u043e\u0439 Kirovskoe = 6; -- \u041a\u0438\u0440\u043e\u0432\u0441\u043a\u043e\u0435 Kerch = 7; -- \u0411\u0430\u0433\u0435\u0440\u043e\u0432\u043e (\u041a\u0435\u0440\u0447\u044c) Belbek = 8; -- \u0411\u0435\u043b\u044c\u0431\u0435\u043a Krasnogvardeyskoye = 9; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u043e\u0435 Octyabrskoe = 10; -- \u041e\u043a\u0442\u044f\u0431\u0440\u044c\u0441\u043a\u043e\u0435 Gvardeyskoe = 11; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0432\u043e\u0435\u043d\u043d\u044b\u0439 Anapa = 12; -- \u0410\u043d\u0430\u043f\u0430 Krasnodar = 13; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Novorossiysk = 14; -- \u041d\u043e\u0432\u043e\u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a Krymsk = 15; -- \u041a\u0440\u044b\u043c\u0441\u043a Maykop = 16; -- \u041c\u0430\u0439\u043a\u043e\u043f Gelendzhik = 17; -- \u0413\u0435\u043b\u0435\u043d\u0434\u0436\u0438\u043a Sochi = 18; -- \u0421\u043e\u0447\u0438 (\u0410\u0434\u043b\u0435\u0440) Krasnodar_P = 19; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 Sukhumi = 20; -- \u0421\u0443\u0445\u0443\u043c\u0438 Gudauta = 21; -- \u0413\u0443\u0434\u0430\u0443\u0442\u0430 Batumi = 22; -- \u0411\u0430\u0442\u0443\u043c\u0438 Tskhakaya = 23; -- \u0426\u0445\u0430\u043a\u0430\u044f Kobuleti = 24; -- \u041a\u043e\u0431\u0443\u043b\u0435\u0442\u0438 Kutaisi = 25; -- \u041a\u0443\u0442\u0430\u0438\u0441\u0438 MinVody = 26; Nalchick = 27; Mozdok = 28 -- \u041c\u043e\u0437\u0434\u043e\u043a\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c Lochini = 29 -- \u0413\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442 \u0432 \u0422\u0431\u0438\u043b\u0438\u0441\u0438 TbilisiMilitary = 30 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0422\u0431\u0438\u043b\u0438\u0441\u0438 Vaziani = 31 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0412\u0430\u0437\u0438\u0430\u043d\u0438 Beslan = 32 -- \u0412\u043b\u0430\u0434\u0438\u043a\u0430\u0432\u043a\u0430\u0437-\u0411\u0435\u0441\u043b\u0430\u043d --#ifndef DEMO_VERSION LAST_AIRDROME_TYPE = Nalchick; --#else --LAST_AIRDROME_TYPE = Gvardeyskoe; --#endif DEMO_VERSION ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0410\u042d\u0420\u041e\u0414\u0420\u041e\u041c\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LAST_AIRDROME_TYPE !!! -- ------------------------------------------------------------------------/ wsType_RunWay = 100; -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Airplanes list. \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0422\u0418\u041f\u041e\u0412 \u0421\u0410\u041c\u041e\u041b\u0415\u0422\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LastPlaneType !!! -- ------------------------------------------------------------------------/ -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438 \u0438 \u043c\u043d\u043e\u0433\u043e\u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. MiG_23 = 1; -- MiG-23 Flogger MiG_29 = 2; -- MiG-29 Fulcrum Su_27 = 3; -- Su-27 Flanker Su_33 = 4; -- Su-33 F_14 = 5; -- F-14 Tomcat F_15 = 6; -- F-15 Eagle F_16 = 7; -- F-16 Fighting Falcon -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a\u0438. MiG_25 = 8; -- MiG-25 Foxbat MiG_31 = 9; -- MiG-31 Foxhound F_2 = 10; -- Tornado F.2 IDS GR.1A -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_27 = 11; -- MiG-27 Flogger-D Su_24 = 12; -- Su-24 Fencer Su_30 = 13; -- Su-30 FA_18 = 14; -- F/A-18A Hornet F_111 = 15; -- F-111 -- \u0428\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a\u0438. Su_25 = 16; -- Su-25 Frogfoot A_10A = 17; -- A-10A Thunderbolt II -- \u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. Tu_160 = 18; -- Tu-160 Blackjack B_1 = 19; -- B-1 Lancer Su_34 = 20; -- C\u0443-34 \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a Tu_95 = 21; -- Tu-95 Bear Tu_142 = 22; -- Tu-142 Bear B_52 = 23; -- B-52 Stratofortress -- \u0411\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_25P = 24; -- MiG_25P -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a Tu_22M3 = 25; -- Tu-22M3 Backfire -- \u0410\u0412\u0410\u041a\u0421. A_50 = 26; -- \u0410-50 Mainstay E_3 = 27; -- E-3 Sentry -- \u0421\u0430\u043c\u043e\u043b\u0435\u0442\u044b \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a\u0438 IL_78 = 28; -- IL-78 Midas KC_10 = 29; -- KC-10 Extender -- \u0422\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. IL_76 = 30; -- IL-76 Candid C_130 = 31; -- C-130 Hercules MIG_29K = 32; -- MiG-29K - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c S_3R = 33; -- S-3A VICING, \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439, \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a Mirage = 34; -- Mirage 2000 - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c -- \u0411\u0435\u0441\u043f\u0438\u043b\u043e\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b-\u0440\u0430\u0437\u0432\u0435\u0434\u0447\u0438\u043a\u0438. Tu_143 = 35; -- Tu-143 (\u0412\u0420-3) \"\u0420\u0435\u0439\u0441\" Tu_141 = 36; -- Tu-141 (\u0412\u0420-2) \"\u0421\u0442\u0440\u0438\u0436\" F_117 = 37; -- F-117 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a Su_39 = 38; -- SU-39 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AN_26B = 39; -- AN-26B \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 AN_30M = 40; -- AN-30M \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 E_2C = 41; -- E-2C Hawkeye \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 AWACS \u043a\u0430\u043a AN_26B S_3A = 42; -- S-3A Viking \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AV_8B = 43; -- AV-8B Harrier \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c EA_6B = 44; -- EA-6B Prowler \u0440\u0430\u0434\u0438\u043e\u043f\u0440\u043e\u0442\u0438\u0432\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a F_4E = 45; -- F-4E Phantom II \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c F_5E = 46; -- F-5E Tiger \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c C_17 = 47; -- C-17 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 USA SU_17M4 = 48; -- Cy-17M4 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c MiG_29G = 49; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 MiG_29C = 50; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 Su_24MR = 51; -- Su-24MR Fencer F_16A = 52; -- F-16A Fighting Falcon FA_18C = 53; -- F/A-18C Hornet Su_25T = 54; -- Su-25 Frogfoot RQ_1A_Predator = 55;-- Predator UAV TORNADO_IDS = 56; Yak_40 = 57; -- Yak-40 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 A_10C = 58; -- A-10C F_15E = 59; -- F-15E KC_135 = 60; -- KC-135 L_39ZA = 61; -- \u041b-39\u0417\u0410 \u0443\u0447\u0435\u0431\u043d\u043e-\u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 P_51B = 62; -- P-51B P_51D = 63; -- P-51D-25-NA P_51D_30_NA = 64; -- P-51D-30-NA TF_51D = 65; -- TF-51D J_11A = 66; -- chinese licensed variant of base Su-27 -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ LastPlaneType = 150;--\u0432\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u043f\u043e\u0434 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Helicopters list. \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ MI_8MT = 1 + LastPlaneType; -- M\u0438-8\u041c\u0422. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_24W = 2 + LastPlaneType; -- M\u0438-24B. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_26 = 3 + LastPlaneType; -- M\u0438-26. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_27 = 4 + LastPlaneType; -- Ka-27. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_50 = 5 + LastPlaneType; -- Ka-50. \u0420\u043e\u0441\u0441\u0438\u044f KA_52 = 6 + LastPlaneType; -- Ka-52. \u0420\u043e\u0441\u0441\u0438\u044f AH_64A = 7 + LastPlaneType; -- AH-64A Apache. NATO AH_64D = 8 + LastPlaneType; -- AH-64D Apache Longbow. NATO CH_47D = 9 + LastPlaneType; -- CH-47D Chinook. NATO CH_53E = 10 + LastPlaneType; -- CH-53E Super Stallion. NATO SH_60B = 11 + LastPlaneType; -- SH-60B Sea Hawk. NATO UH_60A = 12 + LastPlaneType; -- UH-60A Night Hawk. NATO AH_1W = 13 + LastPlaneType; -- AH-1W Super Cobra. NATO SH_3H = 14 + LastPlaneType; -- SH-3W Sea King. NATO Sea_Lynx= 15 + LastPlaneType; -- Sea Lynx Mk88. NATO AB_212 = 16 + LastPlaneType; -- UH-1H. NATO MI_28N = 17 + LastPlaneType; -- \u041c\u0438-28\u041d OH_58D = 18 + LastPlaneType; -- \u041a\u0430\u0439\u043e\u0432\u0430 NATO -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Air-to-Air Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u0432\u043e\u0437\u0434\u0443\u0445. -- 0 - \u043f\u0443\u0441\u0442\u043e empty R_550 = 1; -- R550 Magic 2 MICA_T = 2; -- MICA, IR MICA_R = 3; -- MICA, AR Super_530D = 4; -- Super 530D P_98 = 5; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-98 == P-98R (AA-3 \u201cAnab\u201d) P_4R = 6; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-4R (AA-5 'Ash') P_40R = 7; -- P-40R (AA-6 'Acrid') --P_23R = 8; -- P-23R (AA-7 'Apex') P_24R = 9; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24R (AA-7 'Apex') P_60 = 10; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-60 (AA-8 'Aphid')\u0431\u043b. \u0431\u043e\u044f P_33E = 11; -- P-33\u042d (AA-9 'Amos') \u0431\u043e\u043b.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27AE = 12; -- P-27A\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27P = 13; -- P-27P (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27PE = 14; -- P-27P\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27T = 15; -- P-27T (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27TE = 16; -- P-27T\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27EM = 17; -- P-27\u042dM (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_73 = 18; -- P-73 (AA-11 'Archer')\u0431\u043b. \u0431\u043e\u044f P_77 = 19; -- P-77 (PBB-AE) (AA-12)c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_37 = 20; -- P-37 AIM_7 = 21; -- AIM-7 'Sparrow' AIM_9 = 22; -- AIM-9 'Sidewinder' AIM_54 = 23; -- AIM-54 'Phoenix' AIM_120= 24; -- AIM-120 'AMRAAM' --P_23T = 25; -- P-23T (AA-7 'Apex') P_24T = 26; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24T (AA-7 'Apex') P_40T = 27; -- P-40T (AA-6 'Acrid') SeaSparrow = 28; -- Sea Sparrow -- Unguided rockets. \u041d\u0435\u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u043d\u0430\u0440\u044f\u0434\u044b. C_8CM = 30; -- C-8CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) C_5 = 31; -- C-5 C_8 = 32; -- C-8 C_13 = 33; -- C-13 C_24 = 34; -- C-24 C_25 = 35; -- C-25 HYDRA_70 = 36; -- HYDRA-70 Zuni_127 = 37; -- Zuni-127 Zuni_127CM = 38; -- Zuni-127CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) -- Air-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c. AGM_114K = 39; -- AGM-114 Hellfire Laser AGM_119= 40; -- Penguin, Norway X_22 = 41; -- X-22 Burya wing,anti-ship (AS-4'Kitchen') X_29TE = 42; -- X_29TE (AS-14 'Kedge' \u044d\u043a\u0441\u043f\u043e\u0440\u0442) X_23 = 43; -- X-23 Grom anti-radar(AS-7 'Kerry') X_28 = 44; -- X-28 anti-radar(AS-9 'Kyle') X_25ML = 45; -- X-25ML laser (AS-10 'Karen') X_58 = 46; -- X-58 anti-radar(AS-11 'Kilter') X_25MP = 47; -- X-25MP anti-radar(AS-12 'Kegler') AT_6 = 48; -- AT_6 (9M114) radio-command anti-tank, STURM X_29L = 49; -- X-29L laser (AS-14 'Kedge') X_55 = 50; -- X-55 wing (AS-15A 'Kent') X_65 = 51; -- X-65 wing (AS-15B 'Kent') X_15 = 52; -- X-15 \u0430nti-ship,ballistic(AS-16 'Kickback') X_31A = 53; -- X-31A \u0430nti-ship(AS-17 'Krypton') X_59M = 54; -- X-59M Ovod (AS-18 Kazoo) X_35 = 55; -- X-35 (AS-20 'Kayak') X_41 = 56; -- X-41 (unknown) \u0430nti-ship Vikhr = 57; -- 9M120 Vikhr laser (AT-12) {air-tank} Vikhr_M= 58; -- 9M120M Vikhr-M (AT-X-16)laser{air-tank} AGM_114= 59; -- AGM-114 Hellfire Radar AGM_45 = 60; -- AGM-45 'Shrike' anti-radar AGM_65K= 61; -- AGM-65K 'Maverick' AGM_84A= 62; -- AGM-84 'Harpoon' AGM_84E= 63; -- AGM-84E 'SLAM' AGM_86 = 64; -- AGM-86 'CALCM' wing AGM_88 = 65; -- AGM-88 'HARM' anti-radar Sea_Eagle = 66; -- Sea_Eagle SAV611 = 67; -- 4K60 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u0441\u0430 \"\u0428\u0442\u043e\u0440\u043c\" \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 AGM_122= 68; -- AGM-122 'Sidearm' anti-radar AGM_123= 69; -- AGM-123 'Skipper' laser AGM_65E= 70; -- AGM-65E AGM_130= 71; -- AGM-130 wing ALARM = 72; -- ALARM X_23L = 73; -- X-23L Grom laser (AS-7 'Kerry') X_25MR = 74; -- X-25MR TV (AS-12 'Kegler') X_29T = 75; -- X-29T TV (AS-14 'Kedge') X_31P = 76; -- X-31\u041f \u0430nti-radar(AS-17 'Krypton') AGM_65D= 77; -- AGM-65D 'Maverick' Kormoran=78; -- Kormoran AS 34 -- Surface-to-Air Missiles and others. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u0432\u043e\u0437\u0434\u0443\u0445 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435. SM_2 = 79; -- SM-2 \u0434\u043b\u044f TICONDEROGA SA5B55 = 80; -- 5B55 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA48H6E2=81; -- 48\u041d6\u04152 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA9M82 = 82; -- 9\u041c82 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA9M83 = 83; -- 9\u041c83 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA3M9M = 84; -- 3\u041c9\u041c \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2\u041a12 \u041a\u0443\u0431 SA9M33 = 85; -- 9\u041c33 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a33 \u041e\u0441\u0430 SA9M31 = 86; -- 9\u041c31 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a31 \u0421\u0442\u0440\u0435\u043b\u0430-1 SA9M38M1=87; -- 9\u041c38\u041c1 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a37 \u0411\u0443\u043a SA9M333= 88; -- 9\u041c333 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a35 \u0421\u0442\u0440\u0435\u043b\u0430-10 SA9M330= 89; -- 9\u041c330 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u0440 \u041c1 SA9M311= 90; -- 9\u041c311 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2C6\u041c \u0422\u0443\u043d\u0433\u0443\u0441\u043a\u0430 Igla_1E= 91; -- Igla-1E \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0417\u0420\u041a \u0418\u0433\u043b\u0430 MIM_104= 92; -- MIM-104 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Patriot FIM_92C= 93; -- FIM_92C STINGER \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Avenger \u0438 \u0440\u0443\u0447\u043d\u0430\u044f. -------------------------------------------------------------------------------- GRAD_9M22U = 94; -- GRAD-RAKETA \u0420\u0421\u0417\u041e \u0413\u0440\u0430\u0434 \u0440\u0430\u043a\u0435\u0442\u0430 URAGAN_9M27F = 179; -- URAGAN-RAKETA \u0420\u0421\u0417\u041e \u0423\u0440\u0430\u0433\u0430\u043d SMERCH_9M55K = 95; -- SMERCH-RAKETA \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 SMERCH_9M55F = 180; -- \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 \u041e\u0424 (HE Rocket) SA5B27 = 97; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0417-\u0412 5B27 \u0434\u043b\u044f \"\u0413\u0440\u043e\u0437\u043d\u043e\u0433\u043e\" HAWK_RAKETA = 98; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0434\u043b\u044f Hawk ROLAND_R = 99; -- \u0420\u0430\u043a\u0435\u0442\u0430 ROLAND SM_1 = 100; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-66B SM_2ER = 101; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-156A SM_6 = 102; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-174 AIM_120C = 106; -------------------------------------------------------------------------------- -- Surface-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c P_35 = 118; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0440\u043e\u0433\u0440\u0435\u0441\u0441-\u041c P_500 = 119; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0411\u0430\u0437\u0430\u043b\u044c\u0442 P_700 = 120; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0440\u0430\u043d\u0438\u0442 P_15U = 121; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u0435\u0440\u043c\u0438\u0442 P_120 = 122; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0430\u043b\u0430\u0445\u0438\u0442 R_85 = 123; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0435\u0442\u0435\u043b\u044c R_85U = 124; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0420\u0430\u0441\u0442\u0440\u0443\u0431 BGM_109B = 125; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u043c\u0430\u0433\u0430\u0432\u043a AGM_84S = 126; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0430\u0440\u043f\u0443\u043d MALUTKA = 127; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041c\u0430\u043b\u044e\u0442\u043a\u0430 \u0411\u041c\u0414-1 \u0438 \u0411\u041c\u041f-1 KONKURS = 128; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041a\u043e\u043d\u043a\u0443\u0440\u0441 \u0411\u041c\u041f-2 P_9M117 = 129; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u0411\u041c\u041f-3 TOW = 130; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u041c-2 M26 = 131; -- \u041d\u0443\u0440\u0441 \u043a MLRS AGM_154 = 132; -- AGM-154 JSOW S_25L = 133; -- S-25L SCUD_RAKETA = 96; -- -------------------------------------------------------------------------------- wsType_Shell_SPPU = 134; -- \u0441\u043d\u0430\u0440\u044f\u0434 \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439. 20 \u043c\u043c -------------------------------------------------------------------------------- -- Added missiles --Air-to-Air AIM_9P = 135; -- AIM-9P 'Sidewinder' rear_aspect IR missile AIM_9X = 136; -- AIM-9X 'Sidewinder' perspective all aspect IR/UV missile MIM_72G = 137; -- M48 Chaparral missile, sidewinder-like AGM_65H = 138; -- new mavericks AGM_65G = 139; TGM_65G = 140; -- training TGM_65D = 141; -- training CATM_65K = 142; -- training -- Air-to-air CATM_9 = 143; -- -- wsType \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u0433\u0438\u0434\u0440 HYDRA_70_MK1 = 144; HYDRA_70_MK5 = 145; HYDRA_70_MK61 = 146; HYDRA_70_M151 = 147; HYDRA_70_M156 = 148; HYDRA_70_WTU1B = 149; HYDRA_70_M274 = 150; HYDRA_70_M257 = 151; HYDRA_70_M278 = 152; P_9M133 = 153; ATGM_Kornet = P_9M133; -- 9M133 --------------------- TGM_65H = 154; --------------------- C_8OFP2 = 155; --------------------- REFLEX = 156; -- ATGM 9M119 Reflex T-80UD SVIR = 157; -- ATGM 9M119 Svir T-72B --------------------- C_8OM = 158; --------------------- HVAR = 159; TOW2 = 160; -- ATGM C_8CM_GN = 181; C_8CM_RD = 182; C_8CM_WH = 183; C_8CM_BU = 184; C_8CM_YE = 185; C_8CM_VT = 186; M26HE = 187; -- HE heavy rocket for MLRS -- Bombs. \u0411\u043e\u043c\u0431\u044b. Bomb_Other = 0; -- \u0412\u0441\u0435-\u0440\u0430\u0432\u043d\u043e-\u043a\u0430\u043a\u0430\u044f \u0431\u043e\u043c\u0431\u0430 (\u0442\u0438\u043f \u0432 \u043a\u043e\u0434\u0435 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f) BetAB_150DS = 1; -- BetAB-150DS, BetAB_250 = 2; -- BetAB-250, BetAB_500 = 3; -- BetAB-500, BetAB_500ShP= 4; -- BetAB-500ShP FAB_100 = 5; -- FAB-100, FAB_250 = 6; -- FAB-250, FAB_500 = 7; -- FAB-500 FAB_1000 = 8; -- FAB-1000 FAB_1500 = 9; -- FAB-1500 FAB_5000 = 10; -- FAB-5000 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 KAB_500 = 11; -- KAB-500 KAB_500Kr = 12; -- KAB-500Kr, KAB_500KrOD = 13; -- KAB-500Kr-OD, KAB_1500Kr = 14; -- KAB-1500Kr ODAB_500PM = 16; -- ODAB-500 PM ODAB_250 = 17; -- ODAB-250 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 RBK_250 = 18; -- RBK-250, RBK_250S = 19; -- RBK-250S, RBK_500AO = 20; -- RBK-500AO, RBK_500SOAB = 21; -- RBK-500SOAB Puma = 22; -- Puma BL_755 = 23; -- BL_755 GluB = 24; -- Glubinaya Bomba NB_1 = 25; -- Nuclear Bomb - 1 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 NB_2 = 26; -- Nuclear Bomb - 2 Torpedo = 27; -- Torpedo XZAB_250 = 28; -- XZAB-250, XZAB_500 = 29; -- XZAB-500 Mk_81 = 30; -- Mk-81 Mk_82 = 31; -- Mk-82 Mk_83 = 32; -- Mk-83 Mk_84 = 33; -- Mk-84 M_117 = 34; -- M-117 CBU_97 = 35; -- CBU-97 GBU_10 = 36; -- GBU-10 GBU_11 = 37; -- GBU-11 GBU_12 = 38; -- GBU-12 GBU_16 = 39; -- GBU-16 GBU_17 = 40; -- GBU-40 GBU_24 = 41; -- GBU-41 GBU_15 = 42; -- GBU-15 GBU_27 = 43; -- GBU-27 GBU_22 = 44; -- GBU-22 ROCKEYE = 45; -- \u0411\u043e\u043c\u0431\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 AGM_62 = 47; -- AGM-62 Walley GBU_28 = 48; -- GBU-28 GBU_29 = 49; -- GBU-29 GBU_30 = 50; -- GBU-30 JDAM FAB_100P = 53; -- FAB-100\u041f FAB_250P = 54; -- FAB-250\u041f FAB_500P = 55; -- FAB-500\u041f FAB_500_3 = 56; -- FAB-500 - 3 MW_1 = 57; -- MW-1 dispenser PB_250 = 58; -- PB-250 c \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c Z_BAK_3 = 59; -- \u0437\u0430\u0436\u0438\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0431\u0430\u043a - 3 \u0442\u0438\u043f Mk_50_Torpedo = 61;-- \u0442\u043e\u0440\u043f\u0435\u0434\u0430 Mk-60 Durandal = 62; -- BLU_107 Durandal SAB_100 = 63; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 LUU_2B = 64; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b SUU_25 AO_2_5RT = 65; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 PTAB_2_5KO = 66; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 -- 67 \u0438 68 - PTAB_2_5RT_void \u0438 AO_2_5RT_void BDU_33 = 69; BDU_50LD = 70; BDU_50HD = 71; BDU_50LGB = 72; BDU_56LD = 73; BDU_56LGB = 74; MK_82AIR = 75; LUU_19 = 76; -- IR-\u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u043e\u043c\u0431\u0430 CBU_87 = 77; CBU_89 = 78; MK_82SNAKEYE = 79; LUU_2AB = 80; LUU_2BB = 81; LUU_1 = 82; LUU_5 = 83; LUU_6 = 84; GBU_31 = 85; GBU_38 = 86; CBU_105 = 87; CBU_103 = 88; CBU_104 = 89; AN_M64 = 90; RBK_500U = 91; GBU_31_V_3B = 92; CBU_52B = 93; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u044b \u0438 \u0431\u0430\u043a\u0438. \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438. UB_13 = 1; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 UB_32_1 = 2; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MBD_3 = 3; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 \u0431\u043e\u043c\u0431\u044b LAU_88 = 4; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 MAVERICK PTB_3000 = 5; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-24 \u043d\u0430 3000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 B_20 = 6; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 S_25_C = 7; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 c \u0440\u0430\u043a\u0435\u0442\u043e\u0439 LAU_10 = 8; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 LAU_61 = 9; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 F_15_PTB =10; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15C 1600 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N1 =11; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 1120 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N2 =12; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_18_PTB =13; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_23_PTB =14; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-23 640 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_25_PTB =15; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-25 4370 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1150 =16; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1500 =17; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 1200 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 SPPU_22 =18; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u041f\u041f\u0423-22 KINGAL =19; -- \u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u0443-39 UPK_23_25 =20; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0423\u041f\u041a-23-25 MBD =21; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 6-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 MBD_4 =22; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 4-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 TU_22_MBD =23; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 \u0434\u043b\u044f \u0422\u0443-22\u041c3 S_25_PU =24; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 \u0431\u0435\u0437 \u0440\u0430\u043a\u0435\u0442\u044b ALQ_131 =25; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0428\u0410) LANTIRN =26; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b.F-16 LANTIRN_F18 =27; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PAVETACK =28; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-111 SORBCIJA =29; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0443-27) SPS_141 =30; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0420\u043e\u0441\u0441\u0438\u044f) PTB_B_1B =31; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 B-1B \u043d\u0430 14915 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_3_LAU_10=32; -- MDB-3 & 3 LAU_10 MBD_3_LAU_61=33; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MDB-3 & 3 LAU_61 AT_9M120 =34; -- Vikhr (AT-12) {air-tank} AT_9M120M =35; -- Vikhr-M (AT-X-16) {air-tank} F_5_PTB =36; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 1000 \u043b \u0442\u043e\u043f\u043b\u0438\u0432\u0430 Sky_Shadow =37; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f, Tornado PTB_F2_1500 =38; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Tornado \u043d\u0430 1500 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 M2000_PTB =39; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage \u043d\u0430 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_A10_2 =40; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f A-10 F4_PTB_WING =41; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043a\u0440\u044b\u043b\u044c\u0435\u0432\u043e\u0439 F4_PTB_FUZ =42; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0444\u044e\u0437\u0435\u043b\u044f\u0436\u043d\u044b\u0439 AGM_114_Pilon = 43; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 4\u0445 \u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 AT_6_9M114 =44; -- SHTURM \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0442\u0438\u043f\u0430 Vikhr-M F4_PILON =45; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f F4 MER_L_P_60 = 46; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043b\u0435\u0432\u044b\u0439 MER_R_P_60 = 47; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043f\u0440\u0430\u0432\u044b\u0439 MER_TOW = 48; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 4 TOW MER_2_F_18 = 49; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 2, F-18 MER_9_B52 = 50; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 9, B-52 MER_12_B52 = 51; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 12, B-52 MBD_6_B52 = 52; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 6, B-52 PTB_2000 = 53; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 2000 \u043b \u0434\u043b\u044f \u0421\u0443-34 PTB_800L_Wing = 54; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 800 \u043b \u0434\u043b\u044f Mig-23 PTB_S_3 = 55; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u0434\u043b\u044f S-3 PTB_367GAL = 56; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 367 gal \u0434\u043b\u044f F-14 SKY_SHADOW = 57; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f BOZ_100 = 58; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 c \u043b\u043e\u0432\u0443\u0448\u043a\u0430\u043c\u0438 LANTIRN_F14 = 59; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-14 FLIR_POD = 60; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PTB_1150_29 = 61; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 1150 l \u0434\u043b\u044f MiG-29 TANGAZH = 62; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 EPHIR = 63; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 SHPIL = 64; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 FANTASM = 65; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. SmokeGenerator_red = 66;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). SmokeGeneratorAIM_red = 67;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). AIM-9S B_20CM = 68; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 \u0430\u043d\u0430\u043b\u043e\u0433 B-20 Whiskey_Pete = 69; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 2.75 SUU_25 = 70; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0430\u043b\u043a\u0430) \u0441 \u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0431\u043e\u043c\u0431\u0430\u043c\u0438 --71,72 is free, use if you want (duplicated F-18 fuel tanks removed) AN_AAS_38_FLIR = 74; -- AN/AAS-38 FLIR MBD_2_67U = 76; -- \u041c\u0411\u0414-2-67\u0423 S_25L_AND_PU = 77; -- \u0421-25\u041b + \u041f\u0423 (\u0431\u043e\u043b\u0432\u0430\u043d\u043a\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430) AN_ASQ_173_LST_CAM = 78; -- AN/ASQ-173 LST/CAM AKU_58 = 80; -- AKU_58 KMGU_2 = 81; -- KMGU-2 SmokeGenerator_green = 82; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). SmokeGenerator_blue = 83; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). SmokeGenerator_white = 84; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). SmokeGenerator_yellow = 85; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). SmokeGenerator_orange = 86; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). SmokeGeneratorAIM_green = 87; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). AIM-9S SmokeGeneratorAIM_blue = 88; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). AIM-9S SmokeGeneratorAIM_white = 89; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). AIM-9S SmokeGeneratorAIM_yellow = 90; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). AIM-9S SmokeGeneratorAIM_orange = 91; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). AIM-9S APU_68 = 92; -- APU-68 APU_73 = 93; -- APU-73 MPS_410 = 94; -- MPS_410 \u041c\u0430\u043b\u043e\u0433\u0430\u0431\u0430\u0440\u0438\u0442\u043d\u0430\u044f \u043f\u043e\u043c\u0435\u0445\u043e\u0432\u0430\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u044f Kopyo = 95; -- \u0420\u0430\u0434\u0430\u0440 \"\u041a\u043e\u043f\u044c\u0435\" \u0432 \u043f\u043e\u0434\u0432\u0435\u0441\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435 APU_170 = 96; -- \u0410\u041f\u0423-170 LAU_117 = 97; -- LAU_117 B_8V20A = 98; -- B_8V20A PTB_KA_50 = 99; -- PTB KA-50 Shturm_9K114 = 100; AN_AAQ_28_LITENING = 101; -- AN/AAQ-28 LITENING TER_LS = 102; -- Triple ejector rack TK600 = 103; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a TRAVEL_POD = 104; -- \u0413\u0438\u0434\u0440\u044b -- \u041d\u0430 LAU_68 LAU_68_HYDRA_70_MK1 = 105; LAU_68_HYDRA_70_MK5 = 106; LAU_68_HYDRA_70_MK61 = 107; LAU_68_HYDRA_70_M151 = 108; LAU_68_HYDRA_70_M156 = 109; LAU_68_HYDRA_70_WTU1B = 110; LAU_68_HYDRA_70_M274 = 111; LAU_68_HYDRA_70_M257 = 112; LAU_68_HYDRA_70_M278 = 113; -- \u041d\u0430 LAU_131 LAU_131_HYDRA_70_MK1 = 114; LAU_131_HYDRA_70_MK5 = 115; LAU_131_HYDRA_70_MK61 = 116; LAU_131_HYDRA_70_M151 = 117; LAU_131_HYDRA_70_M156 = 118; LAU_131_HYDRA_70_WTU1B = 119; LAU_131_HYDRA_70_M274 = 120; LAU_131_HYDRA_70_M257 = 121; LAU_131_HYDRA_70_M278 = 122; -- 3* SUU_25 (\u043d\u0430 TER) SUU_25x3 = 123; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_68 (\u043d\u0430 TER) LAU_68x3_HYDRA_70_MK1 = 124; LAU_68x3_HYDRA_70_MK5 = 125; LAU_68x3_HYDRA_70_MK61 = 126; LAU_68x3_HYDRA_70_M151 = 127; LAU_68x3_HYDRA_70_M156 = 128; LAU_68x3_HYDRA_70_WTU1B = 129; LAU_68x3_HYDRA_70_M274 = 130; LAU_68x3_HYDRA_70_M257 = 131; LAU_68x3_HYDRA_70_M278 = 132; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_131 (\u043d\u0430 TER) LAU_131x3_HYDRA_70_MK1 = 133; LAU_131x3_HYDRA_70_MK5 = 134; LAU_131x3_HYDRA_70_MK61 = 135; LAU_131x3_HYDRA_70_M151 = 136; LAU_131x3_HYDRA_70_M156 = 137; LAU_131x3_HYDRA_70_WTU1B= 138; LAU_131x3_HYDRA_70_M274 = 139; LAU_131x3_HYDRA_70_M257 = 140; LAU_131x3_HYDRA_70_M278 = 141; ALQ_184 = 142; LAU_68 = 143; LAU_131 = 144; OH_58_BRAUNING = 145; LAU_131WP = 146; M279_AGM114 = 147; B_8V20A_WP = 148; B_8V20A_OFP2 = 149; B_8V20A_OM = 150; B_8M1_OFP2 = 151; DROP_TANK_75GAL = 152; M134_L = 160; M134_R = 161; XM_158_HYDRA_70_MK1 = 162; XM_158_HYDRA_70_MK5 = 163; XM_158_HYDRA_70_M151 = 164; XM_158_HYDRA_70_M156 = 165; XM_158_HYDRA_70_M274 = 166; XM_158_HYDRA_70_M257 = 167; M261_HYDRA_70_M151 = 168; M261_HYDRA_70_M156 = 169; GUV_YakB_GSHP = 170; GUV_VOG = 171; HWAR_SMOKE_GENERATOR = 172; M134_SIDE_L = 174; M134_SIDE_R = 175; M60_SIDE_L = 176; M60_SIDE_R = 177; BRU_42_HS = 178; KORD_12_7 = 183; PKT_7_62 = 184; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 ----------------------------------------------------------------------/ Kuznecow = 1; -- \u0410\u0432\u0438\u0430\u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0440\u0435\u0439\u0441\u0435\u0440 \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432 VINSON = 2; -- \u0410\u0432\u0438\u0430\u043d\u043e\u0441\u0435\u0446 VINSON MOSCOW = 3; -- \u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u041c\u043e\u0441\u043a\u0432\u0430\" GROZNY = 4; -- P.\u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u0413\u0440\u043e\u0437\u043d\u044b\u0439\" wsType_GenericCivShip = 5; --ELNYA = 5; -- \u0422\u0430\u043d\u043a\u0435\u0440 \u0415\u043b\u044c\u043d\u044f wsType_GenericLightArmoredShip = 6; --KATER = 6; -- \u0422\u0443\u0440\u0435\u0446\u043a\u0438\u0439 \u043a\u0430\u0442\u0435\u0440 --AKVAMAREN = 7; -- \u0411\u0422\u0429 \u0410\u043a\u0432\u0430\u043c\u0430\u0440\u0438\u043d Natya (NAT\u041e-\u043a\u043e\u0434) AZOV = 8; -- \u0411\u041f\u041a \u0410\u0437\u043e\u0432 Kara BOBRUISK = 9; -- \u0411\u0414\u041a \u0411\u043e\u0431\u0440\u0443\u0439\u0441\u043a Ropucha BORA = 10; -- \u0420\u041a\u0412\u041f \u0411\u043e\u0440\u0430 Sivuch ALBATROS = 11; -- \u0421\u041a\u0420 \u0410\u043b\u044c\u0431\u0430\u0442\u0440\u043e\u0441 Grisha V AMETYST = 12; -- \u0421\u041a\u0420 \u0410\u043c\u0435\u0442\u0438\u0441\u0442 Grisha II OREL = 13; -- \u0411\u0421\u041a\u0420 \u041e\u0440\u0435\u043b Krivak III REZKY = 14; -- \u0411\u0421\u041a\u0420 \u0420\u0435\u0437\u043a\u0438\u0439 Krivak II MOLNIYA = 15; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041c\u043e\u043b\u043d\u0438\u044f Tarantul III --MURENA = 16; -- \u0421\u0412\u041f \u041c\u0443\u0440\u0435\u043d\u0430 Tsaplya PERRY = 17; -- \u0424\u0440\u0435\u0433\u0430\u0442 Oliver Perry OSA = 18; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041e\u0441\u0430 Osa SKORY = 19; -- \u0411\u041f\u041a \u0421\u043a\u043e\u0440\u044b\u0439 Kashin SPRUANCE = 20; -- \u042d\u0441\u043c\u0438\u043d\u0435\u0446 Spruance TICONDEROGA = 21; -- \u0420. \u043a\u0440\u0435\u0439\u0441\u0435\u0440 Ticonderoga --TK = 22; -- \u0422\u043e\u0440\u043f\u0435\u0434\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --wsType_GenericSubmarine = 23; -- Temporary KILO = 23; -- \u041f\u041b \u0412\u0430\u0440\u0448\u0430\u0432\u044f\u043d\u043a\u0430 Kilo TANGO = 24; -- \u041f\u041b \u0421\u043e\u043c Tango VETER = 25; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u0412\u0435\u0442\u0435\u0440 Nanuchka III --ZWEZDNY = 26; -- \u041f\u0440\u043e\u0433\u0443\u043b\u043e\u0447\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --YASTREBOW = 27; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c NEUSTRASH = 28; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c --BARGE_WITH_SAND = 29; --BARGE_WITHOUT_SAND = 30; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastShipType !!! LastShipType = NEUSTRASH; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ wsType_Test4 = 200; -- \u0442\u043e\u0447\u043a\u0430 \u043d\u0430 \u0437\u0435\u043c\u043b\u0435 ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 ----------------------------------------------------------------------/ -- \u041e\u0411\u042a\u0415\u041a\u0422\u042b \u041f\u0412\u041e ----------------------------------------------------------------------/ EWR_1L13 = 1; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 1L13 EWR_55G6 = 2; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 55\u04166 KP_54K6 = 3; -- \u041a\u041f 54K6 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 V_40B6M = 4; -- track radar V_40B6MD = 5; -- search radar RLS_5H63C = 6; -- track radar RLO_64H6E = 7; -- search radar PU_5P85C = 8; -- launcher PU_5P85D = 9; -- launcher RLS_9C32_1 = 10; -- track radar RLO_9C15MT = 11; -- search radar RLO_9C19M2 = 12; -- search radar S300V_9A82 = 13; -- launcher S300V_9A83 = 14; -- launcher S300V_9A84 = 15; -- launcher S300V_9A85 = 16; -- launcher BUK_9C470M1 = 17; -- \u041a\u041f BUK_9C18M1 = 18; -- search radar BUK_PU = 19; -- launcher BUK_LL = 20; -- loader/launcher KUB_1C91 = 21; -- search and track radar (str) KUB_2P25 = 22; -- launcher OSA_9A33BM3 = 23; -- search radar OSA_9T217 = 24; -- loader Strela_9K31 = 25; -- launcher Strela_9K35 = 26; -- launcher (ln) Radar_Dog_Ear = 27; -- search radar Tor_ = 28; -- str, ln Tunguska_ = 29; -- str, ln Shilka_ = 30; -- str, ln Roland_ = 31; -- str, ln Roland_Search_Radar = 32; -- search radar Avenger_ = 33; -- ln Patr_AN_MPQ_53_P = 34; -- str Patr_KP = 36; -- \u041a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u0434\u043b\u044f \"\u041f\u0430\u0442\u0440\u0438\u043e\u0442\u0430\" Patriot_ = 37; -- ln Gepard_ = 38; -- str, ln Hawk_Search_Radar = 39; -- search radar Hawk_Track_Radar = 40; -- track radar Hawk_ = 41; -- ln Hawk_CWAR_Radar = 42; Hawk_CV = 43; --Stinger_ = 44; -- ln --KP_S300V_9C457 = 45; -- \u041f\u0443\u043d\u043a\u0442 \u0431\u043e\u0435\u0432\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0421300 \u0412 wsTypeVulkan = 46; -- ln wsType_GenericAAA = 47; -- Temporary ZU_23 = 47; -- \u0433\u043e\u043b\u0430\u044f \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 ZU_23_OKOP = 48; -- \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u0441 \u043e\u0431\u0432\u0430\u043b\u043e\u0432\u043a\u043e\u0439 ZU_23_URAL = 49; -- \u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u043d\u0430 \u0423\u0440\u0430\u043b\u0435 wsType_Generic_IR_SAM = 50; -- Temporary M48_Chaparral = 50; -- \u0430\u043d\u0430\u043b\u043e\u0433 \u0421\u0442\u0440\u0435\u043b\u0430-1 M6Linebacker = 51; -- M6 Linebacker HumanTypeStart = 52; -- \u0441\u0442\u0430\u0440\u0442 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 IglaRUS_1 = 52; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 IglaRUS_2 = 53; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 IglaGRG_1 = 54; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b IglaGRG_2 = 55; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 Stinger_manpad = 56; -- \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043d\u0433\u0435\u0440\u0438\u0441\u0442 --StingerUSA_1 = 56; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 StingerUSA_2 = 57; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 \u043f\u0430\u0440\u0430 --StingerIZR_1 = 58; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 StingerIZR_2 = 59; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 --StingerGRG_1 = 60; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b --StingerGRG_2 = 61; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 IglaINS_1 = 62; HumanTypeEnd = 62; -- \u043a\u043e\u043d\u0435\u0446 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 ZU_23_insurgent = 70; -- ZU-23 insurgent ZU_23_insurgent_okop = 71; -- ZU-23 insurgent ZU_23_insurgent_ural = 72; -- ZU-23 insurgent SA3_TR = 73; -- S-125 SA3_LN = 74; -- S-125 SA3_SR = 75; -- S-125 -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastSAMType !!! LastSAMType = SA2_SR; ----------------------------------------------------------------------/ -- \u041d\u0430\u0437\u0435\u043c\u043d\u0430\u044f \u0422\u0415\u0425\u041d\u0418\u041a\u0410 ----------------------------------------------------------------------/ wsType_GenericSAU = 1; -- Temporary --wsTypeSAUmsta = 1; --wsTypeSAUakacia = 2; --wsTypeSAU_2C9 = 3; wsTypeTMZ5 = 4; wsTypeTZ10 = 5; wsType_GenericVehicle = 6; --wsTypeUralApa = 6; wsType_GenericIFV = 7; --Temporary --wsTypeBMD1 = 7; --wsTypeBMP1 = 8; --wsTypeBMP2 = 9; wsType_GenericAPC = 10; -- Temporary --wsTypeBRDM2 = 10; --wsTypeBTR70 = 11; --wsTypeGrad = 12; --wsTypeM818 = 13; -- \u0422\u044f\u0433\u0430\u0447 M-818 wsType_Hummer = 14; -- Temporary --wsTypeLAV25 = 15; wsType_GenericTank = 16; --wsTypeLeopard2 = 16; --wsTypeAAV7 = 17; --wsTypeM109 = 18; --wsTypeM113 = 19; --wsTypeM113G = 20; --wsTypeAbrams = 21; --wsTypeMarder = 22; --wsTypeBeregSAU = 23; --wsTypeBeregRLS = 24; wsTypeMAZelektro = 25; wsTypeMAZkaraul = 26; wsTypeMAZobsch = 27; wsTypeMAZstol = 28; --wsTypeSmerch = 29; --wsTypeATZ60 = 30; --wsTypeRLS_PRW11 = 31; wsTypeRLS_RSP7 = 32; --wsTypeReis = 33; -- \u0420\u0430\u0437\u0432\u0435\u0434 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441 \u0420\u0435\u0439\u0441 wsTypeRLS37 = 34; -- \u0420\u041b\u0421-37 --wsTypeT80 = 35; --wsTypeTiagach = 36; -- \u0422\u044f\u0433\u0430\u0447 \u0434\u043b\u044f \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432\u0430 --wsTypeTPZ = 37; wsTypeUAZ469 = 38; --wsTypeUragan = 39; wsTypeUral375 = 40; wsTypeUral375PBU = 41; --wsTypeZapros = 43; wsTypeZIL135 = 44; wsTypeElektrovoz = 45; -- \u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0432\u043e\u0437 wsTypeBus = 46; -- \u0410\u0432\u0442\u043e\u0431\u0443\u0441 wsTypeVAZ = 47; -- \u041b\u0435\u0433\u043a\u043e\u0432\u043e\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c wsTypeTeplowoz = 48; -- \u0422\u0435\u043f\u043b\u043e\u0432\u043e\u0437 wsTypeTrolebus = 49; -- \u0422\u0440\u043e\u043b\u043b\u0435\u0439\u0431\u0443\u0441 wsTypeWCisternaBLUE = 50; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWCisternaYELLOW = 98; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWGruz = 51; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWGruzOtkr = 52; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWagonPlatforma= 53; -- \u0412\u0430\u0433\u043e\u043d-\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 wsTypeWagonPass = 54; -- \u0412\u0430\u0433\u043e\u043d \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 --wsTypeRadioSt = 55; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a wsTypeKAMAZ_Fire = 56; -- \u041f\u043e\u0436\u0430\u0440\u043d\u044b\u0439 \u041a\u0430\u043c\u0410\u0417 wsTypeKAMAZ_Tent = 57; -- \u041a\u0430\u043c\u0410\u0417 \u0441 \u0442\u0435\u043d\u0442\u043e\u043c wsTypeLAZ_695 = 58; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a --wsType2C1 = 59; -- C\u0410\u0423 --wsTypeBMP3 = 60; -- \u0411\u041c\u041f-3 --wsTypeM2Bradley = 61; -- \u0411\u041c\u041f --wsTypeMCV80 = 62; -- \u0411\u041c\u041f wsType_GenericMLRS = 63; -- \u0420\u0421\u0417\u041e --wsTypeM_60 = 64; -- \u0422\u0430\u043d\u043a \u041c-60 --wsTypeLeo1 = 65; -- \u0422\u0430\u043d\u043a Leo1 --wsTypeBTR_D = 66; -- \u0411\u0422\u0420-\u0414 wsTypeGAZ_66 = 67; -- GAZ-66 wsTypeGAZ_3307 = 68; -- GAZ-3307 wsTypeGAZ_3308 = 69; -- GAZ-3308 wsTypeMAZ_6303 = 70; -- MAZ-6303 wsTypeZIL_4334 = 71; -- ZIL-4334 --wsTypePredator_GCS = 72; --\u041a\u041f \u0434\u043b\u044f UAV Predator --wsTypePredator_TrojanSpirit = 73;--\u0421\u0442\u0430\u043d\u0446\u0438\u044f \u0441\u0432\u044f\u0437\u0438 \u0434\u043b\u044f UAV Predator --wsTypeZIL_SKP_11 = 74; --\u0421\u041a\u041f-11 \u041f\u0435\u0440\u0435\u0434\u0432\u0438\u0436\u043d\u043e\u0439 \u041a\u041f \u0434\u043b\u044f \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u043f\u043b\u043e\u0449\u0430\u0434\u043e\u043a \u0438 \u043c\u0430\u043b\u044b\u0445 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 wsTypeURAL_4320T = 75; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320 \u0441 \u0442\u0435\u043d\u0442\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043a\u0443\u0437\u043e\u0432\u043e\u043c --wsTypeURAL_4320_31 = 76; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320-31 \u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0432\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u0431\u0438\u043d\u043e\u0439 --wsTypeURAL_ATsP_6 = 77; --\u041f\u043e\u0436\u0430\u0440\u043d\u0430\u044f \u043c\u0430\u0448\u0438\u043d\u0430 \u0423\u0440\u0430\u043b \u0410\u0426\u041f-6 --wsTypeZIL_APA_80 = 78; --\u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043d\u044b\u0439 \u043f\u0443\u0441\u043a\u043e\u0432\u043e\u0439 \u0430\u0433\u0440\u0435\u0433\u0430\u0442 \u0417\u0438\u041b \u0410\u041f\u0410-80 wsTypeZIL_131_KUNG = 79; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0417\u0438\u041b-131 \u041a\u0423\u041d\u0413 wsType_Stryker = 80; --wsTypeM1126_Stryker_ICV = 80; --\u0411\u0422\u0420 M1126 Stryker ICV --wsTypeM1128_Stryker_MGS = 81; --\u0411\u0422\u0420 M1128 Stryker MGS --wsTypeM1134_Stryker_ATGM = 82; --\u0411\u0422\u0420 M1134 Stryker ATGM --wsTypeMTLB = 83; --wsTypeBTR80 = 84; --wsTypeT72 = 85; --wsTypeT55 = 86; --wsTypeM1043 = 87; -- \u0445\u0430\u043c\u043c\u0435\u0440 + M2 --wsTypeM1045 = 88; -- \u0445\u0430\u043c\u043c\u0435\u0440 + TOW --wsTypeLeClerc = 89; wsType_GenericInfantry = 90; --wsTypeRPG = 90; --wsTypeAutogun = 91; --wsTypeHEMTT_M978 = 92; --wsTypeSoldier_AK = 93; --wsTypeSoldier_RPG = 94; --wsTypeBOMAN = 95; wsType_GenericFort = 96; --wsTypeSandbox = 96; --wsTypeBunker = 97; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastTankType --LastTankType = wsTypeBunker;-- \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e Tank-\u0430 wsTypeSteamLocomotive = 99; ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ --************************************************* -- \u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0434\u043b\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0431\u043b\u0443\u0447\u0435\u043d\u0438\u0438 !!! \u043d\u0435 \u0432\u0445\u043e\u0434\u044f\u0442 \u0432 Level 1,2,3,4--* wsRadarAir = 101;-- wsRadarLongRange = 102;-- wsRadarMidRange = 103;-- wsRadarShrtRange = 104;-- wsRadarEWS = 105;-- wsRadarEngagement = 106;-- wsTypeLauncher = 107; wsTypeComandPost = 108; wsRadarOptical = 109; wsRadarAWACS = 110; wsRadarActiveHoming = 111; -- \u041f\u0443\u0448\u043a\u0438 Gun__ = 241; -- \u043f\u0435\u0440\u0435\u0434\u043d\u044f\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 Gun__1= 242; -- \u043a\u043e\u0440\u043c\u043e\u0432\u0430\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438 \u0441 \u043f\u043e\u0434\u0432\u0435\u0441\u043a\u0430\u043c\u0438 -- wsType_Weapon, wsType_Missile(Bomb), wsType_Container MBD_FAB_100 = 1; -- MDB & 6 FAB-100 MBD_FAB_250 = 2; -- MDB & 6 FAB-250 MBD_FAB_500 = 3; -- MDB & 6 FAB-500 MBD_BETAB_250 = 4; -- MDB & 6 BETAB-250 MBD_ODAB = 5; -- MDB & 6 ODAB MBD_PB_250 = 6; -- MDB & 6 PB-250 MBD_RBK_250 = 7; -- MDB & 6 RBK-250 MBD_RBK_500AO = 8; -- MDB & 6 RBK-500AO MBD_RBK_500SOAB = 9; -- MDB & 6 RBK-500SOAB MBD_ZAB = 10; -- MDB & 6 ZAB MBD_CBU_97 = 11; -- MDB & 6 CBU-97 MBD_M_117 = 12; -- MDB & 6 M-117AB MBD_MK_81 = 13; -- MDB & 6 MK-81 MBD_MK_82 = 14; -- MDB & 6 MK-84 MBD_Rockeye = 15; -- MDB & 6 Rockeye MBD_3_FAB_100 = 16; -- MDB-3 & 3 FAB-100 MBD_3_FAB_250 = 17; -- MDB-3 & 3 FAB-250 MBD_3_FAB_500 = 18; -- MDB-3 & 3 FAB-500 MBD_3_BETAB_250 = 19; -- MDB-3 & 3 BETAB-250 MBD_3_ODAB = 20; -- MDB-3 & 3 ODAB MBD_3_PB_250 = 21; -- MDB-3 & 3 PB-250 MBD_3_RBK_250 = 22; -- MDB-3 & 3 RBK-250 MBD_3_RBK_500AO = 23; -- MDB-3 & 3 RBK-500AO MBD_3_RBK_500SOAB = 24; -- MDB-3 & 3 RBK-500SOAB MBD_3_ZAB = 25; -- MDB-3 & 3 ZAB MBD_3_CBU_97 = 26; -- MDB-3 & 3 CBU-97 MBD_3_M_117 = 27; -- MDB-3 & 3 M-117AB MBD_3_MK_81 = 28; -- MDB-3 & 3 MK-81 MBD_3_MK_82 = 29; -- MDB-3 & 3 MK-84 MBD_3_Rockeye = 30; -- MDB-3 & 3 Rockeye MBD_3_GBU_16 = 31; -- MDB-3 & 3 GBU_16 MBD_4_FAB_100 = 32; -- MDB-4 & 4 FAB-100 LAU_88_AGM_65K = 33; -- LAU_88 & 3 AGM-65K TU_22_FAB_100 = 34; -- TU-22M3-MBD & 9 FAB-100 TU_22_FAB_250 = 35; -- TU-22M3-MBD & 9 FAB-250 TU_22_BETAB_250 = 36; -- TU-22M3-MBD & 9 BETAB-250 TU_22_PB_250 = 37; -- TU-22M3-MBD & 9 PB-250 TU_22_RBK_250 = 38; -- TU-22M3-MBD & 9 RBK_250 TU_22_FAB_500 = 39; -- TU-22M3-MBD & 6 FAB-500 TU_22_BETAB_500 = 40; -- TU-22M3-MBD & 6 BETAB_500 TU_22_BETAB_500SP = 41; -- TU-22M3-MBD & 6 BETAB_500SP TU_22_ODAB = 42; -- TU-22M3-MBD & 6 ODAB TU_22_RBK_500AO = 43; -- TU-22M3-MBD & 6 RBK_500AO TU_22_RBK_500SOAB = 44; -- TU-22M3-MBD & 6 RBK_500SOAB TU_22_ZAB = 45; -- TU-22M3-MBD & 6 ZAB VICHR = 46; -- Vikhr (AT-12) {air-tank} VICHR_M = 47; -- Vikhr-M (AT-X-16) {air-tank} LAU_88_AGM_65D = 48; -- LAU_88 & 3 AGM-65D LAU_88_AGM_65E = 49; -- LAU_88 & 3 AGM-65E MBD_A10_2_AIM_9 = 50; -- MBD_A10_2 & 2 AIM_9 MBD_F2_2_Mk_82 = 51; -- MBD F2_2 & 2 Mk_82 MBD_F2_2_Mk_83 = 52; -- MBD F2_2 & 2 Mk_83 MBD_F2_2_Puma = 53; -- MBD F2_2 & 2 Puma MBD_F2_2_BL_755 = 54; -- MBD F2_2 & 2 BL_755 MBD_F2_2_ROCKEYE = 55; -- MBD F2_2 & 2 ROCKEYE MBD_F2_2_ALARM = 56; -- MBD F2_2 & 2 ALARM MBD_3_GBU_22 = 57; -- MDB-3 & 3 GBU_22 AGM_114_Pilon_4 = 58; -- AGM_114_Pilon & 4 AGM_114 AGM_114K_Pilon_4 = 59; -- AGM_114_Pilon & 4 AGM_114K SHTURM = 60; -- SHTURM MER_AIM_9_2 = 61; -- F4_PILON & 2 AIM-9 MER_L_P_60_2 = 62; -- MER_L_P_60 & 2 P-60 MER_R_P_60_2 = 63; -- MER_R_P_60 & 2 P-60 MER_TOW_4 = 64; -- MER_TOW & 4 TOW LAU_88_AGM_65K_2_LEFT = 65; -- LAU_88 & 2(6) AGM_65K (left) LAU_88_AGM_65D_2_LEFT = 66; -- LAU_88 & 2(6) AGM_65D (left) MER_6_AGM_86C = 67; -- MBD_B52_6 & 6 AGM_86C MBD_FAB_250_2 = 68; -- MDB & 2(6) FAB_250 MBD_RBK_250_2 = 69; -- MDB & 2(6) RBK_250 MBD_BetAB_250_2 = 70; -- MDB & 2(6) BetAB_250 TU_22_FAB_1500_2 = 71; -- TU-22M3-MBD & 2(9) FAB-1500 MBD_3_BetAB_500 = 72; -- MDB-3 & 3 BetAB_500 MER_2_F_18_CBU_97 = 73; -- MER_2_F_18 & 2 CBU_97 MER_12_B52_Mk_82 = 74; -- MER_12_B52 & 12 Mk_82 MER_6_BLU_107 = 75; -- MDB & 6 BLU-107 MER_12_B52_M_117 = 76; -- MER_12_B52 & 12 M_117 MER_9_B52_CBU_97 = 77; -- MER_9_B52 & 9 CBU_97 MER_9_B52_Mk_84 = 78; -- MER_9_B52 & 9 Mk_84 MER_9_B52_Rockeye = 79; -- MER_9_B52 & 9 Rockeye MBD_4_RBK_250 = 80; -- MDB-4 & 4 RBK_250 MBD_4_FAB_250 = 81; -- MDB-4 & 4 FAB_250 MER_6_2_PB_250 = 82; -- MBD & 2 PB_250 MER_6_4_PB_250 = 83; -- MBD & 4 PB_250 MER_6_4_FAB_250 = 84; -- MBD & 4 FAB_250 SUU_25_8_LUU_2 = 85; -- SUU_25 & 8 LUU_2B APU_6_VICHR_M = 86; -- APU_6_VIKHR & 6 Vikhr_M S_25L_PU = 87; -- S_25L & PU MBD_2_67U_FAB_100 = 88; -- MBD_2_67U & FAB_100 AKU_58_X_58 = 91; -- AKU_58 & X_58 AKU_58_X_29T = 92; -- AKU_58 & X_29T AKU_58_X_29L = 93; -- AKU_58 & X_29L KMGU_2_AO_2_5RT = 94; -- KMGU-2 & AO_2_5RT KMGU_2_PTAB_2_5KO = 95; -- KMGU-2 & PTAB_2_5KO AKU_58_X_31A = 96; -- AKU-58 & X-31A AKU_58_X_31P = 97; -- AKU-58 & X-31P AKU_58_X_35 = 98; -- AKU-58 & X-35 APU_68_X_25ML = 99; -- APU-68 & X-25ML APU_68_X_25MP = 100; -- APU-68 & X-25MP APU_68_C_24 = 101; -- APU-68 & C-24 APU_73_P_73 = 102; -- APU-73 & R-73 APU_170_P_77 = 103; -- APU-170 & R-77 LAU_88_AGM_65E_2_LEFT = 104; -- LAU_88 & 2(6) AGM_65E (left) LAU_88_AGM_65K_2_RIGHT = 105; -- LAU_88 & 2(6) AGM_65K (right) LAU_88_AGM_65D_2_RIGHT = 106; -- LAU_88 & 2(6) AGM_65D (right) LAU_88_AGM_65E_2_RIGHT = 107; -- LAU_88 & 2(6) AGM_65E (right) LAU_117_AGM_65K = 108; -- LAU_117 & AGM_65K LAU_117_AGM_65D = 109; -- LAU_117 & AGM_65D LAU_117_AGM_65E = 110; -- LAU_117 & AGM_65E -- A-10C TER_3_BDU_33 = 114; LAU_117_AGM_65H = 125; -- LAU_117 & AGM_65H LAU_117_AGM_65G = 126; -- LAU_117 & AGM_65G TER_3_GBU_12 = 127 ; -- BRU-42 3*GBU_12 LAU_105_1_AIM_9M_L = 128 ; LAU_105_2_CATM_9M = 129 ; LAU_105_1_CATM_9M_L = 130 ; TER_3_MK82AIR = 131 ; TER_FREE = 132; LAU_105_FREE = 133; LAU_88_AGM_65H = 134; LAU_88_AGM_65H_2_L = 135 ; LAU_88_AGM_65H_2_R = 136 ; LAU_88_AGM_65H_3 = 137 ; LAU_117_TGM_65D = 138 ; LAU_117_TGM_65G = 139 ; LAU_117_TGM_65H = 140 ; LAU_117_CATM_65K = 141 ; LAU_105_1_AIM_9M_R = 142 ; LAU_105_1_CATM_9M_R = 143 ; TER_3_SUU_25_8_LUU_2 = 144 ; LAU_88_AGM_65D_ONE = 145 ; APU_68_X_25MR = 170 ; AKU_58_X_59 = 171 ;","title":"wsTypes"},{"location":"Database/wsTypes/#wstypeslua","text":"This file can be found at: \"C:\\Program Files\\Eagle Dynamics\\DCS World\\Scripts\\Database\\wsTypes.lua\" -- **************** 1 level *************** wsType_Air = 1 wsType_Ground = 2 wsType_Navy = 3 wsType_Weapon = 4 wsType_Static = 5 wsType_Destroyed = 6 wsType_Test1 = 200 wsType_Point = 201 -- **************** 2 level *************** -- Air objects (wType_Air) wsType_Airplane = 1 wsType_Helicopter = 2 wsType_Free_Fall = 3 -- Weapon (wsType_Weapon) wsType_Missile = 4 wsType_Bomb = 5 wsType_Shell = 6 wsType_NURS = 7 wsType_Torpedo = 8 -- Ground objects (wsType_Ground) wsType_Moving = 8 wsType_Standing = 9 wsType_Tank = 17 wsType_SAM = 16 wsType_Infantry = 20 -- Navy objects (wsType_Navy) wsType_Ship = 12 -- object (wsType_Static) wsType_Airdrome = 13 wsType_Explosion = 14 wsType_GContainer = 15 wsType_AirdromePart = 18 wsType_WingPart = 19 -- **************** 3 level *************** -- Air objects, wsType_Airplane wsType_Fighter = 1 wsType_F_Bomber = 2 wsType_Intercepter = 3 wsType_Intruder = 4 wsType_Cruiser = 5 wsType_Battleplane = 6 -- Free-fall air objects wsType_Snars = 31 wsType_Parts = 35 wsType_FuelTank = 43 -- wsType_Missile wsType_AA_Missile = 7 wsType_AS_Missile = 8 wsType_SA_Missile = 34 wsType_SS_Missile = 11 wsType_A_Torpedo = 10 wsType_S_Torpedo = 11 wsType_AA_TRAIN_Missile = 100 wsType_AS_TRAIN_Missile = 101 -- wsType_Bomb wsType_Bomb_A = 9 wsType_Bomb_Guided = 36 wsType_Bomb_BetAB = 37 wsType_Bomb_Cluster = 38 wsType_Bomb_Antisubmarine = 39 wsType_Bomb_ODAB = 40 wsType_Bomb_Fire = 41 wsType_Bomb_Nuclear = 42 wsType_Bomb_Lighter = 49 -- wsType_Shell wsType_Shell_A = 10 -- Navy objects (wsType_Navy, wsType_Cruiser) wsType_AirCarrier = 12 wsType_HCarrier = 13 wsType_ArmedShip = 14 wsType_CivilShip = 15 wsType_Submarine = 16 -- wsType_Airdrome wsType_RW1 = 20 wsType_RW2 = 30 wsType_Heliport = 40 -- wsType_Explosion wsType_GroundExp = 29 -- wsType_NURS wsType_Container = 32 wsType_Rocket = 33 -- wsType_GContainer wsType_Control_Cont = 44 wsType_Jam_Cont = 45 wsType_Cannon_Cont = 46 wsType_Support = 47 wsType_Snare_Cont = 48 wsType_Smoke_Cont = 50 wsType_JATO_Cont = 51 -- Ground object (wsType_Moving || wsType_Standing ) wsType_NoWeapon = 25 wsType_Gun = 26 wsType_Miss = 27 wsType_ChildMiss = 28 wsType_MissGun = 104 wsType_Civil = 100 --*************************************************** -- wsType_Radar = 101 wsType_Radar_Miss = 102 wsType_Radar_MissGun = 103 wsType_Radar_Gun = 105 -- **************** 4 level *************** -- Free-fall air objects; parts wsType_OBLOMOK_1 = 1; -- 1-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_2 = 2; -- 2-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_3 = 3; -- 3-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_4 = 4; -- 4-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_5 = 5; -- 5-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 wsType_OBLOMOK_6 = 6; -- 6-\u0439 \u043e\u0431\u043b\u043e\u043c\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 OBLOMOK_OBSHIWKI_1 = 7; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 OBLOMOK_OBSHIWKI_2 = 8; -- \u041e\u0441\u043a\u043e\u043b\u043e\u043a \u043e\u0431\u0448\u0438\u0432\u043a\u0438 K36 = 9; -- \u041a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u043d. \u043a\u0440\u0435\u0441\u043b\u043e PILOT_K36 = 10; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 K36 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT = 11; -- \u041f\u0438\u043b\u043e\u0442 RUS \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c FONAR_OTK = 12; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c -- Free-fall air objects - snars wsType_Chaff = 13; -- \u0440\u0430\u0434\u0438\u043e-\u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_Flare = 14; -- \u0442\u0435\u043f\u043b\u043e\u0432\u0430\u044f \u043b\u043e\u0432\u0443\u0448\u043a\u0430 wsType_ShortMTail = 15; -- \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0445\u0432\u043e\u0441\u0442 \u0440\u0430\u043a\u0435\u0442 wsType_SmallBomb = 16; -- \u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b PILOT_ACER = 17; -- \u041f\u0438\u043b\u043e\u0442 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 ACER \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_F14_SEAT = 18; -- \u041f\u0438\u043b\u043e\u0442 F14 \u0432 \u043a\u0440\u0435\u0441\u043b\u0435 \u043f\u0440\u0438 \u043a\u0430\u0442\u0430\u043f\u0443\u043b\u044c\u0442\u0438\u0440\u043e\u0432. PILOT_PARASHUT_US = 19; -- \u041f\u0438\u043b\u043e\u0442 US \u043f\u043e\u0434 \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c A_10_FONAR = 20; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0410-10 F_14A_FONAR = 21; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-14A F_15_FONAR = 22; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15 F_16_FONAR = 23; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 F_18C_FONAR = 24; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18C MIG_23_FONAR = 25; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-23 MIG_25_FONAR = 26; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-25 MIG_27_FONAR = 27; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-27 MIG_29_FONAR = 28; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29K_FONAR = 29; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29\u041a MIG_31_FONAR_P = 30; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_31_FONAR_Z = 31; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-31 (\u0437\u0430\u0434\u043d\u0438\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_L = 32; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_24_FONAR_R = 33; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-24 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_25_FONAR = 34; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25 SU_27_FONAR = 35; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-27 SU_30_FONAR = 36; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-30 SU_33_FONAR = 37; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-33 SU_39_FONAR = 38; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-39 TORNADO_FONAR = 39; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 TORNADO Mirage_FONAR = 40; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage F_4_FONAR_P = 41; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 F_4_FONAR_Z = 42; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0437\u0430\u0434\u043d\u0438\u0439 F_5_FONAR = 43; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 SU_17_FONAR = 44; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-17 SU_34_FONAR_L = 45; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043b\u0435\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) SU_34_FONAR_R = 46; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-34 (\u043f\u0440\u0430\u0432\u044b\u0439 \u043b\u0435\u0442\u0447\u0438\u043a) MIG_29C_FONAR = 47; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 MIG_29G_FONAR = 48; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u041c\u0438\u0413-29 SU_25T_FONAR = 49; -- \u0421\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0430\u0440\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0421\u0443-25\u0422 wsType_Flare_GREEN = 50;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0417\u0415\u041b\u0415\u041d\u0410\u042f wsType_Flare_RED = 51;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u041a\u0420\u0410\u0421\u041d\u0410\u042f wsType_Flare_WHITE = 52;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0411\u0415\u041b\u0410\u042f wsType_Flare_YELLOW = 53;-- \u0441\u0438\u0433\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u043a\u0435\u0442\u0430 \u0416\u0415\u041b\u0422\u0410\u042f PILOT_DEAD = 54;-- \u0442\u0440\u0443\u043f \u043f\u0438\u043b\u043e\u0442\u0430 PARACHUTE_ON_GROUND = 55;-- \u043f\u043e\u0433\u0430\u0441\u0448\u0438\u0439 \u043a\u0443\u043f\u043e\u043b -- \u0412\u0437\u0440\u044b\u0432\u044b GROUND_EXP = 1; -- \u041d\u0430\u0437\u0435\u043c\u043d\u044b\u0439 \u0432\u0437\u0440\u044b\u0432 1 Heliport_standart = 100; -- \u0432\u0435\u0440\u0442\u043e\u043b\u0451\u0442\u043e\u0434\u0440\u043e\u043c -- \u0421\u043f\u0438\u0441\u043e\u043a \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 Airdrome_0 = 0; -- \u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c 0 Khersones = 1; -- \u0425\u0435\u0440\u0441\u043e\u043d\u0435\u0441 Saki = 2; -- \u0421\u0430\u043a\u0438 Simpheropol = 3; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Razdolnoe = 4; -- \u0420\u0430\u0437\u0434\u043e\u043b\u044c\u043d\u043e\u0435 Dzhankoy = 5; -- \u0414\u0436\u0430\u043d\u043a\u043e\u0439 Kirovskoe = 6; -- \u041a\u0438\u0440\u043e\u0432\u0441\u043a\u043e\u0435 Kerch = 7; -- \u0411\u0430\u0433\u0435\u0440\u043e\u0432\u043e (\u041a\u0435\u0440\u0447\u044c) Belbek = 8; -- \u0411\u0435\u043b\u044c\u0431\u0435\u043a Krasnogvardeyskoye = 9; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u043e\u0435 Octyabrskoe = 10; -- \u041e\u043a\u0442\u044f\u0431\u0440\u044c\u0441\u043a\u043e\u0435 Gvardeyskoe = 11; -- \u0421\u0438\u043c\u0444\u0435\u0440\u043e\u043f\u043e\u043b\u044c \u0432\u043e\u0435\u043d\u043d\u044b\u0439 Anapa = 12; -- \u0410\u043d\u0430\u043f\u0430 Krasnodar = 13; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 Novorossiysk = 14; -- \u041d\u043e\u0432\u043e\u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a Krymsk = 15; -- \u041a\u0440\u044b\u043c\u0441\u043a Maykop = 16; -- \u041c\u0430\u0439\u043a\u043e\u043f Gelendzhik = 17; -- \u0413\u0435\u043b\u0435\u043d\u0434\u0436\u0438\u043a Sochi = 18; -- \u0421\u043e\u0447\u0438 (\u0410\u0434\u043b\u0435\u0440) Krasnodar_P = 19; -- \u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440 Sukhumi = 20; -- \u0421\u0443\u0445\u0443\u043c\u0438 Gudauta = 21; -- \u0413\u0443\u0434\u0430\u0443\u0442\u0430 Batumi = 22; -- \u0411\u0430\u0442\u0443\u043c\u0438 Tskhakaya = 23; -- \u0426\u0445\u0430\u043a\u0430\u044f Kobuleti = 24; -- \u041a\u043e\u0431\u0443\u043b\u0435\u0442\u0438 Kutaisi = 25; -- \u041a\u0443\u0442\u0430\u0438\u0441\u0438 MinVody = 26; Nalchick = 27; Mozdok = 28 -- \u041c\u043e\u0437\u0434\u043e\u043a\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c Lochini = 29 -- \u0413\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u0438\u0439 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442 \u0432 \u0422\u0431\u0438\u043b\u0438\u0441\u0438 TbilisiMilitary = 30 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0422\u0431\u0438\u043b\u0438\u0441\u0438 Vaziani = 31 -- \u0412\u043e\u0435\u043d\u043d\u044b\u0439 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c \u0412\u0430\u0437\u0438\u0430\u043d\u0438 Beslan = 32 -- \u0412\u043b\u0430\u0434\u0438\u043a\u0430\u0432\u043a\u0430\u0437-\u0411\u0435\u0441\u043b\u0430\u043d --#ifndef DEMO_VERSION LAST_AIRDROME_TYPE = Nalchick; --#else --LAST_AIRDROME_TYPE = Gvardeyskoe; --#endif DEMO_VERSION ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0410\u042d\u0420\u041e\u0414\u0420\u041e\u041c\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LAST_AIRDROME_TYPE !!! -- ------------------------------------------------------------------------/ wsType_RunWay = 100; -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Airplanes list. \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ -- !!! \u041f\u0420\u0418 \u0414\u041e\u0411\u0410\u0412\u041b\u0415\u041d\u0418\u0418 \u0422\u0418\u041f\u041e\u0412 \u0421\u0410\u041c\u041e\u041b\u0415\u0422\u041e\u0412 \u041f\u0415\u0420\u0415\u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0418\u0422\u042c LastPlaneType !!! -- ------------------------------------------------------------------------/ -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438 \u0438 \u043c\u043d\u043e\u0433\u043e\u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. MiG_23 = 1; -- MiG-23 Flogger MiG_29 = 2; -- MiG-29 Fulcrum Su_27 = 3; -- Su-27 Flanker Su_33 = 4; -- Su-33 F_14 = 5; -- F-14 Tomcat F_15 = 6; -- F-15 Eagle F_16 = 7; -- F-16 Fighting Falcon -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a\u0438. MiG_25 = 8; -- MiG-25 Foxbat MiG_31 = 9; -- MiG-31 Foxhound F_2 = 10; -- Tornado F.2 IDS GR.1A -- \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0438-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_27 = 11; -- MiG-27 Flogger-D Su_24 = 12; -- Su-24 Fencer Su_30 = 13; -- Su-30 FA_18 = 14; -- F/A-18A Hornet F_111 = 15; -- F-111 -- \u0428\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a\u0438. Su_25 = 16; -- Su-25 Frogfoot A_10A = 17; -- A-10A Thunderbolt II -- \u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. Tu_160 = 18; -- Tu-160 Blackjack B_1 = 19; -- B-1 Lancer Su_34 = 20; -- C\u0443-34 \u0418\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c-\u0431\u043e\u043c\u0431a\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a Tu_95 = 21; -- Tu-95 Bear Tu_142 = 22; -- Tu-142 Bear B_52 = 23; -- B-52 Stratofortress -- \u0411\u043e\u043c\u0431\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0438. MiG_25P = 24; -- MiG_25P -- \u041f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0447\u0438\u043a Tu_22M3 = 25; -- Tu-22M3 Backfire -- \u0410\u0412\u0410\u041a\u0421. A_50 = 26; -- \u0410-50 Mainstay E_3 = 27; -- E-3 Sentry -- \u0421\u0430\u043c\u043e\u043b\u0435\u0442\u044b \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a\u0438 IL_78 = 28; -- IL-78 Midas KC_10 = 29; -- KC-10 Extender -- \u0422\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b. IL_76 = 30; -- IL-76 Candid C_130 = 31; -- C-130 Hercules MIG_29K = 32; -- MiG-29K - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c S_3R = 33; -- S-3A VICING, \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439, \u0437\u0430\u043f\u0440\u0430\u0432\u0449\u0438\u043a Mirage = 34; -- Mirage 2000 - \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c -- \u0411\u0435\u0441\u043f\u0438\u043b\u043e\u0442\u043d\u044b\u0435 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b-\u0440\u0430\u0437\u0432\u0435\u0434\u0447\u0438\u043a\u0438. Tu_143 = 35; -- Tu-143 (\u0412\u0420-3) \"\u0420\u0435\u0439\u0441\" Tu_141 = 36; -- Tu-141 (\u0412\u0420-2) \"\u0421\u0442\u0440\u0438\u0436\" F_117 = 37; -- F-117 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a Su_39 = 38; -- SU-39 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AN_26B = 39; -- AN-26B \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 AN_30M = 40; -- AN-30M \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 E_2C = 41; -- E-2C Hawkeye \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 AWACS \u043a\u0430\u043a AN_26B S_3A = 42; -- S-3A Viking \u043f\u0430\u043b\u0443\u0431\u043d\u044b\u0439 \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a AV_8B = 43; -- AV-8B Harrier \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c EA_6B = 44; -- EA-6B Prowler \u0440\u0430\u0434\u0438\u043e\u043f\u0440\u043e\u0442\u0438\u0432\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0448\u0442\u0443\u0440\u043c\u043e\u0432\u0438\u043a F_4E = 45; -- F-4E Phantom II \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c F_5E = 46; -- F-5E Tiger \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c C_17 = 47; -- C-17 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 USA SU_17M4 = 48; -- Cy-17M4 \u0438\u0441\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c MiG_29G = 49; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 MiG_29C = 50; -- MiG-29 Fulcrum \u0433\u0435\u0440\u043c\u0430\u043d\u0441\u043a\u0438\u0439 Su_24MR = 51; -- Su-24MR Fencer F_16A = 52; -- F-16A Fighting Falcon FA_18C = 53; -- F/A-18C Hornet Su_25T = 54; -- Su-25 Frogfoot RQ_1A_Predator = 55;-- Predator UAV TORNADO_IDS = 56; Yak_40 = 57; -- Yak-40 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0439 A_10C = 58; -- A-10C F_15E = 59; -- F-15E KC_135 = 60; -- KC-135 L_39ZA = 61; -- \u041b-39\u0417\u0410 \u0443\u0447\u0435\u0431\u043d\u043e-\u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 P_51B = 62; -- P-51B P_51D = 63; -- P-51D-25-NA P_51D_30_NA = 64; -- P-51D-30-NA TF_51D = 65; -- TF-51D J_11A = 66; -- chinese licensed variant of base Su-27 -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ LastPlaneType = 150;--\u0432\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u043f\u043e\u0434 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u044b -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Helicopters list. \u0421\u043f\u0438\u0441\u043e\u043a \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043e\u0432 ------------------------------------------------------------------------/ MI_8MT = 1 + LastPlaneType; -- M\u0438-8\u041c\u0422. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_24W = 2 + LastPlaneType; -- M\u0438-24B. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 MI_26 = 3 + LastPlaneType; -- M\u0438-26. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_27 = 4 + LastPlaneType; -- Ka-27. \u0420\u043e\u0441\u0441\u0438\u044f/\u0423\u043a\u0440\u0430\u0438\u043d\u0430 KA_50 = 5 + LastPlaneType; -- Ka-50. \u0420\u043e\u0441\u0441\u0438\u044f KA_52 = 6 + LastPlaneType; -- Ka-52. \u0420\u043e\u0441\u0441\u0438\u044f AH_64A = 7 + LastPlaneType; -- AH-64A Apache. NATO AH_64D = 8 + LastPlaneType; -- AH-64D Apache Longbow. NATO CH_47D = 9 + LastPlaneType; -- CH-47D Chinook. NATO CH_53E = 10 + LastPlaneType; -- CH-53E Super Stallion. NATO SH_60B = 11 + LastPlaneType; -- SH-60B Sea Hawk. NATO UH_60A = 12 + LastPlaneType; -- UH-60A Night Hawk. NATO AH_1W = 13 + LastPlaneType; -- AH-1W Super Cobra. NATO SH_3H = 14 + LastPlaneType; -- SH-3W Sea King. NATO Sea_Lynx= 15 + LastPlaneType; -- Sea Lynx Mk88. NATO AB_212 = 16 + LastPlaneType; -- UH-1H. NATO MI_28N = 17 + LastPlaneType; -- \u041c\u0438-28\u041d OH_58D = 18 + LastPlaneType; -- \u041a\u0430\u0439\u043e\u0432\u0430 NATO -- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -- Air-to-Air Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u0432\u043e\u0437\u0434\u0443\u0445. -- 0 - \u043f\u0443\u0441\u0442\u043e empty R_550 = 1; -- R550 Magic 2 MICA_T = 2; -- MICA, IR MICA_R = 3; -- MICA, AR Super_530D = 4; -- Super 530D P_98 = 5; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-98 == P-98R (AA-3 \u201cAnab\u201d) P_4R = 6; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-4R (AA-5 'Ash') P_40R = 7; -- P-40R (AA-6 'Acrid') --P_23R = 8; -- P-23R (AA-7 'Apex') P_24R = 9; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24R (AA-7 'Apex') P_60 = 10; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-60 (AA-8 'Aphid')\u0431\u043b. \u0431\u043e\u044f P_33E = 11; -- P-33\u042d (AA-9 'Amos') \u0431\u043e\u043b.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27AE = 12; -- P-27A\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27P = 13; -- P-27P (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27PE = 14; -- P-27P\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27T = 15; -- P-27T (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27TE = 16; -- P-27T\u042d (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_27EM = 17; -- P-27\u042dM (AA-10 'Alamo')c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_73 = 18; -- P-73 (AA-11 'Archer')\u0431\u043b. \u0431\u043e\u044f P_77 = 19; -- P-77 (PBB-AE) (AA-12)c\u0440.\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 P_37 = 20; -- P-37 AIM_7 = 21; -- AIM-7 'Sparrow' AIM_9 = 22; -- AIM-9 'Sidewinder' AIM_54 = 23; -- AIM-54 'Phoenix' AIM_120= 24; -- AIM-120 'AMRAAM' --P_23T = 25; -- P-23T (AA-7 'Apex') P_24T = 26; -- \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 P-24T (AA-7 'Apex') P_40T = 27; -- P-40T (AA-6 'Acrid') SeaSparrow = 28; -- Sea Sparrow -- Unguided rockets. \u041d\u0435\u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u043d\u0430\u0440\u044f\u0434\u044b. C_8CM = 30; -- C-8CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) C_5 = 31; -- C-5 C_8 = 32; -- C-8 C_13 = 33; -- C-13 C_24 = 34; -- C-24 C_25 = 35; -- C-25 HYDRA_70 = 36; -- HYDRA-70 Zuni_127 = 37; -- Zuni-127 Zuni_127CM = 38; -- Zuni-127CM (\u0441 \u0446\u0432\u0435\u0442\u043d\u044b\u043c \u0434\u044b\u043c\u043e\u043c) -- Air-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u0432\u043e\u0437\u0434\u0443\u0445-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c. AGM_114K = 39; -- AGM-114 Hellfire Laser AGM_119= 40; -- Penguin, Norway X_22 = 41; -- X-22 Burya wing,anti-ship (AS-4'Kitchen') X_29TE = 42; -- X_29TE (AS-14 'Kedge' \u044d\u043a\u0441\u043f\u043e\u0440\u0442) X_23 = 43; -- X-23 Grom anti-radar(AS-7 'Kerry') X_28 = 44; -- X-28 anti-radar(AS-9 'Kyle') X_25ML = 45; -- X-25ML laser (AS-10 'Karen') X_58 = 46; -- X-58 anti-radar(AS-11 'Kilter') X_25MP = 47; -- X-25MP anti-radar(AS-12 'Kegler') AT_6 = 48; -- AT_6 (9M114) radio-command anti-tank, STURM X_29L = 49; -- X-29L laser (AS-14 'Kedge') X_55 = 50; -- X-55 wing (AS-15A 'Kent') X_65 = 51; -- X-65 wing (AS-15B 'Kent') X_15 = 52; -- X-15 \u0430nti-ship,ballistic(AS-16 'Kickback') X_31A = 53; -- X-31A \u0430nti-ship(AS-17 'Krypton') X_59M = 54; -- X-59M Ovod (AS-18 Kazoo) X_35 = 55; -- X-35 (AS-20 'Kayak') X_41 = 56; -- X-41 (unknown) \u0430nti-ship Vikhr = 57; -- 9M120 Vikhr laser (AT-12) {air-tank} Vikhr_M= 58; -- 9M120M Vikhr-M (AT-X-16)laser{air-tank} AGM_114= 59; -- AGM-114 Hellfire Radar AGM_45 = 60; -- AGM-45 'Shrike' anti-radar AGM_65K= 61; -- AGM-65K 'Maverick' AGM_84A= 62; -- AGM-84 'Harpoon' AGM_84E= 63; -- AGM-84E 'SLAM' AGM_86 = 64; -- AGM-86 'CALCM' wing AGM_88 = 65; -- AGM-88 'HARM' anti-radar Sea_Eagle = 66; -- Sea_Eagle SAV611 = 67; -- 4K60 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u0441\u0430 \"\u0428\u0442\u043e\u0440\u043c\" \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 AGM_122= 68; -- AGM-122 'Sidearm' anti-radar AGM_123= 69; -- AGM-123 'Skipper' laser AGM_65E= 70; -- AGM-65E AGM_130= 71; -- AGM-130 wing ALARM = 72; -- ALARM X_23L = 73; -- X-23L Grom laser (AS-7 'Kerry') X_25MR = 74; -- X-25MR TV (AS-12 'Kegler') X_29T = 75; -- X-29T TV (AS-14 'Kedge') X_31P = 76; -- X-31\u041f \u0430nti-radar(AS-17 'Krypton') AGM_65D= 77; -- AGM-65D 'Maverick' Kormoran=78; -- Kormoran AS 34 -- Surface-to-Air Missiles and others. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u0432\u043e\u0437\u0434\u0443\u0445 \u0438 \u043f\u0440\u043e\u0447\u0438\u0435. SM_2 = 79; -- SM-2 \u0434\u043b\u044f TICONDEROGA SA5B55 = 80; -- 5B55 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA48H6E2=81; -- 48\u041d6\u04152 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u041f\u041c\u0423 SA9M82 = 82; -- 9\u041c82 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA9M83 = 83; -- 9\u041c83 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0421-300\u0412 SA3M9M = 84; -- 3\u041c9\u041c \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2\u041a12 \u041a\u0443\u0431 SA9M33 = 85; -- 9\u041c33 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a33 \u041e\u0441\u0430 SA9M31 = 86; -- 9\u041c31 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a31 \u0421\u0442\u0440\u0435\u043b\u0430-1 SA9M38M1=87; -- 9\u041c38\u041c1 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a37 \u0411\u0443\u043a SA9M333= 88; -- 9\u041c333 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 9\u041a35 \u0421\u0442\u0440\u0435\u043b\u0430-10 SA9M330= 89; -- 9\u041c330 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u0440 \u041c1 SA9M311= 90; -- 9\u041c311 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 2C6\u041c \u0422\u0443\u043d\u0433\u0443\u0441\u043a\u0430 Igla_1E= 91; -- Igla-1E \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0417\u0420\u041a \u0418\u0433\u043b\u0430 MIM_104= 92; -- MIM-104 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Patriot FIM_92C= 93; -- FIM_92C STINGER \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 Avenger \u0438 \u0440\u0443\u0447\u043d\u0430\u044f. -------------------------------------------------------------------------------- GRAD_9M22U = 94; -- GRAD-RAKETA \u0420\u0421\u0417\u041e \u0413\u0440\u0430\u0434 \u0440\u0430\u043a\u0435\u0442\u0430 URAGAN_9M27F = 179; -- URAGAN-RAKETA \u0420\u0421\u0417\u041e \u0423\u0440\u0430\u0433\u0430\u043d SMERCH_9M55K = 95; -- SMERCH-RAKETA \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 SMERCH_9M55F = 180; -- \u0420\u0421\u0417\u041e \u0421\u043c\u0435\u0440\u0447 \u0440\u0430\u043a\u0435\u0442\u0430 \u041e\u0424 (HE Rocket) SA5B27 = 97; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0417-\u0412 5B27 \u0434\u043b\u044f \"\u0413\u0440\u043e\u0437\u043d\u043e\u0433\u043e\" HAWK_RAKETA = 98; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u0434\u043b\u044f Hawk ROLAND_R = 99; -- \u0420\u0430\u043a\u0435\u0442\u0430 ROLAND SM_1 = 100; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-66B SM_2ER = 101; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-156A SM_6 = 102; --\u0420\u0430\u043a\u0435\u0442\u0430 RIM-174 AIM_120C = 106; -------------------------------------------------------------------------------- -- Surface-to-Surface Missiles. \u0420\u0430\u043a\u0435\u0442\u044b \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c-\u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c P_35 = 118; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041f\u0440\u043e\u0433\u0440\u0435\u0441\u0441-\u041c P_500 = 119; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0411\u0430\u0437\u0430\u043b\u044c\u0442 P_700 = 120; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0440\u0430\u043d\u0438\u0442 P_15U = 121; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u0435\u0440\u043c\u0438\u0442 P_120 = 122; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0430\u043b\u0430\u0445\u0438\u0442 R_85 = 123; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u041c\u0435\u0442\u0435\u043b\u044c R_85U = 124; -- \u0420\u0430\u043a\u0435\u0442\u0430-\u0442\u043e\u0440\u043f\u0435\u0434\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0420\u0430\u0441\u0442\u0440\u0443\u0431 BGM_109B = 125; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0422\u043e\u043c\u0430\u0433\u0430\u0432\u043a AGM_84S = 126; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a\u043e\u0440\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u0430 \u0413\u0430\u0440\u043f\u0443\u043d MALUTKA = 127; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041c\u0430\u043b\u044e\u0442\u043a\u0430 \u0411\u041c\u0414-1 \u0438 \u0411\u041c\u041f-1 KONKURS = 128; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u041a\u043e\u043d\u043a\u0443\u0440\u0441 \u0411\u041c\u041f-2 P_9M117 = 129; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u0411\u041c\u041f-3 TOW = 130; -- \u0420\u0430\u043a\u0435\u0442\u0430 \u043a \u041c-2 M26 = 131; -- \u041d\u0443\u0440\u0441 \u043a MLRS AGM_154 = 132; -- AGM-154 JSOW S_25L = 133; -- S-25L SCUD_RAKETA = 96; -- -------------------------------------------------------------------------------- wsType_Shell_SPPU = 134; -- \u0441\u043d\u0430\u0440\u044f\u0434 \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439. 20 \u043c\u043c -------------------------------------------------------------------------------- -- Added missiles --Air-to-Air AIM_9P = 135; -- AIM-9P 'Sidewinder' rear_aspect IR missile AIM_9X = 136; -- AIM-9X 'Sidewinder' perspective all aspect IR/UV missile MIM_72G = 137; -- M48 Chaparral missile, sidewinder-like AGM_65H = 138; -- new mavericks AGM_65G = 139; TGM_65G = 140; -- training TGM_65D = 141; -- training CATM_65K = 142; -- training -- Air-to-air CATM_9 = 143; -- -- wsType \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u0433\u0438\u0434\u0440 HYDRA_70_MK1 = 144; HYDRA_70_MK5 = 145; HYDRA_70_MK61 = 146; HYDRA_70_M151 = 147; HYDRA_70_M156 = 148; HYDRA_70_WTU1B = 149; HYDRA_70_M274 = 150; HYDRA_70_M257 = 151; HYDRA_70_M278 = 152; P_9M133 = 153; ATGM_Kornet = P_9M133; -- 9M133 --------------------- TGM_65H = 154; --------------------- C_8OFP2 = 155; --------------------- REFLEX = 156; -- ATGM 9M119 Reflex T-80UD SVIR = 157; -- ATGM 9M119 Svir T-72B --------------------- C_8OM = 158; --------------------- HVAR = 159; TOW2 = 160; -- ATGM C_8CM_GN = 181; C_8CM_RD = 182; C_8CM_WH = 183; C_8CM_BU = 184; C_8CM_YE = 185; C_8CM_VT = 186; M26HE = 187; -- HE heavy rocket for MLRS -- Bombs. \u0411\u043e\u043c\u0431\u044b. Bomb_Other = 0; -- \u0412\u0441\u0435-\u0440\u0430\u0432\u043d\u043e-\u043a\u0430\u043a\u0430\u044f \u0431\u043e\u043c\u0431\u0430 (\u0442\u0438\u043f \u0432 \u043a\u043e\u0434\u0435 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f) BetAB_150DS = 1; -- BetAB-150DS, BetAB_250 = 2; -- BetAB-250, BetAB_500 = 3; -- BetAB-500, BetAB_500ShP= 4; -- BetAB-500ShP FAB_100 = 5; -- FAB-100, FAB_250 = 6; -- FAB-250, FAB_500 = 7; -- FAB-500 FAB_1000 = 8; -- FAB-1000 FAB_1500 = 9; -- FAB-1500 FAB_5000 = 10; -- FAB-5000 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 KAB_500 = 11; -- KAB-500 KAB_500Kr = 12; -- KAB-500Kr, KAB_500KrOD = 13; -- KAB-500Kr-OD, KAB_1500Kr = 14; -- KAB-1500Kr ODAB_500PM = 16; -- ODAB-500 PM ODAB_250 = 17; -- ODAB-250 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 RBK_250 = 18; -- RBK-250, RBK_250S = 19; -- RBK-250S, RBK_500AO = 20; -- RBK-500AO, RBK_500SOAB = 21; -- RBK-500SOAB Puma = 22; -- Puma BL_755 = 23; -- BL_755 GluB = 24; -- Glubinaya Bomba NB_1 = 25; -- Nuclear Bomb - 1 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 NB_2 = 26; -- Nuclear Bomb - 2 Torpedo = 27; -- Torpedo XZAB_250 = 28; -- XZAB-250, XZAB_500 = 29; -- XZAB-500 Mk_81 = 30; -- Mk-81 Mk_82 = 31; -- Mk-82 Mk_83 = 32; -- Mk-83 Mk_84 = 33; -- Mk-84 M_117 = 34; -- M-117 CBU_97 = 35; -- CBU-97 GBU_10 = 36; -- GBU-10 GBU_11 = 37; -- GBU-11 GBU_12 = 38; -- GBU-12 GBU_16 = 39; -- GBU-16 GBU_17 = 40; -- GBU-40 GBU_24 = 41; -- GBU-41 GBU_15 = 42; -- GBU-15 GBU_27 = 43; -- GBU-27 GBU_22 = 44; -- GBU-22 ROCKEYE = 45; -- \u0411\u043e\u043c\u0431\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 AGM_62 = 47; -- AGM-62 Walley GBU_28 = 48; -- GBU-28 GBU_29 = 49; -- GBU-29 GBU_30 = 50; -- GBU-30 JDAM FAB_100P = 53; -- FAB-100\u041f FAB_250P = 54; -- FAB-250\u041f FAB_500P = 55; -- FAB-500\u041f FAB_500_3 = 56; -- FAB-500 - 3 MW_1 = 57; -- MW-1 dispenser PB_250 = 58; -- PB-250 c \u043f\u0430\u0440\u0430\u0448\u044e\u0442\u043e\u043c Z_BAK_3 = 59; -- \u0437\u0430\u0436\u0438\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0431\u0430\u043a - 3 \u0442\u0438\u043f Mk_50_Torpedo = 61;-- \u0442\u043e\u0440\u043f\u0435\u0434\u0430 Mk-60 Durandal = 62; -- BLU_107 Durandal SAB_100 = 63; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 LUU_2B = 64; -- \u041e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0438\u0430\u0431\u043e\u043c\u0431\u0430 \u0438\u0437 \u043a\u0430\u0441\u0441\u0435\u0442\u044b SUU_25 AO_2_5RT = 65; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 PTAB_2_5KO = 66; -- \u0421\u0443\u0431\u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441 \u0434\u043b\u044f \u041a\u041c\u0413\u0423-2 -- 67 \u0438 68 - PTAB_2_5RT_void \u0438 AO_2_5RT_void BDU_33 = 69; BDU_50LD = 70; BDU_50HD = 71; BDU_50LGB = 72; BDU_56LD = 73; BDU_56LGB = 74; MK_82AIR = 75; LUU_19 = 76; -- IR-\u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u043e\u043c\u0431\u0430 CBU_87 = 77; CBU_89 = 78; MK_82SNAKEYE = 79; LUU_2AB = 80; LUU_2BB = 81; LUU_1 = 82; LUU_5 = 83; LUU_6 = 84; GBU_31 = 85; GBU_38 = 86; CBU_105 = 87; CBU_103 = 88; CBU_104 = 89; AN_M64 = 90; RBK_500U = 91; GBU_31_V_3B = 92; CBU_52B = 93; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u044b \u0438 \u0431\u0430\u043a\u0438. \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438. UB_13 = 1; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 UB_32_1 = 2; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MBD_3 = 3; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 \u0431\u043e\u043c\u0431\u044b LAU_88 = 4; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 3 MAVERICK PTB_3000 = 5; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 C\u0443-24 \u043d\u0430 3000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 B_20 = 6; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 S_25_C = 7; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 c \u0440\u0430\u043a\u0435\u0442\u043e\u0439 LAU_10 = 8; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 LAU_61 = 9; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 F_15_PTB =10; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-15C 1600 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N1 =11; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 1120 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_16_PTB_N2 =12; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-16 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 F_18_PTB =13; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-18 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_23_PTB =14; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-23 640 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MIG_25_PTB =15; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-25 4370 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1150 =16; -- \u0411\u0430\u043a 1 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 900 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 PTB_1500 =17; -- \u0411\u0430\u043a 2 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 MIG-29 1200 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 SPPU_22 =18; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u041f\u041f\u0423-22 KINGAL =19; -- \u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0421\u0443-39 UPK_23_25 =20; -- \u041f\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0423\u041f\u041a-23-25 MBD =21; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 6-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 MBD_4 =22; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 4-\u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 TU_22_MBD =23; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u0431\u043e\u043c\u0431 \u0434\u043b\u044f \u0422\u0443-22\u041c3 S_25_PU =24; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 C-25 \u0431\u0435\u0437 \u0440\u0430\u043a\u0435\u0442\u044b ALQ_131 =25; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0428\u0410) LANTIRN =26; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b.F-16 LANTIRN_F18 =27; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PAVETACK =28; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-111 SORBCIJA =29; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0421\u0443-27) SPS_141 =30; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f (\u0420\u043e\u0441\u0441\u0438\u044f) PTB_B_1B =31; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 B-1B \u043d\u0430 14915 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_3_LAU_10=32; -- MDB-3 & 3 LAU_10 MBD_3_LAU_61=33; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u041d\u0423\u0420\u0421-\u043e\u0432 MDB-3 & 3 LAU_61 AT_9M120 =34; -- Vikhr (AT-12) {air-tank} AT_9M120M =35; -- Vikhr-M (AT-X-16) {air-tank} F_5_PTB =36; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-5 1000 \u043b \u0442\u043e\u043f\u043b\u0438\u0432\u0430 Sky_Shadow =37; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f, Tornado PTB_F2_1500 =38; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Tornado \u043d\u0430 1500 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 M2000_PTB =39; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 Mirage \u043d\u0430 1000 \u043a\u0433 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 MBD_A10_2 =40; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f A-10 F4_PTB_WING =41; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u043a\u0440\u044b\u043b\u044c\u0435\u0432\u043e\u0439 F4_PTB_FUZ =42; -- \u0411\u0430\u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 F-4 \u0444\u044e\u0437\u0435\u043b\u044f\u0436\u043d\u044b\u0439 AGM_114_Pilon = 43; -- \u0431\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 4\u0445 \u0442\u043e\u0447\u0435\u0447\u043d\u044b\u0439 AT_6_9M114 =44; -- SHTURM \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0442\u0438\u043f\u0430 Vikhr-M F4_PILON =45; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 \u0434\u043b\u044f F4 MER_L_P_60 = 46; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043b\u0435\u0432\u044b\u0439 MER_R_P_60 = 47; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c 2\u0445 \u0440\u0430\u043a\u0435\u0442 P_60 \u043f\u0440\u0430\u0432\u044b\u0439 MER_TOW = 48; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 4 TOW MER_2_F_18 = 49; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 2, F-18 MER_9_B52 = 50; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 9, B-52 MER_12_B52 = 51; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 12, B-52 MBD_6_B52 = 52; -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0439 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c \u043d\u0430 6, B-52 PTB_2000 = 53; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 2000 \u043b \u0434\u043b\u044f \u0421\u0443-34 PTB_800L_Wing = 54; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 800 \u043b \u0434\u043b\u044f Mig-23 PTB_S_3 = 55; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u0434\u043b\u044f S-3 PTB_367GAL = 56; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 367 gal \u0434\u043b\u044f F-14 SKY_SHADOW = 57; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0420\u042d\u041f BOZ_100 = 58; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 c \u043b\u043e\u0432\u0443\u0448\u043a\u0430\u043c\u0438 LANTIRN_F14 = 59; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-14 FLIR_POD = 60; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. F-18 PTB_1150_29 = 61; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a \u043d\u0430 1150 l \u0434\u043b\u044f MiG-29 TANGAZH = 62; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 EPHIR = 63; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 SHPIL = 64; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0437\u0432\u0435\u0434\u043a\u0438 FANTASM = 65; -- \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0443\u043f\u0440\u0430\u0432\u043b. SmokeGenerator_red = 66;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). SmokeGeneratorAIM_red = 67;-- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439). AIM-9S B_20CM = 68; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 \u0430\u043d\u0430\u043b\u043e\u0433 B-20 Whiskey_Pete = 69; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0430\u0440\u043a\u0435\u0440\u043d\u044b\u0445 \u041d\u0423\u0420\u0421-\u043e\u0432 2.75 SUU_25 = 70; -- \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0430\u043b\u043a\u0430) \u0441 \u043e\u0441\u0432\u0435\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0431\u043e\u043c\u0431\u0430\u043c\u0438 --71,72 is free, use if you want (duplicated F-18 fuel tanks removed) AN_AAS_38_FLIR = 74; -- AN/AAS-38 FLIR MBD_2_67U = 76; -- \u041c\u0411\u0414-2-67\u0423 S_25L_AND_PU = 77; -- \u0421-25\u041b + \u041f\u0423 (\u0431\u043e\u043b\u0432\u0430\u043d\u043a\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430) AN_ASQ_173_LST_CAM = 78; -- AN/ASQ-173 LST/CAM AKU_58 = 80; -- AKU_58 KMGU_2 = 81; -- KMGU-2 SmokeGenerator_green = 82; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). SmokeGenerator_blue = 83; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). SmokeGenerator_white = 84; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). SmokeGenerator_yellow = 85; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). SmokeGenerator_orange = 86; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). SmokeGeneratorAIM_green = 87; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0437\u0435\u043b\u0435\u043d\u044b\u0439). AIM-9S SmokeGeneratorAIM_blue = 88; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0441\u0438\u043d\u0438\u0439). AIM-9S SmokeGeneratorAIM_white = 89; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0431\u0435\u043b\u044b\u0439). AIM-9S SmokeGeneratorAIM_yellow = 90; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u0436\u0435\u043b\u0442\u044b\u0439). AIM-9S SmokeGeneratorAIM_orange = 91; -- \u0414\u044b\u043c\u043e\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 (\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439). AIM-9S APU_68 = 92; -- APU-68 APU_73 = 93; -- APU-73 MPS_410 = 94; -- MPS_410 \u041c\u0430\u043b\u043e\u0433\u0430\u0431\u0430\u0440\u0438\u0442\u043d\u0430\u044f \u043f\u043e\u043c\u0435\u0445\u043e\u0432\u0430\u044f \u0441\u0442\u0430\u043d\u0446\u0438\u044f Kopyo = 95; -- \u0420\u0430\u0434\u0430\u0440 \"\u041a\u043e\u043f\u044c\u0435\" \u0432 \u043f\u043e\u0434\u0432\u0435\u0441\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435 APU_170 = 96; -- \u0410\u041f\u0423-170 LAU_117 = 97; -- LAU_117 B_8V20A = 98; -- B_8V20A PTB_KA_50 = 99; -- PTB KA-50 Shturm_9K114 = 100; AN_AAQ_28_LITENING = 101; -- AN/AAQ-28 LITENING TER_LS = 102; -- Triple ejector rack TK600 = 103; -- \u0422\u043e\u043f\u043b\u0438\u0432\u043d\u044b\u0439 \u0431\u0430\u043a TRAVEL_POD = 104; -- \u0413\u0438\u0434\u0440\u044b -- \u041d\u0430 LAU_68 LAU_68_HYDRA_70_MK1 = 105; LAU_68_HYDRA_70_MK5 = 106; LAU_68_HYDRA_70_MK61 = 107; LAU_68_HYDRA_70_M151 = 108; LAU_68_HYDRA_70_M156 = 109; LAU_68_HYDRA_70_WTU1B = 110; LAU_68_HYDRA_70_M274 = 111; LAU_68_HYDRA_70_M257 = 112; LAU_68_HYDRA_70_M278 = 113; -- \u041d\u0430 LAU_131 LAU_131_HYDRA_70_MK1 = 114; LAU_131_HYDRA_70_MK5 = 115; LAU_131_HYDRA_70_MK61 = 116; LAU_131_HYDRA_70_M151 = 117; LAU_131_HYDRA_70_M156 = 118; LAU_131_HYDRA_70_WTU1B = 119; LAU_131_HYDRA_70_M274 = 120; LAU_131_HYDRA_70_M257 = 121; LAU_131_HYDRA_70_M278 = 122; -- 3* SUU_25 (\u043d\u0430 TER) SUU_25x3 = 123; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_68 (\u043d\u0430 TER) LAU_68x3_HYDRA_70_MK1 = 124; LAU_68x3_HYDRA_70_MK5 = 125; LAU_68x3_HYDRA_70_MK61 = 126; LAU_68x3_HYDRA_70_M151 = 127; LAU_68x3_HYDRA_70_M156 = 128; LAU_68x3_HYDRA_70_WTU1B = 129; LAU_68x3_HYDRA_70_M274 = 130; LAU_68x3_HYDRA_70_M257 = 131; LAU_68x3_HYDRA_70_M278 = 132; -- \u041d\u0430 \u0442\u0440\u043e\u0439\u043d\u043e\u043c LAU_131 (\u043d\u0430 TER) LAU_131x3_HYDRA_70_MK1 = 133; LAU_131x3_HYDRA_70_MK5 = 134; LAU_131x3_HYDRA_70_MK61 = 135; LAU_131x3_HYDRA_70_M151 = 136; LAU_131x3_HYDRA_70_M156 = 137; LAU_131x3_HYDRA_70_WTU1B= 138; LAU_131x3_HYDRA_70_M274 = 139; LAU_131x3_HYDRA_70_M257 = 140; LAU_131x3_HYDRA_70_M278 = 141; ALQ_184 = 142; LAU_68 = 143; LAU_131 = 144; OH_58_BRAUNING = 145; LAU_131WP = 146; M279_AGM114 = 147; B_8V20A_WP = 148; B_8V20A_OFP2 = 149; B_8V20A_OM = 150; B_8M1_OFP2 = 151; DROP_TANK_75GAL = 152; M134_L = 160; M134_R = 161; XM_158_HYDRA_70_MK1 = 162; XM_158_HYDRA_70_MK5 = 163; XM_158_HYDRA_70_M151 = 164; XM_158_HYDRA_70_M156 = 165; XM_158_HYDRA_70_M274 = 166; XM_158_HYDRA_70_M257 = 167; M261_HYDRA_70_M151 = 168; M261_HYDRA_70_M156 = 169; GUV_YakB_GSHP = 170; GUV_VOG = 171; HWAR_SMOKE_GENERATOR = 172; M134_SIDE_L = 174; M134_SIDE_R = 175; M60_SIDE_L = 176; M60_SIDE_R = 177; BRU_42_HS = 178; KORD_12_7 = 183; PKT_7_62 = 184; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 ----------------------------------------------------------------------/ Kuznecow = 1; -- \u0410\u0432\u0438\u0430\u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0440\u0435\u0439\u0441\u0435\u0440 \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432 VINSON = 2; -- \u0410\u0432\u0438\u0430\u043d\u043e\u0441\u0435\u0446 VINSON MOSCOW = 3; -- \u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u041c\u043e\u0441\u043a\u0432\u0430\" GROZNY = 4; -- P.\u041a\u0440\u0435\u0439\u0441\u0435\u0440 \"\u0413\u0440\u043e\u0437\u043d\u044b\u0439\" wsType_GenericCivShip = 5; --ELNYA = 5; -- \u0422\u0430\u043d\u043a\u0435\u0440 \u0415\u043b\u044c\u043d\u044f wsType_GenericLightArmoredShip = 6; --KATER = 6; -- \u0422\u0443\u0440\u0435\u0446\u043a\u0438\u0439 \u043a\u0430\u0442\u0435\u0440 --AKVAMAREN = 7; -- \u0411\u0422\u0429 \u0410\u043a\u0432\u0430\u043c\u0430\u0440\u0438\u043d Natya (NAT\u041e-\u043a\u043e\u0434) AZOV = 8; -- \u0411\u041f\u041a \u0410\u0437\u043e\u0432 Kara BOBRUISK = 9; -- \u0411\u0414\u041a \u0411\u043e\u0431\u0440\u0443\u0439\u0441\u043a Ropucha BORA = 10; -- \u0420\u041a\u0412\u041f \u0411\u043e\u0440\u0430 Sivuch ALBATROS = 11; -- \u0421\u041a\u0420 \u0410\u043b\u044c\u0431\u0430\u0442\u0440\u043e\u0441 Grisha V AMETYST = 12; -- \u0421\u041a\u0420 \u0410\u043c\u0435\u0442\u0438\u0441\u0442 Grisha II OREL = 13; -- \u0411\u0421\u041a\u0420 \u041e\u0440\u0435\u043b Krivak III REZKY = 14; -- \u0411\u0421\u041a\u0420 \u0420\u0435\u0437\u043a\u0438\u0439 Krivak II MOLNIYA = 15; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041c\u043e\u043b\u043d\u0438\u044f Tarantul III --MURENA = 16; -- \u0421\u0412\u041f \u041c\u0443\u0440\u0435\u043d\u0430 Tsaplya PERRY = 17; -- \u0424\u0440\u0435\u0433\u0430\u0442 Oliver Perry OSA = 18; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u041e\u0441\u0430 Osa SKORY = 19; -- \u0411\u041f\u041a \u0421\u043a\u043e\u0440\u044b\u0439 Kashin SPRUANCE = 20; -- \u042d\u0441\u043c\u0438\u043d\u0435\u0446 Spruance TICONDEROGA = 21; -- \u0420. \u043a\u0440\u0435\u0439\u0441\u0435\u0440 Ticonderoga --TK = 22; -- \u0422\u043e\u0440\u043f\u0435\u0434\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --wsType_GenericSubmarine = 23; -- Temporary KILO = 23; -- \u041f\u041b \u0412\u0430\u0440\u0448\u0430\u0432\u044f\u043d\u043a\u0430 Kilo TANGO = 24; -- \u041f\u041b \u0421\u043e\u043c Tango VETER = 25; -- \u0420. \u043a\u0430\u0442\u0435\u0440 \u0412\u0435\u0442\u0435\u0440 Nanuchka III --ZWEZDNY = 26; -- \u041f\u0440\u043e\u0433\u0443\u043b\u043e\u0447\u043d\u044b\u0439 \u043a\u0430\u0442\u0435\u0440 --YASTREBOW = 27; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c NEUSTRASH = 28; -- \u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0430\u0431\u043b\u044c --BARGE_WITH_SAND = 29; --BARGE_WITHOUT_SAND = 30; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastShipType !!! LastShipType = NEUSTRASH; ----------------------------------------------------------------------/ -- \u041a\u041e\u0420\u0410\u0411\u041b\u0418 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ wsType_Test4 = 200; -- \u0442\u043e\u0447\u043a\u0430 \u043d\u0430 \u0437\u0435\u043c\u043b\u0435 ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 ----------------------------------------------------------------------/ -- \u041e\u0411\u042a\u0415\u041a\u0422\u042b \u041f\u0412\u041e ----------------------------------------------------------------------/ EWR_1L13 = 1; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 1L13 EWR_55G6 = 2; -- \u0420\u0430\u0434\u0430\u0440 \u0434\u0430\u043b\u044c\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f 55\u04166 KP_54K6 = 3; -- \u041a\u041f 54K6 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 V_40B6M = 4; -- track radar V_40B6MD = 5; -- search radar RLS_5H63C = 6; -- track radar RLO_64H6E = 7; -- search radar PU_5P85C = 8; -- launcher PU_5P85D = 9; -- launcher RLS_9C32_1 = 10; -- track radar RLO_9C15MT = 11; -- search radar RLO_9C19M2 = 12; -- search radar S300V_9A82 = 13; -- launcher S300V_9A83 = 14; -- launcher S300V_9A84 = 15; -- launcher S300V_9A85 = 16; -- launcher BUK_9C470M1 = 17; -- \u041a\u041f BUK_9C18M1 = 18; -- search radar BUK_PU = 19; -- launcher BUK_LL = 20; -- loader/launcher KUB_1C91 = 21; -- search and track radar (str) KUB_2P25 = 22; -- launcher OSA_9A33BM3 = 23; -- search radar OSA_9T217 = 24; -- loader Strela_9K31 = 25; -- launcher Strela_9K35 = 26; -- launcher (ln) Radar_Dog_Ear = 27; -- search radar Tor_ = 28; -- str, ln Tunguska_ = 29; -- str, ln Shilka_ = 30; -- str, ln Roland_ = 31; -- str, ln Roland_Search_Radar = 32; -- search radar Avenger_ = 33; -- ln Patr_AN_MPQ_53_P = 34; -- str Patr_KP = 36; -- \u041a\u043e\u043c\u0430\u043d\u0434\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442 \u0434\u043b\u044f \"\u041f\u0430\u0442\u0440\u0438\u043e\u0442\u0430\" Patriot_ = 37; -- ln Gepard_ = 38; -- str, ln Hawk_Search_Radar = 39; -- search radar Hawk_Track_Radar = 40; -- track radar Hawk_ = 41; -- ln Hawk_CWAR_Radar = 42; Hawk_CV = 43; --Stinger_ = 44; -- ln --KP_S300V_9C457 = 45; -- \u041f\u0443\u043d\u043a\u0442 \u0431\u043e\u0435\u0432\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0421300 \u0412 wsTypeVulkan = 46; -- ln wsType_GenericAAA = 47; -- Temporary ZU_23 = 47; -- \u0433\u043e\u043b\u0430\u044f \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 ZU_23_OKOP = 48; -- \u043d\u0435\u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u0441 \u043e\u0431\u0432\u0430\u043b\u043e\u0432\u043a\u043e\u0439 ZU_23_URAL = 49; -- \u043f\u043e\u0434\u0432\u0438\u0436\u043d\u0430\u044f \u0417\u0423-23 \u043d\u0430 \u0423\u0440\u0430\u043b\u0435 wsType_Generic_IR_SAM = 50; -- Temporary M48_Chaparral = 50; -- \u0430\u043d\u0430\u043b\u043e\u0433 \u0421\u0442\u0440\u0435\u043b\u0430-1 M6Linebacker = 51; -- M6 Linebacker HumanTypeStart = 52; -- \u0441\u0442\u0430\u0440\u0442 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 IglaRUS_1 = 52; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 IglaRUS_2 = 53; -- \u0441\u043b\u0430\u0432\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 IglaGRG_1 = 54; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b IglaGRG_2 = 55; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 Stinger_manpad = 56; -- \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043d\u0433\u0435\u0440\u0438\u0441\u0442 --StingerUSA_1 = 56; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 StingerUSA_2 = 57; -- \u0430\u043c\u0435\u0440\u0438\u043a\u0430 \u043f\u0430\u0440\u0430 --StingerIZR_1 = 58; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 StingerIZR_2 = 59; -- \u0438\u0437\u0440\u0430\u0438\u043b\u044c\u0442\u044f\u043d\u0435 \u043f\u0430\u0440\u0430 --StingerGRG_1 = 60; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b --StingerGRG_2 = 61; -- \u0433\u0440\u0443\u0437\u0438\u043d\u044b \u043f\u0430\u0440\u0430 IglaINS_1 = 62; HumanTypeEnd = 62; -- \u043a\u043e\u043d\u0435\u0446 \u043a\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043c\u0443\u0436\u0438\u043a\u043e\u0432 \u0441 \u0431\u0430\u0437\u0443\u043a\u0430\u043c\u0438 ZU_23_insurgent = 70; -- ZU-23 insurgent ZU_23_insurgent_okop = 71; -- ZU-23 insurgent ZU_23_insurgent_ural = 72; -- ZU-23 insurgent SA3_TR = 73; -- S-125 SA3_LN = 74; -- S-125 SA3_SR = 75; -- S-125 -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastSAMType !!! LastSAMType = SA2_SR; ----------------------------------------------------------------------/ -- \u041d\u0430\u0437\u0435\u043c\u043d\u0430\u044f \u0422\u0415\u0425\u041d\u0418\u041a\u0410 ----------------------------------------------------------------------/ wsType_GenericSAU = 1; -- Temporary --wsTypeSAUmsta = 1; --wsTypeSAUakacia = 2; --wsTypeSAU_2C9 = 3; wsTypeTMZ5 = 4; wsTypeTZ10 = 5; wsType_GenericVehicle = 6; --wsTypeUralApa = 6; wsType_GenericIFV = 7; --Temporary --wsTypeBMD1 = 7; --wsTypeBMP1 = 8; --wsTypeBMP2 = 9; wsType_GenericAPC = 10; -- Temporary --wsTypeBRDM2 = 10; --wsTypeBTR70 = 11; --wsTypeGrad = 12; --wsTypeM818 = 13; -- \u0422\u044f\u0433\u0430\u0447 M-818 wsType_Hummer = 14; -- Temporary --wsTypeLAV25 = 15; wsType_GenericTank = 16; --wsTypeLeopard2 = 16; --wsTypeAAV7 = 17; --wsTypeM109 = 18; --wsTypeM113 = 19; --wsTypeM113G = 20; --wsTypeAbrams = 21; --wsTypeMarder = 22; --wsTypeBeregSAU = 23; --wsTypeBeregRLS = 24; wsTypeMAZelektro = 25; wsTypeMAZkaraul = 26; wsTypeMAZobsch = 27; wsTypeMAZstol = 28; --wsTypeSmerch = 29; --wsTypeATZ60 = 30; --wsTypeRLS_PRW11 = 31; wsTypeRLS_RSP7 = 32; --wsTypeReis = 33; -- \u0420\u0430\u0437\u0432\u0435\u0434 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441 \u0420\u0435\u0439\u0441 wsTypeRLS37 = 34; -- \u0420\u041b\u0421-37 --wsTypeT80 = 35; --wsTypeTiagach = 36; -- \u0422\u044f\u0433\u0430\u0447 \u0434\u043b\u044f \u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432\u0430 --wsTypeTPZ = 37; wsTypeUAZ469 = 38; --wsTypeUragan = 39; wsTypeUral375 = 40; wsTypeUral375PBU = 41; --wsTypeZapros = 43; wsTypeZIL135 = 44; wsTypeElektrovoz = 45; -- \u042d\u043b\u0435\u043a\u0442\u0440\u043e\u0432\u043e\u0437 wsTypeBus = 46; -- \u0410\u0432\u0442\u043e\u0431\u0443\u0441 wsTypeVAZ = 47; -- \u041b\u0435\u0433\u043a\u043e\u0432\u043e\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c wsTypeTeplowoz = 48; -- \u0422\u0435\u043f\u043b\u043e\u0432\u043e\u0437 wsTypeTrolebus = 49; -- \u0422\u0440\u043e\u043b\u043b\u0435\u0439\u0431\u0443\u0441 wsTypeWCisternaBLUE = 50; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWCisternaYELLOW = 98; -- \u0412\u0430\u0433\u043e\u043d-\u0446\u0438\u0441\u0442\u0435\u0440\u043d\u0430 wsTypeWGruz = 51; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWGruzOtkr = 52; -- \u0412\u0430\u0433\u043e\u043d \u0433\u0440\u0443\u0437\u043e\u0432\u043e\u0439 wsTypeWagonPlatforma= 53; -- \u0412\u0430\u0433\u043e\u043d-\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 wsTypeWagonPass = 54; -- \u0412\u0430\u0433\u043e\u043d \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0439 --wsTypeRadioSt = 55; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a wsTypeKAMAZ_Fire = 56; -- \u041f\u043e\u0436\u0430\u0440\u043d\u044b\u0439 \u041a\u0430\u043c\u0410\u0417 wsTypeKAMAZ_Tent = 57; -- \u041a\u0430\u043c\u0410\u0417 \u0441 \u0442\u0435\u043d\u0442\u043e\u043c wsTypeLAZ_695 = 58; -- \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u0440\u0430\u0434\u0438\u043e \u043c\u0430\u044f\u043a --wsType2C1 = 59; -- C\u0410\u0423 --wsTypeBMP3 = 60; -- \u0411\u041c\u041f-3 --wsTypeM2Bradley = 61; -- \u0411\u041c\u041f --wsTypeMCV80 = 62; -- \u0411\u041c\u041f wsType_GenericMLRS = 63; -- \u0420\u0421\u0417\u041e --wsTypeM_60 = 64; -- \u0422\u0430\u043d\u043a \u041c-60 --wsTypeLeo1 = 65; -- \u0422\u0430\u043d\u043a Leo1 --wsTypeBTR_D = 66; -- \u0411\u0422\u0420-\u0414 wsTypeGAZ_66 = 67; -- GAZ-66 wsTypeGAZ_3307 = 68; -- GAZ-3307 wsTypeGAZ_3308 = 69; -- GAZ-3308 wsTypeMAZ_6303 = 70; -- MAZ-6303 wsTypeZIL_4334 = 71; -- ZIL-4334 --wsTypePredator_GCS = 72; --\u041a\u041f \u0434\u043b\u044f UAV Predator --wsTypePredator_TrojanSpirit = 73;--\u0421\u0442\u0430\u043d\u0446\u0438\u044f \u0441\u0432\u044f\u0437\u0438 \u0434\u043b\u044f UAV Predator --wsTypeZIL_SKP_11 = 74; --\u0421\u041a\u041f-11 \u041f\u0435\u0440\u0435\u0434\u0432\u0438\u0436\u043d\u043e\u0439 \u041a\u041f \u0434\u043b\u044f \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u043f\u043b\u043e\u0449\u0430\u0434\u043e\u043a \u0438 \u043c\u0430\u043b\u044b\u0445 \u0430\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043e\u0432 wsTypeURAL_4320T = 75; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320 \u0441 \u0442\u0435\u043d\u0442\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043a\u0443\u0437\u043e\u0432\u043e\u043c --wsTypeURAL_4320_31 = 76; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0423\u0440\u0430\u043b-4320-31 \u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0432\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u0431\u0438\u043d\u043e\u0439 --wsTypeURAL_ATsP_6 = 77; --\u041f\u043e\u0436\u0430\u0440\u043d\u0430\u044f \u043c\u0430\u0448\u0438\u043d\u0430 \u0423\u0440\u0430\u043b \u0410\u0426\u041f-6 --wsTypeZIL_APA_80 = 78; --\u0410\u044d\u0440\u043e\u0434\u0440\u043e\u043c\u043d\u044b\u0439 \u043f\u0443\u0441\u043a\u043e\u0432\u043e\u0439 \u0430\u0433\u0440\u0435\u0433\u0430\u0442 \u0417\u0438\u041b \u0410\u041f\u0410-80 wsTypeZIL_131_KUNG = 79; --\u0413\u0440\u0443\u0437\u043e\u0432\u0438\u043a \u0417\u0438\u041b-131 \u041a\u0423\u041d\u0413 wsType_Stryker = 80; --wsTypeM1126_Stryker_ICV = 80; --\u0411\u0422\u0420 M1126 Stryker ICV --wsTypeM1128_Stryker_MGS = 81; --\u0411\u0422\u0420 M1128 Stryker MGS --wsTypeM1134_Stryker_ATGM = 82; --\u0411\u0422\u0420 M1134 Stryker ATGM --wsTypeMTLB = 83; --wsTypeBTR80 = 84; --wsTypeT72 = 85; --wsTypeT55 = 86; --wsTypeM1043 = 87; -- \u0445\u0430\u043c\u043c\u0435\u0440 + M2 --wsTypeM1045 = 88; -- \u0445\u0430\u043c\u043c\u0435\u0440 + TOW --wsTypeLeClerc = 89; wsType_GenericInfantry = 90; --wsTypeRPG = 90; --wsTypeAutogun = 91; --wsTypeHEMTT_M978 = 92; --wsTypeSoldier_AK = 93; --wsTypeSoldier_RPG = 94; --wsTypeBOMAN = 95; wsType_GenericFort = 96; --wsTypeSandbox = 96; --wsTypeBunker = 97; -- \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c LastTankType --LastTankType = wsTypeBunker;-- \u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e Tank-\u0430 wsTypeSteamLocomotive = 99; ----------------------------------------------------------------------/ -- \u0421\u041f\u0418\u0421\u041e\u041a \u041d\u0410\u0417\u0415\u041c\u041d\u042b\u0425 \u041e\u0411\u042a\u0415\u041a\u0422\u041e\u0412 (\u041a\u041e\u041d\u0415\u0426) ----------------------------------------------------------------------/ --************************************************* -- \u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0434\u043b\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0431\u043b\u0443\u0447\u0435\u043d\u0438\u0438 !!! \u043d\u0435 \u0432\u0445\u043e\u0434\u044f\u0442 \u0432 Level 1,2,3,4--* wsRadarAir = 101;-- wsRadarLongRange = 102;-- wsRadarMidRange = 103;-- wsRadarShrtRange = 104;-- wsRadarEWS = 105;-- wsRadarEngagement = 106;-- wsTypeLauncher = 107; wsTypeComandPost = 108; wsRadarOptical = 109; wsRadarAWACS = 110; wsRadarActiveHoming = 111; -- \u041f\u0443\u0448\u043a\u0438 Gun__ = 241; -- \u043f\u0435\u0440\u0435\u0434\u043d\u044f\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 Gun__1= 242; -- \u043a\u043e\u0440\u043c\u043e\u0432\u0430\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u043f\u0443\u0448\u043a\u0430 -- \u0411\u0430\u043b\u043e\u0447\u043d\u044b\u0435 \u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u0438 \u0441 \u043f\u043e\u0434\u0432\u0435\u0441\u043a\u0430\u043c\u0438 -- wsType_Weapon, wsType_Missile(Bomb), wsType_Container MBD_FAB_100 = 1; -- MDB & 6 FAB-100 MBD_FAB_250 = 2; -- MDB & 6 FAB-250 MBD_FAB_500 = 3; -- MDB & 6 FAB-500 MBD_BETAB_250 = 4; -- MDB & 6 BETAB-250 MBD_ODAB = 5; -- MDB & 6 ODAB MBD_PB_250 = 6; -- MDB & 6 PB-250 MBD_RBK_250 = 7; -- MDB & 6 RBK-250 MBD_RBK_500AO = 8; -- MDB & 6 RBK-500AO MBD_RBK_500SOAB = 9; -- MDB & 6 RBK-500SOAB MBD_ZAB = 10; -- MDB & 6 ZAB MBD_CBU_97 = 11; -- MDB & 6 CBU-97 MBD_M_117 = 12; -- MDB & 6 M-117AB MBD_MK_81 = 13; -- MDB & 6 MK-81 MBD_MK_82 = 14; -- MDB & 6 MK-84 MBD_Rockeye = 15; -- MDB & 6 Rockeye MBD_3_FAB_100 = 16; -- MDB-3 & 3 FAB-100 MBD_3_FAB_250 = 17; -- MDB-3 & 3 FAB-250 MBD_3_FAB_500 = 18; -- MDB-3 & 3 FAB-500 MBD_3_BETAB_250 = 19; -- MDB-3 & 3 BETAB-250 MBD_3_ODAB = 20; -- MDB-3 & 3 ODAB MBD_3_PB_250 = 21; -- MDB-3 & 3 PB-250 MBD_3_RBK_250 = 22; -- MDB-3 & 3 RBK-250 MBD_3_RBK_500AO = 23; -- MDB-3 & 3 RBK-500AO MBD_3_RBK_500SOAB = 24; -- MDB-3 & 3 RBK-500SOAB MBD_3_ZAB = 25; -- MDB-3 & 3 ZAB MBD_3_CBU_97 = 26; -- MDB-3 & 3 CBU-97 MBD_3_M_117 = 27; -- MDB-3 & 3 M-117AB MBD_3_MK_81 = 28; -- MDB-3 & 3 MK-81 MBD_3_MK_82 = 29; -- MDB-3 & 3 MK-84 MBD_3_Rockeye = 30; -- MDB-3 & 3 Rockeye MBD_3_GBU_16 = 31; -- MDB-3 & 3 GBU_16 MBD_4_FAB_100 = 32; -- MDB-4 & 4 FAB-100 LAU_88_AGM_65K = 33; -- LAU_88 & 3 AGM-65K TU_22_FAB_100 = 34; -- TU-22M3-MBD & 9 FAB-100 TU_22_FAB_250 = 35; -- TU-22M3-MBD & 9 FAB-250 TU_22_BETAB_250 = 36; -- TU-22M3-MBD & 9 BETAB-250 TU_22_PB_250 = 37; -- TU-22M3-MBD & 9 PB-250 TU_22_RBK_250 = 38; -- TU-22M3-MBD & 9 RBK_250 TU_22_FAB_500 = 39; -- TU-22M3-MBD & 6 FAB-500 TU_22_BETAB_500 = 40; -- TU-22M3-MBD & 6 BETAB_500 TU_22_BETAB_500SP = 41; -- TU-22M3-MBD & 6 BETAB_500SP TU_22_ODAB = 42; -- TU-22M3-MBD & 6 ODAB TU_22_RBK_500AO = 43; -- TU-22M3-MBD & 6 RBK_500AO TU_22_RBK_500SOAB = 44; -- TU-22M3-MBD & 6 RBK_500SOAB TU_22_ZAB = 45; -- TU-22M3-MBD & 6 ZAB VICHR = 46; -- Vikhr (AT-12) {air-tank} VICHR_M = 47; -- Vikhr-M (AT-X-16) {air-tank} LAU_88_AGM_65D = 48; -- LAU_88 & 3 AGM-65D LAU_88_AGM_65E = 49; -- LAU_88 & 3 AGM-65E MBD_A10_2_AIM_9 = 50; -- MBD_A10_2 & 2 AIM_9 MBD_F2_2_Mk_82 = 51; -- MBD F2_2 & 2 Mk_82 MBD_F2_2_Mk_83 = 52; -- MBD F2_2 & 2 Mk_83 MBD_F2_2_Puma = 53; -- MBD F2_2 & 2 Puma MBD_F2_2_BL_755 = 54; -- MBD F2_2 & 2 BL_755 MBD_F2_2_ROCKEYE = 55; -- MBD F2_2 & 2 ROCKEYE MBD_F2_2_ALARM = 56; -- MBD F2_2 & 2 ALARM MBD_3_GBU_22 = 57; -- MDB-3 & 3 GBU_22 AGM_114_Pilon_4 = 58; -- AGM_114_Pilon & 4 AGM_114 AGM_114K_Pilon_4 = 59; -- AGM_114_Pilon & 4 AGM_114K SHTURM = 60; -- SHTURM MER_AIM_9_2 = 61; -- F4_PILON & 2 AIM-9 MER_L_P_60_2 = 62; -- MER_L_P_60 & 2 P-60 MER_R_P_60_2 = 63; -- MER_R_P_60 & 2 P-60 MER_TOW_4 = 64; -- MER_TOW & 4 TOW LAU_88_AGM_65K_2_LEFT = 65; -- LAU_88 & 2(6) AGM_65K (left) LAU_88_AGM_65D_2_LEFT = 66; -- LAU_88 & 2(6) AGM_65D (left) MER_6_AGM_86C = 67; -- MBD_B52_6 & 6 AGM_86C MBD_FAB_250_2 = 68; -- MDB & 2(6) FAB_250 MBD_RBK_250_2 = 69; -- MDB & 2(6) RBK_250 MBD_BetAB_250_2 = 70; -- MDB & 2(6) BetAB_250 TU_22_FAB_1500_2 = 71; -- TU-22M3-MBD & 2(9) FAB-1500 MBD_3_BetAB_500 = 72; -- MDB-3 & 3 BetAB_500 MER_2_F_18_CBU_97 = 73; -- MER_2_F_18 & 2 CBU_97 MER_12_B52_Mk_82 = 74; -- MER_12_B52 & 12 Mk_82 MER_6_BLU_107 = 75; -- MDB & 6 BLU-107 MER_12_B52_M_117 = 76; -- MER_12_B52 & 12 M_117 MER_9_B52_CBU_97 = 77; -- MER_9_B52 & 9 CBU_97 MER_9_B52_Mk_84 = 78; -- MER_9_B52 & 9 Mk_84 MER_9_B52_Rockeye = 79; -- MER_9_B52 & 9 Rockeye MBD_4_RBK_250 = 80; -- MDB-4 & 4 RBK_250 MBD_4_FAB_250 = 81; -- MDB-4 & 4 FAB_250 MER_6_2_PB_250 = 82; -- MBD & 2 PB_250 MER_6_4_PB_250 = 83; -- MBD & 4 PB_250 MER_6_4_FAB_250 = 84; -- MBD & 4 FAB_250 SUU_25_8_LUU_2 = 85; -- SUU_25 & 8 LUU_2B APU_6_VICHR_M = 86; -- APU_6_VIKHR & 6 Vikhr_M S_25L_PU = 87; -- S_25L & PU MBD_2_67U_FAB_100 = 88; -- MBD_2_67U & FAB_100 AKU_58_X_58 = 91; -- AKU_58 & X_58 AKU_58_X_29T = 92; -- AKU_58 & X_29T AKU_58_X_29L = 93; -- AKU_58 & X_29L KMGU_2_AO_2_5RT = 94; -- KMGU-2 & AO_2_5RT KMGU_2_PTAB_2_5KO = 95; -- KMGU-2 & PTAB_2_5KO AKU_58_X_31A = 96; -- AKU-58 & X-31A AKU_58_X_31P = 97; -- AKU-58 & X-31P AKU_58_X_35 = 98; -- AKU-58 & X-35 APU_68_X_25ML = 99; -- APU-68 & X-25ML APU_68_X_25MP = 100; -- APU-68 & X-25MP APU_68_C_24 = 101; -- APU-68 & C-24 APU_73_P_73 = 102; -- APU-73 & R-73 APU_170_P_77 = 103; -- APU-170 & R-77 LAU_88_AGM_65E_2_LEFT = 104; -- LAU_88 & 2(6) AGM_65E (left) LAU_88_AGM_65K_2_RIGHT = 105; -- LAU_88 & 2(6) AGM_65K (right) LAU_88_AGM_65D_2_RIGHT = 106; -- LAU_88 & 2(6) AGM_65D (right) LAU_88_AGM_65E_2_RIGHT = 107; -- LAU_88 & 2(6) AGM_65E (right) LAU_117_AGM_65K = 108; -- LAU_117 & AGM_65K LAU_117_AGM_65D = 109; -- LAU_117 & AGM_65D LAU_117_AGM_65E = 110; -- LAU_117 & AGM_65E -- A-10C TER_3_BDU_33 = 114; LAU_117_AGM_65H = 125; -- LAU_117 & AGM_65H LAU_117_AGM_65G = 126; -- LAU_117 & AGM_65G TER_3_GBU_12 = 127 ; -- BRU-42 3*GBU_12 LAU_105_1_AIM_9M_L = 128 ; LAU_105_2_CATM_9M = 129 ; LAU_105_1_CATM_9M_L = 130 ; TER_3_MK82AIR = 131 ; TER_FREE = 132; LAU_105_FREE = 133; LAU_88_AGM_65H = 134; LAU_88_AGM_65H_2_L = 135 ; LAU_88_AGM_65H_2_R = 136 ; LAU_88_AGM_65H_3 = 137 ; LAU_117_TGM_65D = 138 ; LAU_117_TGM_65G = 139 ; LAU_117_TGM_65H = 140 ; LAU_117_CATM_65K = 141 ; LAU_105_1_AIM_9M_R = 142 ; LAU_105_1_CATM_9M_R = 143 ; TER_3_SUU_25_8_LUU_2 = 144 ; LAU_88_AGM_65D_ONE = 145 ; APU_68_X_25MR = 170 ; AKU_58_X_59 = 171 ;","title":"wsTypes.lua"},{"location":"EDM-Export/Animations/","text":"Animations # Basic Setup # Timeline # Open the EDM Export Properties Panel, and click the reset button. This will configure blenders timeline into the required format. You should now see the timeline change to a range of 0-200, and the timeline marker snap to 100. For DCS animation, I reccomend the Action editor, which can be found by selecting the dope sheet, then changing the mode to Action Editor. Default Interpolation # The EDM format treats the space between keyframes as linear, although by default, blender does not. To change this, navigate to Edit > Preferences then select Animation then change Default Interpolation to Linear Before you start # It is important to apply rotation and scale before starting animations. Location does not need to be applied. Warning If you don't do this, you may find the resulting export have some strange translations that are not visible in blender. Skin Animations # Warning Max 4 bones per deforming mesh","title":"Animations"},{"location":"EDM-Export/Animations/#animations","text":"","title":"Animations"},{"location":"EDM-Export/Animations/#basic-setup","text":"","title":"Basic Setup"},{"location":"EDM-Export/Animations/#timeline","text":"Open the EDM Export Properties Panel, and click the reset button. This will configure blenders timeline into the required format. You should now see the timeline change to a range of 0-200, and the timeline marker snap to 100. For DCS animation, I reccomend the Action editor, which can be found by selecting the dope sheet, then changing the mode to Action Editor.","title":"Timeline"},{"location":"EDM-Export/Animations/#default-interpolation","text":"The EDM format treats the space between keyframes as linear, although by default, blender does not. To change this, navigate to Edit > Preferences then select Animation then change Default Interpolation to Linear","title":"Default Interpolation"},{"location":"EDM-Export/Animations/#before-you-start","text":"It is important to apply rotation and scale before starting animations. Location does not need to be applied. Warning If you don't do this, you may find the resulting export have some strange translations that are not visible in blender.","title":"Before you start"},{"location":"EDM-Export/Animations/#skin-animations","text":"Warning Max 4 bones per deforming mesh","title":"Skin Animations"},{"location":"EDM-Export/Lights/","text":"","title":"Lights"},{"location":"EDM-Export/Mesh/","text":"Exporting A Mesh to DCS # Preparing the Material # To export your first mesh into the .edm format, start with a blank blender cube, as seen below. The \"Front\" of your model faces positive X, so be sure to face the nose of your vehicle or aircraft towards positive X. Note Make sure your mesh has its Rotation and scale applied, this can be done by selecting your mesh, pressing CTRL + A and selecting Rotation and Scale Switch to the shading tab, if the cube does not have a material by default, create one. Next, We will need to configure the material nodes with the EDM Materials. First, remove the default Principled BSDF node, but leave the Material Output Node. Next, Either by pressing SHIFT + A or by clicking Add in the Node Editor, navigate to EDM Materials > Material - Default. With the EDM_Default_Material Node in place, connect the BSDF point of the EDM material to the Surface point of the Material Output . An example of this can be seen below. Exporting to EDM # We're now ready to export our cube to an .edm file! Navigate to File > Export > Eagle Dynamics Model (.edm) Then Name and save your file in your desired location by clicking export to EDM Opening in ModelViewer # Open ModelViewer, and go to File > Load Model or CTRL + N Navigate to your edm file, select it, then press load You should now see a white cube, very similar to the image below. Multiple Meshes/Materials # Any object with an EDM material assigned will export to DCS, if you add a second mesh, assign either your existing EDM material, or add a new one, and it will export to DCS Multiple Materials per Mesh # The ED Exporter supports multiple materials per mesh, there is nothing special needed to setup, just all materials in the mesh need to be configured to be EDM materials. Adding a Texture # Back in the node editor, go to Add > Texture > Image Texture Then connect the Color and Alpha points on the image texture to the Base Color and Base Alpha points of the EDM Material Select your image in the Image Texture Node. Your project should look similar to the image below. repeat the steps in Exporting to EDM Then close and re-poen modelviewer, and reload your EDM file Warning Textures will not appear in ModelViewer unless they are properly mounted. A typical working directory structure is: (if this doesnt work, send Hayds_93 a DM on discord and I'll update it) Project/ \u251c\u2500 Shapes/ \u2502 \u2514\u2500 cube.edm \u2514\u2500 Textures/ \u2514\u2500 cube.png RoughMets and Normals # Adding RoughMets and Normals is simple. Add two more Image Texture nodes. Connect the color point of one to RoughMet (Non-Color) and the color point on the other to Normal (Non-Color) The result should look like: Export your model, restart modelviewer, then load in your new model. Note Setting the Color Space fields of the RoughMet and Normal nodes to Non-Color will make blender render the textures properly. However not setting this will not affect the resulting edm export, so can be safely ignored Blender Project Structre # While not necessary, you can bake all LODs (Level of Detail) and the collision model into one .edm file. Starting with an EXPORT Collection, then having sub-collections for collision, and LOD_{LOD_NUMBER}_{LOD_DISTANCE_IN_M} (eg. LOD_0_50 ). Each sub collection should have a copy of the mesh, and they should not share animations or parents. Duplicate the animation empties, then re-apply the actions to the new empties.","title":"Mesh"},{"location":"EDM-Export/Mesh/#exporting-a-mesh-to-dcs","text":"","title":"Exporting A Mesh to DCS"},{"location":"EDM-Export/Mesh/#preparing-the-material","text":"To export your first mesh into the .edm format, start with a blank blender cube, as seen below. The \"Front\" of your model faces positive X, so be sure to face the nose of your vehicle or aircraft towards positive X. Note Make sure your mesh has its Rotation and scale applied, this can be done by selecting your mesh, pressing CTRL + A and selecting Rotation and Scale Switch to the shading tab, if the cube does not have a material by default, create one. Next, We will need to configure the material nodes with the EDM Materials. First, remove the default Principled BSDF node, but leave the Material Output Node. Next, Either by pressing SHIFT + A or by clicking Add in the Node Editor, navigate to EDM Materials > Material - Default. With the EDM_Default_Material Node in place, connect the BSDF point of the EDM material to the Surface point of the Material Output . An example of this can be seen below.","title":"Preparing the Material"},{"location":"EDM-Export/Mesh/#exporting-to-edm","text":"We're now ready to export our cube to an .edm file! Navigate to File > Export > Eagle Dynamics Model (.edm) Then Name and save your file in your desired location by clicking export to EDM","title":"Exporting to EDM"},{"location":"EDM-Export/Mesh/#opening-in-modelviewer","text":"Open ModelViewer, and go to File > Load Model or CTRL + N Navigate to your edm file, select it, then press load You should now see a white cube, very similar to the image below.","title":"Opening in ModelViewer"},{"location":"EDM-Export/Mesh/#multiple-meshesmaterials","text":"Any object with an EDM material assigned will export to DCS, if you add a second mesh, assign either your existing EDM material, or add a new one, and it will export to DCS","title":"Multiple Meshes/Materials"},{"location":"EDM-Export/Mesh/#multiple-materials-per-mesh","text":"The ED Exporter supports multiple materials per mesh, there is nothing special needed to setup, just all materials in the mesh need to be configured to be EDM materials.","title":"Multiple Materials per Mesh"},{"location":"EDM-Export/Mesh/#adding-a-texture","text":"Back in the node editor, go to Add > Texture > Image Texture Then connect the Color and Alpha points on the image texture to the Base Color and Base Alpha points of the EDM Material Select your image in the Image Texture Node. Your project should look similar to the image below. repeat the steps in Exporting to EDM Then close and re-poen modelviewer, and reload your EDM file Warning Textures will not appear in ModelViewer unless they are properly mounted. A typical working directory structure is: (if this doesnt work, send Hayds_93 a DM on discord and I'll update it) Project/ \u251c\u2500 Shapes/ \u2502 \u2514\u2500 cube.edm \u2514\u2500 Textures/ \u2514\u2500 cube.png","title":"Adding a Texture"},{"location":"EDM-Export/Mesh/#roughmets-and-normals","text":"Adding RoughMets and Normals is simple. Add two more Image Texture nodes. Connect the color point of one to RoughMet (Non-Color) and the color point on the other to Normal (Non-Color) The result should look like: Export your model, restart modelviewer, then load in your new model. Note Setting the Color Space fields of the RoughMet and Normal nodes to Non-Color will make blender render the textures properly. However not setting this will not affect the resulting edm export, so can be safely ignored","title":"RoughMets and Normals"},{"location":"EDM-Export/Mesh/#blender-project-structre","text":"While not necessary, you can bake all LODs (Level of Detail) and the collision model into one .edm file. Starting with an EXPORT Collection, then having sub-collections for collision, and LOD_{LOD_NUMBER}_{LOD_DISTANCE_IN_M} (eg. LOD_0_50 ). Each sub collection should have a copy of the mesh, and they should not share animations or parents. Duplicate the animation empties, then re-apply the actions to the new empties.","title":"Blender Project Structre"},{"location":"EDM-Export/Overview/","text":"Eagle Dynamics DCS Blender Export Plugin # Intro # I've compiled this documentation since the docs included with the plugin in the manual folder are out of date, and complete, with poor formatting. However the template EDM files are very useful. Note There are no changelogs or any public info about this other than what is included in the downloaded .zip Warning This guide assumes general blender knowledge, including materials, animation. Installation # The Blender plugin can be downloaded from here Install the .zip file into blender in edit > preferences. Note At time of writing, the plugin has not been updated since March 11 2025. The plugin is still work in progress, and some features will not work. Download Examples # I have made the files used in this guide available to download from the links below. Cube Example Blender File Texture Animation Test Blender File Skin Animation Test Blender File Help me # Feel free to create a pull request and contribute your findings","title":"Overview"},{"location":"EDM-Export/Overview/#eagle-dynamics-dcs-blender-export-plugin","text":"","title":"Eagle Dynamics DCS Blender Export Plugin"},{"location":"EDM-Export/Overview/#intro","text":"I've compiled this documentation since the docs included with the plugin in the manual folder are out of date, and complete, with poor formatting. However the template EDM files are very useful. Note There are no changelogs or any public info about this other than what is included in the downloaded .zip Warning This guide assumes general blender knowledge, including materials, animation.","title":"Intro"},{"location":"EDM-Export/Overview/#installation","text":"The Blender plugin can be downloaded from here Install the .zip file into blender in edit > preferences. Note At time of writing, the plugin has not been updated since March 11 2025. The plugin is still work in progress, and some features will not work.","title":"Installation"},{"location":"EDM-Export/Overview/#download-examples","text":"I have made the files used in this guide available to download from the links below. Cube Example Blender File Texture Animation Test Blender File Skin Animation Test Blender File","title":"Download Examples"},{"location":"EDM-Export/Overview/#help-me","text":"Feel free to create a pull request and contribute your findings","title":"Help me"}]}